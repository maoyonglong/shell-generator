{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/types.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/hash.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uint.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","global","__webpack_exports__","isWindows","isWeb","globals","_isWindows","_isWeb","_userAgent","isElectronRenderer","versions","electron","type","navigator","platform","rawNlsConfig","env","nlsConfig","JSON","parse","availableLanguages","locale","_translationsConfigFile","e","userAgent","indexOf","maxTouchPoints","language","self","setImmediate","postMessage","importScripts","pending_1","addEventListener","data","vscodeSetImmediateId","len","length","candidate","id","splice","callback","lastId_1","myId","push","nextTick","Promise","resolve","g","this","Function","window","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","Item","array","noop","args","Array","arguments","apply","title","browser","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","factory","finallyConstructor","constructor","then","reason","reject","setTimeoutFunc","fn","TypeError","_state","_handled","_value","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","promise","newValue","finale","thisArg","_unhandledRejectionFn","done","ex","prom","all","arr","slice","remaining","res","val","race","values","err","console","warn","globalNS","scope","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","undefined","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","toString","runIfPresent","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","Math","random","onGlobalMessage","event","source","attachEvent","MessageChannel","channel","port1","port2","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","task","errorHandler","ErrorHandler","unexpectedErrorHandler","stack","message","forEach","listener","onUnexpectedError","onUnexpectedExternalError","error","canceledName","isPromiseCanceledError","transformErrorForSerialization","$isError","stacktrace","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","x","Disposable","None","_a","trackDisposable","log","combinedDisposable","disposables","_i","dispose","isArray","DisposableStore","_toDispose","Set","_isDisposed","clear","add","_store","_register","freeze","MutableDisposable","set","configurable","getAllMethodNames","obj","methods","proto","getOwnPropertyNames","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","result","methodNames_1","methodName","__extends","extendStatics","b","setPrototypeOf","__proto__","__","INITIALIZE","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","_this","req","String","_send","vsWorker","handleMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","detail","transfer","ArrayBuffer","simpleWorker_SimpleWorkerServer","_super","SimpleWorkerClient","workerFactory","host","lazyProxyReject","_worker","_protocol","getId","loaderConfiguration","require","getConfig","requirejs","contexts","_","config","hostMethods","_onModuleLoaded","stringify","proxyMethodRequest","_request","_lazyProxy","availableMethods","_onError","getProxyObject","info","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","initialize","loaderConfig","hostProxy","baseUrl","paths","vs","catchError","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","numberHash","initialHashVal","stringHash","hashVal","length_1","charCodeAt","StringDiffSequence","getElements","characters","Int32Array","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","changes","Iterator","Debug","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","Copy2","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","reverse","LcsDiff","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_getElements","originalStringElements","originalElementsOrHash","originalHasStrings","_b","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","_isStringArray","sequence","elements","hashes","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","rightChanges","leftChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","max","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","_OriginalIsBoundary","index","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","iterator_extends","FIN","_empty","next","empty","single","fromArray","fromNativeIterator","it","from","map","iterator","element","filter","collect","atMost","Number","POSITIVE_INFINITY","iterators","chain","ChainableIterator","ArrayNavigator","items","start","end","current","previous","first","last","parent","ArrayIterator","uri_a","uri_extends","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","uri_URI","URI","schemeOrData","authority","path","query","fragment","_strict","scheme","isUri","thing","fsPath","with","_makeFsPath","_URI","match","exec","percentDecode","file","replace","idx","substring","components","skipEncoding","_asFormatted","toJSON","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","code","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","fromCharCode","_rEncodedAsHex","str","decodeURIComponentGraceful","decodeURIComponent","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","equals","other","a","isBefore","isBeforeOrEqual","compare","aLineNumber","bLineNumber","clone","lift","isIPosition","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","position","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","GraphemeBreakTree","_data","getInstance","_INSTANCE","getGraphemeBreakType","codePoint","nodeCount","nodeIndex","computeDiff","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","shouldIgnoreTrimWhitespace","startIndex","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","continueLineDiff","createContinueProcessingPredicate","maxComputationTime","diffResult","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","defaultValue","chCode","maximumRuntime","startTime","Date","now","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","low","high","mid","midStop","midStart","mirrorTextModel_MirrorTextModel","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","getText","join","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","insertText","insertLines","split","newLengths","DEFAULT_WORD_REGEXP","allowInWords","USUAL_WORD_SEPARATORS_1","sep","RegExp","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","Uint8Array","charCode","Uint8Matrix","CharacterSet","has","rows","cols","row","StateMachine","edges","maxCharCode","maxState","to","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","lastIndexOf","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","event_Event","Node","Undefined","prev","linkedList_LinkedList","LinkedList","_first","_last","_size","unshift","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","shift","pop","node","anchor","toArray","event_extends","Event","thisArgs","didFire","snapshot","each","reduce","merge","initial","output","emitter","event_Emitter","onFirstListenerAdd","fire","onLastListenerRemove","debounce","delay","leading","leakWarningThreshold","subscription","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","signal","any","events","stopwatch","getTime","buffer","_buffer","flush","onFirstListenerDidAdd","ChainableEvent","fromNodeEventEmitter","eventName","fromDOMEventEmitter","removeEventListener","fromPromise","toPromise","cancellation_CancellationToken","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","_warnCountdown","_stacks","check","listenerCount","threshold","count","topStack_1","topCount_1","Emitter","options","_disposed","_options","_leakageMon","_event","_listeners","firstListener","removeMonitor","remove","onListenerDidAdd","size","_noop","_deliveryQueue","iter","event_1","shortcutEvent","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","pause","resume","EventMultiplexer","hasListeners","hook","didCall","unhook","EventBufferer","buffers","wrapEvent","bufferEvents","Relay","listening","inputEvent","inputEventListener","context","CancellationToken","isCancellationToken","Cancelled","cancellation_MutableToken","isCancellationRequested","onCancellationRequested","KeyCodeUtils","MutableToken","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","_parentListener","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","toChord","keyCodes_ChordKeybinding","isDuplicateModifierCase","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","MinimapPosition","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemTag","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","SymbolTag","ChordKeybinding","parts","selection_extends","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","Token","offset","standaloneBase_KeyMod","KeyMod","chord","firstPart","secondPart","CtrlCmd","Shift","Alt","WinCtrl","editorSimpleWorker_extends","__awaiter","_arguments","P","generator","fulfilled","step","rejected","__generator","body","f","y","label","sent","trys","ops","verb","throw","return","op","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordDefinition","wordAtText","textOffset","lastIndex","matchIndex","word","flags","ignoreCase","multiline","unicode","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","content","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_EditorSimpleWorker","EditorSimpleWorker","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","_getModel","_getModels","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","originalUrl","modifiedUrl","ignoreTrimWhitespace","diffComputer","identical","_modelsAreIdentical","originalLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","editOffset","newEdit","_c","_sort","lo","hi","aux","leftIdx","rightIdx","mergeSort","_diffLimit","textualSuggest","wordDef","wordDefFlags","seen","wordDefRegExp","wordAt","_suggestionsLimit","computeWordRanges","words_1","selectionText","wordRange","loadForeignModule","createData","foreignHostMethods","ctx","fhr","getMirrorModels","fmr","monaco","editor","languages","Uri","initialized","foreignModule","simpleWorker"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar LANGUAGE_DEFAULT = 'en';\r\nvar _isWindows = false;\r\nvar _isMacintosh = false;\r\nvar _isLinux = false;\r\nvar _isNative = false;\r\nvar _isWeb = false;\r\nvar _isIOS = false;\r\nvar _locale = undefined;\r\nvar _language = LANGUAGE_DEFAULT;\r\nvar _translationsConfigFile = undefined;\r\nvar _userAgent = undefined;\r\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\r\n// OS detection\r\nif (typeof navigator === 'object' && !isElectronRenderer) {\r\n    _userAgent = navigator.userAgent;\r\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\r\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\r\n    _isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\r\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\r\n    _isWeb = true;\r\n    _locale = navigator.language;\r\n    _language = _locale;\r\n}\r\nelse if (typeof process === 'object') {\r\n    _isWindows = (process.platform === 'win32');\r\n    _isMacintosh = (process.platform === 'darwin');\r\n    _isLinux = (process.platform === 'linux');\r\n    _locale = LANGUAGE_DEFAULT;\r\n    _language = LANGUAGE_DEFAULT;\r\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\r\n    if (rawNlsConfig) {\r\n        try {\r\n            var nlsConfig = JSON.parse(rawNlsConfig);\r\n            var resolved = nlsConfig.availableLanguages['*'];\r\n            _locale = nlsConfig.locale;\r\n            // VSCode's default language is 'en'\r\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\r\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    _isNative = true;\r\n}\r\nvar _platform = 0 /* Web */;\r\nif (_isMacintosh) {\r\n    _platform = 1 /* Mac */;\r\n}\r\nelse if (_isWindows) {\r\n    _platform = 3 /* Windows */;\r\n}\r\nelse if (_isLinux) {\r\n    _platform = 2 /* Linux */;\r\n}\r\nexport var isWindows = _isWindows;\r\nexport var isMacintosh = _isMacintosh;\r\nexport var isLinux = _isLinux;\r\nexport var isNative = _isNative;\r\nexport var isWeb = _isWeb;\r\nexport var isIOS = _isIOS;\r\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\r\nexport var globals = _globals;\r\nexport var setImmediate = (function defineSetImmediate() {\r\n    if (globals.setImmediate) {\r\n        return globals.setImmediate.bind(globals);\r\n    }\r\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\r\n        var pending_1 = [];\r\n        globals.addEventListener('message', function (e) {\r\n            if (e.data && e.data.vscodeSetImmediateId) {\r\n                for (var i = 0, len = pending_1.length; i < len; i++) {\r\n                    var candidate = pending_1[i];\r\n                    if (candidate.id === e.data.vscodeSetImmediateId) {\r\n                        pending_1.splice(i, 1);\r\n                        candidate.callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        var lastId_1 = 0;\r\n        return function (callback) {\r\n            var myId = ++lastId_1;\r\n            pending_1.push({\r\n                id: myId,\r\n                callback: callback\r\n            });\r\n            globals.postMessage({ vscodeSetImmediateId: myId }, '*');\r\n        };\r\n    }\r\n    if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\r\n        return process.nextTick.bind(process);\r\n    }\r\n    var _promise = Promise.resolve();\r\n    return function (callback) { return _promise.then(callback); };\r\n})();\r\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\r\nvar ErrorHandler = /** @class */ (function () {\r\n    function ErrorHandler() {\r\n        this.listeners = [];\r\n        this.unexpectedErrorHandler = function (e) {\r\n            setTimeout(function () {\r\n                if (e.stack) {\r\n                    throw new Error(e.message + '\\n\\n' + e.stack);\r\n                }\r\n                throw e;\r\n            }, 0);\r\n        };\r\n    }\r\n    ErrorHandler.prototype.emit = function (e) {\r\n        this.listeners.forEach(function (listener) {\r\n            listener(e);\r\n        });\r\n    };\r\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\r\n        this.unexpectedErrorHandler(e);\r\n        this.emit(e);\r\n    };\r\n    // For external errors, we don't want the listeners to be called\r\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\r\n        this.unexpectedErrorHandler(e);\r\n    };\r\n    return ErrorHandler;\r\n}());\r\nexport { ErrorHandler };\r\nexport var errorHandler = new ErrorHandler();\r\nexport function onUnexpectedError(e) {\r\n    // ignore errors from cancelled promises\r\n    if (!isPromiseCanceledError(e)) {\r\n        errorHandler.onUnexpectedError(e);\r\n    }\r\n    return undefined;\r\n}\r\nexport function onUnexpectedExternalError(e) {\r\n    // ignore errors from cancelled promises\r\n    if (!isPromiseCanceledError(e)) {\r\n        errorHandler.onUnexpectedExternalError(e);\r\n    }\r\n    return undefined;\r\n}\r\nexport function transformErrorForSerialization(error) {\r\n    if (error instanceof Error) {\r\n        var name_1 = error.name, message = error.message;\r\n        var stack = error.stacktrace || error.stack;\r\n        return {\r\n            $isError: true,\r\n            name: name_1,\r\n            message: message,\r\n            stack: stack\r\n        };\r\n    }\r\n    // return as is\r\n    return error;\r\n}\r\nvar canceledName = 'Canceled';\r\n/**\r\n * Checks if the given error is a promise in canceled state\r\n */\r\nexport function isPromiseCanceledError(error) {\r\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\r\n}\r\n/**\r\n * Returns an error that signals cancellation.\r\n */\r\nexport function canceled() {\r\n    var error = new Error(canceledName);\r\n    error.name = error.message;\r\n    return error;\r\n}\r\nexport function illegalArgument(name) {\r\n    if (name) {\r\n        return new Error(\"Illegal argument: \" + name);\r\n    }\r\n    else {\r\n        return new Error('Illegal argument');\r\n    }\r\n}\r\nexport function illegalState(name) {\r\n    if (name) {\r\n        return new Error(\"Illegal state: \" + name);\r\n    }\r\n    else {\r\n        return new Error('Illegal state');\r\n    }\r\n}\r\n","/**\r\n * Enables logging of potentially leaked disposables.\r\n *\r\n * A disposable is considered leaked if it is not disposed or not registered as the child of\r\n * another disposable. This tracking is very simple an only works for classes that either\r\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\r\n */\r\nvar TRACK_DISPOSABLES = false;\r\nvar __is_disposable_tracked__ = '__is_disposable_tracked__';\r\nfunction markTracked(x) {\r\n    if (!TRACK_DISPOSABLES) {\r\n        return;\r\n    }\r\n    if (x && x !== Disposable.None) {\r\n        try {\r\n            x[__is_disposable_tracked__] = true;\r\n        }\r\n        catch (_a) {\r\n            // noop\r\n        }\r\n    }\r\n}\r\nfunction trackDisposable(x) {\r\n    if (!TRACK_DISPOSABLES) {\r\n        return x;\r\n    }\r\n    var stack = new Error('Potentially leaked disposable').stack;\r\n    setTimeout(function () {\r\n        if (!x[__is_disposable_tracked__]) {\r\n            console.log(stack);\r\n        }\r\n    }, 3000);\r\n    return x;\r\n}\r\nexport function isDisposable(thing) {\r\n    return typeof thing.dispose === 'function'\r\n        && thing.dispose.length === 0;\r\n}\r\nexport function dispose(disposables) {\r\n    if (Array.isArray(disposables)) {\r\n        disposables.forEach(function (d) {\r\n            if (d) {\r\n                markTracked(d);\r\n                d.dispose();\r\n            }\r\n        });\r\n        return [];\r\n    }\r\n    else if (disposables) {\r\n        markTracked(disposables);\r\n        disposables.dispose();\r\n        return disposables;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexport function combinedDisposable() {\r\n    var disposables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        disposables[_i] = arguments[_i];\r\n    }\r\n    disposables.forEach(markTracked);\r\n    return trackDisposable({ dispose: function () { return dispose(disposables); } });\r\n}\r\nexport function toDisposable(fn) {\r\n    var self = trackDisposable({\r\n        dispose: function () {\r\n            markTracked(self);\r\n            fn();\r\n        }\r\n    });\r\n    return self;\r\n}\r\nvar DisposableStore = /** @class */ (function () {\r\n    function DisposableStore() {\r\n        this._toDispose = new Set();\r\n        this._isDisposed = false;\r\n    }\r\n    /**\r\n     * Dispose of all registered disposables and mark this object as disposed.\r\n     *\r\n     * Any future disposables added to this object will be disposed of on `add`.\r\n     */\r\n    DisposableStore.prototype.dispose = function () {\r\n        if (this._isDisposed) {\r\n            return;\r\n        }\r\n        markTracked(this);\r\n        this._isDisposed = true;\r\n        this.clear();\r\n    };\r\n    /**\r\n     * Dispose of all registered disposables but do not mark this object as disposed.\r\n     */\r\n    DisposableStore.prototype.clear = function () {\r\n        this._toDispose.forEach(function (item) { return item.dispose(); });\r\n        this._toDispose.clear();\r\n    };\r\n    DisposableStore.prototype.add = function (t) {\r\n        if (!t) {\r\n            return t;\r\n        }\r\n        if (t === this) {\r\n            throw new Error('Cannot register a disposable on itself!');\r\n        }\r\n        markTracked(t);\r\n        if (this._isDisposed) {\r\n            console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\r\n        }\r\n        else {\r\n            this._toDispose.add(t);\r\n        }\r\n        return t;\r\n    };\r\n    return DisposableStore;\r\n}());\r\nexport { DisposableStore };\r\nvar Disposable = /** @class */ (function () {\r\n    function Disposable() {\r\n        this._store = new DisposableStore();\r\n        trackDisposable(this);\r\n    }\r\n    Disposable.prototype.dispose = function () {\r\n        markTracked(this);\r\n        this._store.dispose();\r\n    };\r\n    Disposable.prototype._register = function (t) {\r\n        if (t === this) {\r\n            throw new Error('Cannot register a disposable on itself!');\r\n        }\r\n        return this._store.add(t);\r\n    };\r\n    Disposable.None = Object.freeze({ dispose: function () { } });\r\n    return Disposable;\r\n}());\r\nexport { Disposable };\r\n/**\r\n * Manages the lifecycle of a disposable value that may be changed.\r\n *\r\n * This ensures that when the the disposable value is changed, the previously held disposable is disposed of. You can\r\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\r\n */\r\nvar MutableDisposable = /** @class */ (function () {\r\n    function MutableDisposable() {\r\n        this._isDisposed = false;\r\n        trackDisposable(this);\r\n    }\r\n    Object.defineProperty(MutableDisposable.prototype, \"value\", {\r\n        get: function () {\r\n            return this._isDisposed ? undefined : this._value;\r\n        },\r\n        set: function (value) {\r\n            if (this._isDisposed || value === this._value) {\r\n                return;\r\n            }\r\n            if (this._value) {\r\n                this._value.dispose();\r\n            }\r\n            if (value) {\r\n                markTracked(value);\r\n            }\r\n            this._value = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MutableDisposable.prototype.clear = function () {\r\n        this.value = undefined;\r\n    };\r\n    MutableDisposable.prototype.dispose = function () {\r\n        this._isDisposed = true;\r\n        markTracked(this);\r\n        if (this._value) {\r\n            this._value.dispose();\r\n        }\r\n        this._value = undefined;\r\n    };\r\n    return MutableDisposable;\r\n}());\r\nexport { MutableDisposable };\r\nvar ImmortalReference = /** @class */ (function () {\r\n    function ImmortalReference(object) {\r\n        this.object = object;\r\n    }\r\n    ImmortalReference.prototype.dispose = function () { };\r\n    return ImmortalReference;\r\n}());\r\nexport { ImmortalReference };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _typeof = {\r\n    number: 'number',\r\n    string: 'string',\r\n    undefined: 'undefined',\r\n    object: 'object',\r\n    function: 'function'\r\n};\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\r\nexport function isString(str) {\r\n    if (typeof (str) === _typeof.string || str instanceof String) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\r\nexport function isObject(obj) {\r\n    // The method can't do a type cast since there are type (like strings) which\r\n    // are subclasses of any put not positvely matched by the function. Hence type\r\n    // narrowing results in wrong results.\r\n    return typeof obj === _typeof.object\r\n        && obj !== null\r\n        && !Array.isArray(obj)\r\n        && !(obj instanceof RegExp)\r\n        && !(obj instanceof Date);\r\n}\r\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\r\nexport function isNumber(obj) {\r\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\r\nexport function isBoolean(obj) {\r\n    return obj === true || obj === false;\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\r\nexport function isUndefined(obj) {\r\n    return typeof (obj) === _typeof.undefined;\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\r\nexport function isUndefinedOrNull(obj) {\r\n    return isUndefined(obj) || obj === null;\r\n}\r\nexport function assertType(condition, type) {\r\n    if (!condition) {\r\n        throw new Error(type ? \"Unexpected type, expected '\" + type + \"'\" : 'Unexpected type');\r\n    }\r\n}\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/**\r\n * @returns whether the provided parameter is an empty JavaScript Object or not.\r\n */\r\nexport function isEmptyObject(obj) {\r\n    if (!isObject(obj)) {\r\n        return false;\r\n    }\r\n    for (var key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\r\nexport function isFunction(obj) {\r\n    return typeof obj === _typeof.function;\r\n}\r\nexport function validateConstraints(args, constraints) {\r\n    var len = Math.min(args.length, constraints.length);\r\n    for (var i = 0; i < len; i++) {\r\n        validateConstraint(args[i], constraints[i]);\r\n    }\r\n}\r\nexport function validateConstraint(arg, constraint) {\r\n    if (isString(constraint)) {\r\n        if (typeof arg !== constraint) {\r\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\r\n        }\r\n    }\r\n    else if (isFunction(constraint)) {\r\n        try {\r\n            if (arg instanceof constraint) {\r\n                return;\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // ignore\r\n        }\r\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\r\n            return;\r\n        }\r\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\r\n            return;\r\n        }\r\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\r\n    }\r\n}\r\nexport function getAllPropertyNames(obj) {\r\n    var res = [];\r\n    var proto = Object.getPrototypeOf(obj);\r\n    while (Object.prototype !== proto) {\r\n        res = res.concat(Object.getOwnPropertyNames(proto));\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return res;\r\n}\r\nexport function getAllMethodNames(obj) {\r\n    var methods = [];\r\n    for (var _i = 0, _a = getAllPropertyNames(obj); _i < _a.length; _i++) {\r\n        var prop = _a[_i];\r\n        if (typeof obj[prop] === 'function') {\r\n            methods.push(prop);\r\n        }\r\n    }\r\n    return methods;\r\n}\r\nexport function createProxyObject(methodNames, invoke) {\r\n    var createProxyMethod = function (method) {\r\n        return function () {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            return invoke(method, args);\r\n        };\r\n    };\r\n    var result = {};\r\n    for (var _i = 0, methodNames_1 = methodNames; _i < methodNames_1.length; _i++) {\r\n        var methodName = methodNames_1[_i];\r\n        result[methodName] = createProxyMethod(methodName);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\r\nexport function withNullAsUndefined(x) {\r\n    return x === null ? undefined : x;\r\n}\r\n/**\r\n * Converts undefined to null, passes all other values through.\r\n */\r\nexport function withUndefinedAsNull(x) {\r\n    return typeof x === 'undefined' ? null : x;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { transformErrorForSerialization } from '../errors.js';\r\nimport { Disposable } from '../lifecycle.js';\r\nimport { isWeb } from '../platform.js';\r\nimport * as types from '../types.js';\r\nvar INITIALIZE = '$initialize';\r\nvar webWorkerWarningLogged = false;\r\nexport function logOnceWebWorkerWarning(err) {\r\n    if (!isWeb) {\r\n        // running tests\r\n        return;\r\n    }\r\n    if (!webWorkerWarningLogged) {\r\n        webWorkerWarningLogged = true;\r\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\r\n    }\r\n    console.warn(err.message);\r\n}\r\nvar SimpleWorkerProtocol = /** @class */ (function () {\r\n    function SimpleWorkerProtocol(handler) {\r\n        this._workerId = -1;\r\n        this._handler = handler;\r\n        this._lastSentReq = 0;\r\n        this._pendingReplies = Object.create(null);\r\n    }\r\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\r\n        this._workerId = workerId;\r\n    };\r\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\r\n        var _this = this;\r\n        var req = String(++this._lastSentReq);\r\n        return new Promise(function (resolve, reject) {\r\n            _this._pendingReplies[req] = {\r\n                resolve: resolve,\r\n                reject: reject\r\n            };\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                req: req,\r\n                method: method,\r\n                args: args\r\n            });\r\n        });\r\n    };\r\n    SimpleWorkerProtocol.prototype.handleMessage = function (message) {\r\n        if (!message || !message.vsWorker) {\r\n            return;\r\n        }\r\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\r\n            return;\r\n        }\r\n        this._handleMessage(message);\r\n    };\r\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\r\n        var _this = this;\r\n        if (msg.seq) {\r\n            var replyMessage = msg;\r\n            if (!this._pendingReplies[replyMessage.seq]) {\r\n                console.warn('Got reply to unknown seq');\r\n                return;\r\n            }\r\n            var reply = this._pendingReplies[replyMessage.seq];\r\n            delete this._pendingReplies[replyMessage.seq];\r\n            if (replyMessage.err) {\r\n                var err = replyMessage.err;\r\n                if (replyMessage.err.$isError) {\r\n                    err = new Error();\r\n                    err.name = replyMessage.err.name;\r\n                    err.message = replyMessage.err.message;\r\n                    err.stack = replyMessage.err.stack;\r\n                }\r\n                reply.reject(err);\r\n                return;\r\n            }\r\n            reply.resolve(replyMessage.res);\r\n            return;\r\n        }\r\n        var requestMessage = msg;\r\n        var req = requestMessage.req;\r\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\r\n        result.then(function (r) {\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: r,\r\n                err: undefined\r\n            });\r\n        }, function (e) {\r\n            if (e.detail instanceof Error) {\r\n                // Loading errors have a detail property that points to the actual error\r\n                e.detail = transformErrorForSerialization(e.detail);\r\n            }\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: undefined,\r\n                err: transformErrorForSerialization(e)\r\n            });\r\n        });\r\n    };\r\n    SimpleWorkerProtocol.prototype._send = function (msg) {\r\n        var transfer = [];\r\n        if (msg.req) {\r\n            var m = msg;\r\n            for (var i = 0; i < m.args.length; i++) {\r\n                if (m.args[i] instanceof ArrayBuffer) {\r\n                    transfer.push(m.args[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var m = msg;\r\n            if (m.res instanceof ArrayBuffer) {\r\n                transfer.push(m.res);\r\n            }\r\n        }\r\n        this._handler.sendMessage(msg, transfer);\r\n    };\r\n    return SimpleWorkerProtocol;\r\n}());\r\n/**\r\n * Main thread side\r\n */\r\nvar SimpleWorkerClient = /** @class */ (function (_super) {\r\n    __extends(SimpleWorkerClient, _super);\r\n    function SimpleWorkerClient(workerFactory, moduleId, host) {\r\n        var _this = _super.call(this) || this;\r\n        var lazyProxyReject = null;\r\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\r\n            _this._protocol.handleMessage(msg);\r\n        }, function (err) {\r\n            // in Firefox, web workers fail lazily :(\r\n            // we will reject the proxy\r\n            if (lazyProxyReject) {\r\n                lazyProxyReject(err);\r\n            }\r\n        }));\r\n        _this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg, transfer) {\r\n                _this._worker.postMessage(msg, transfer);\r\n            },\r\n            handleMessage: function (method, args) {\r\n                if (typeof host[method] !== 'function') {\r\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\r\n                }\r\n                try {\r\n                    return Promise.resolve(host[method].apply(host, args));\r\n                }\r\n                catch (e) {\r\n                    return Promise.reject(e);\r\n                }\r\n            }\r\n        });\r\n        _this._protocol.setWorkerId(_this._worker.getId());\r\n        // Gather loader configuration\r\n        var loaderConfiguration = null;\r\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\r\n            // Get the configuration from the Monaco AMD Loader\r\n            loaderConfiguration = self.require.getConfig();\r\n        }\r\n        else if (typeof self.requirejs !== 'undefined') {\r\n            // Get the configuration from requirejs\r\n            loaderConfiguration = self.requirejs.s.contexts._.config;\r\n        }\r\n        var hostMethods = types.getAllMethodNames(host);\r\n        // Send initialize message\r\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\r\n            _this._worker.getId(),\r\n            JSON.parse(JSON.stringify(loaderConfiguration)),\r\n            moduleId,\r\n            hostMethods,\r\n        ]);\r\n        // Create proxy to loaded code\r\n        var proxyMethodRequest = function (method, args) {\r\n            return _this._request(method, args);\r\n        };\r\n        _this._lazyProxy = new Promise(function (resolve, reject) {\r\n            lazyProxyReject = reject;\r\n            _this._onModuleLoaded.then(function (availableMethods) {\r\n                resolve(types.createProxyObject(availableMethods, proxyMethodRequest));\r\n            }, function (e) {\r\n                reject(e);\r\n                _this._onError('Worker failed to load ' + moduleId, e);\r\n            });\r\n        });\r\n        return _this;\r\n    }\r\n    SimpleWorkerClient.prototype.getProxyObject = function () {\r\n        return this._lazyProxy;\r\n    };\r\n    SimpleWorkerClient.prototype._request = function (method, args) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._onModuleLoaded.then(function () {\r\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\r\n            }, reject);\r\n        });\r\n    };\r\n    SimpleWorkerClient.prototype._onError = function (message, error) {\r\n        console.error(message);\r\n        console.info(error);\r\n    };\r\n    return SimpleWorkerClient;\r\n}(Disposable));\r\nexport { SimpleWorkerClient };\r\n/**\r\n * Worker side\r\n */\r\nvar SimpleWorkerServer = /** @class */ (function () {\r\n    function SimpleWorkerServer(postMessage, requestHandlerFactory) {\r\n        var _this = this;\r\n        this._requestHandlerFactory = requestHandlerFactory;\r\n        this._requestHandler = null;\r\n        this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg, transfer) {\r\n                postMessage(msg, transfer);\r\n            },\r\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\r\n        });\r\n    }\r\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\r\n        this._protocol.handleMessage(msg);\r\n    };\r\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\r\n        if (method === INITIALIZE) {\r\n            return this.initialize(args[0], args[1], args[2], args[3]);\r\n        }\r\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    SimpleWorkerServer.prototype.initialize = function (workerId, loaderConfig, moduleId, hostMethods) {\r\n        var _this = this;\r\n        this._protocol.setWorkerId(workerId);\r\n        var proxyMethodRequest = function (method, args) {\r\n            return _this._protocol.sendMessage(method, args);\r\n        };\r\n        var hostProxy = types.createProxyObject(hostMethods, proxyMethodRequest);\r\n        if (this._requestHandlerFactory) {\r\n            // static request handler\r\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\r\n            return Promise.resolve(types.getAllMethodNames(this._requestHandler));\r\n        }\r\n        if (loaderConfig) {\r\n            // Remove 'baseUrl', handling it is beyond scope for now\r\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\r\n                delete loaderConfig['baseUrl'];\r\n            }\r\n            if (typeof loaderConfig.paths !== 'undefined') {\r\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\r\n                    delete loaderConfig.paths['vs'];\r\n                }\r\n            }\r\n            // Since this is in a web worker, enable catching errors\r\n            loaderConfig.catchError = true;\r\n            self.require.config(loaderConfig);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            // Use the global require to be sure to get the global config\r\n            self.require([moduleId], function (module) {\r\n                _this._requestHandler = module.create(hostProxy);\r\n                if (!_this._requestHandler) {\r\n                    reject(new Error(\"No RequestHandler!\"));\r\n                    return;\r\n                }\r\n                resolve(types.getAllMethodNames(_this._requestHandler));\r\n            }, reject);\r\n        });\r\n    };\r\n    return SimpleWorkerServer;\r\n}());\r\nexport { SimpleWorkerServer };\r\n/**\r\n * Called on the worker side\r\n */\r\nexport function create(postMessage) {\r\n    return new SimpleWorkerServer(postMessage, null);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * Represents information about a specific difference between two sequences.\r\n */\r\nvar DiffChange = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new DiffChange with the given sequence information\r\n     * and content.\r\n     */\r\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\r\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\r\n        this.originalStart = originalStart;\r\n        this.originalLength = originalLength;\r\n        this.modifiedStart = modifiedStart;\r\n        this.modifiedLength = modifiedLength;\r\n    }\r\n    /**\r\n     * The end point (exclusive) of the change in the original sequence.\r\n     */\r\n    DiffChange.prototype.getOriginalEnd = function () {\r\n        return this.originalStart + this.originalLength;\r\n    };\r\n    /**\r\n     * The end point (exclusive) of the change in the modified sequence.\r\n     */\r\n    DiffChange.prototype.getModifiedEnd = function () {\r\n        return this.modifiedStart + this.modifiedLength;\r\n    };\r\n    return DiffChange;\r\n}());\r\nexport { DiffChange };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * Return a hash value for an object.\r\n */\r\nexport function hash(obj, hashVal) {\r\n    if (hashVal === void 0) { hashVal = 0; }\r\n    switch (typeof obj) {\r\n        case 'object':\r\n            if (obj === null) {\r\n                return numberHash(349, hashVal);\r\n            }\r\n            else if (Array.isArray(obj)) {\r\n                return arrayHash(obj, hashVal);\r\n            }\r\n            return objectHash(obj, hashVal);\r\n        case 'string':\r\n            return stringHash(obj, hashVal);\r\n        case 'boolean':\r\n            return booleanHash(obj, hashVal);\r\n        case 'number':\r\n            return numberHash(obj, hashVal);\r\n        case 'undefined':\r\n            return numberHash(0, 937);\r\n        default:\r\n            return numberHash(0, 617);\r\n    }\r\n}\r\nfunction numberHash(val, initialHashVal) {\r\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\r\n}\r\nfunction booleanHash(b, initialHashVal) {\r\n    return numberHash(b ? 433 : 863, initialHashVal);\r\n}\r\nexport function stringHash(s, hashVal) {\r\n    hashVal = numberHash(149417, hashVal);\r\n    for (var i = 0, length_1 = s.length; i < length_1; i++) {\r\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\r\n    }\r\n    return hashVal;\r\n}\r\nfunction arrayHash(arr, initialHashVal) {\r\n    initialHashVal = numberHash(104579, initialHashVal);\r\n    return arr.reduce(function (hashVal, item) { return hash(item, hashVal); }, initialHashVal);\r\n}\r\nfunction objectHash(obj, initialHashVal) {\r\n    initialHashVal = numberHash(181387, initialHashVal);\r\n    return Object.keys(obj).sort().reduce(function (hashVal, key) {\r\n        hashVal = stringHash(key, hashVal);\r\n        return hash(obj[key], hashVal);\r\n    }, initialHashVal);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { DiffChange } from './diffChange.js';\r\nimport { stringHash } from '../hash.js';\r\nvar StringDiffSequence = /** @class */ (function () {\r\n    function StringDiffSequence(source) {\r\n        this.source = source;\r\n    }\r\n    StringDiffSequence.prototype.getElements = function () {\r\n        var source = this.source;\r\n        var characters = new Int32Array(source.length);\r\n        for (var i = 0, len = source.length; i < len; i++) {\r\n            characters[i] = source.charCodeAt(i);\r\n        }\r\n        return characters;\r\n    };\r\n    return StringDiffSequence;\r\n}());\r\nexport { StringDiffSequence };\r\nexport function stringDiff(original, modified, pretty) {\r\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\r\n}\r\n//\r\n// The code below has been ported from a C# implementation in VS\r\n//\r\nvar Debug = /** @class */ (function () {\r\n    function Debug() {\r\n    }\r\n    Debug.Assert = function (condition, message) {\r\n        if (!condition) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n    return Debug;\r\n}());\r\nexport { Debug };\r\nvar MyArray = /** @class */ (function () {\r\n    function MyArray() {\r\n    }\r\n    /**\r\n     * Copies a range of elements from an Array starting at the specified source index and pastes\r\n     * them to another Array starting at the specified destination index. The length and the indexes\r\n     * are specified as 64-bit integers.\r\n     * sourceArray:\r\n     *\t\tThe Array that contains the data to copy.\r\n     * sourceIndex:\r\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\r\n     * destinationArray:\r\n     *\t\tThe Array that receives the data.\r\n     * destinationIndex:\r\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\r\n     * length:\r\n     *\t\tA 64-bit integer that represents the number of elements to copy.\r\n     */\r\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\r\n        for (var i = 0; i < length; i++) {\r\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\r\n        }\r\n    };\r\n    MyArray.Copy2 = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\r\n        for (var i = 0; i < length; i++) {\r\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\r\n        }\r\n    };\r\n    return MyArray;\r\n}());\r\nexport { MyArray };\r\n/**\r\n * A utility class which helps to create the set of DiffChanges from\r\n * a difference operation. This class accepts original DiffElements and\r\n * modified DiffElements that are involved in a particular change. The\r\n * MarktNextChange() method can be called to mark the separation between\r\n * distinct changes. At the end, the Changes property can be called to retrieve\r\n * the constructed changes.\r\n */\r\nvar DiffChangeHelper = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\r\n     */\r\n    function DiffChangeHelper() {\r\n        this.m_changes = [];\r\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        this.m_originalCount = 0;\r\n        this.m_modifiedCount = 0;\r\n    }\r\n    /**\r\n     * Marks the beginning of the next change in the set of differences.\r\n     */\r\n    DiffChangeHelper.prototype.MarkNextChange = function () {\r\n        // Only add to the list if there is something to add\r\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n            // Add the new change to our list\r\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\r\n        }\r\n        // Reset for the next change\r\n        this.m_originalCount = 0;\r\n        this.m_modifiedCount = 0;\r\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n    };\r\n    /**\r\n     * Adds the original element at the given position to the elements\r\n     * affected by the current change. The modified index gives context\r\n     * to the change position with respect to the original sequence.\r\n     * @param originalIndex The index of the original element to add.\r\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\r\n     */\r\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\r\n        // The 'true' start index is the smallest of the ones we've seen\r\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\r\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\r\n        this.m_originalCount++;\r\n    };\r\n    /**\r\n     * Adds the modified element at the given position to the elements\r\n     * affected by the current change. The original index gives context\r\n     * to the change position with respect to the modified sequence.\r\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\r\n     * @param modifiedIndex The index of the modified element to add.\r\n     */\r\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\r\n        // The 'true' start index is the smallest of the ones we've seen\r\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\r\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\r\n        this.m_modifiedCount++;\r\n    };\r\n    /**\r\n     * Retrieves all of the changes marked by the class.\r\n     */\r\n    DiffChangeHelper.prototype.getChanges = function () {\r\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n            // Finish up on whatever is left\r\n            this.MarkNextChange();\r\n        }\r\n        return this.m_changes;\r\n    };\r\n    /**\r\n     * Retrieves all of the changes marked by the class in the reverse order\r\n     */\r\n    DiffChangeHelper.prototype.getReverseChanges = function () {\r\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n            // Finish up on whatever is left\r\n            this.MarkNextChange();\r\n        }\r\n        this.m_changes.reverse();\r\n        return this.m_changes;\r\n    };\r\n    return DiffChangeHelper;\r\n}());\r\n/**\r\n * An implementation of the difference algorithm described in\r\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\r\n */\r\nvar LcsDiff = /** @class */ (function () {\r\n    /**\r\n     * Constructs the DiffFinder\r\n     */\r\n    function LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate) {\r\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\r\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\r\n        var _a = LcsDiff._getElements(originalSequence), originalStringElements = _a[0], originalElementsOrHash = _a[1], originalHasStrings = _a[2];\r\n        var _b = LcsDiff._getElements(modifiedSequence), modifiedStringElements = _b[0], modifiedElementsOrHash = _b[1], modifiedHasStrings = _b[2];\r\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\r\n        this._originalStringElements = originalStringElements;\r\n        this._originalElementsOrHash = originalElementsOrHash;\r\n        this._modifiedStringElements = modifiedStringElements;\r\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\r\n        this.m_forwardHistory = [];\r\n        this.m_reverseHistory = [];\r\n    }\r\n    LcsDiff._isStringArray = function (arr) {\r\n        return (arr.length > 0 && typeof arr[0] === 'string');\r\n    };\r\n    LcsDiff._getElements = function (sequence) {\r\n        var elements = sequence.getElements();\r\n        if (LcsDiff._isStringArray(elements)) {\r\n            var hashes = new Int32Array(elements.length);\r\n            for (var i = 0, len = elements.length; i < len; i++) {\r\n                hashes[i] = stringHash(elements[i], 0);\r\n            }\r\n            return [elements, hashes, true];\r\n        }\r\n        if (elements instanceof Int32Array) {\r\n            return [[], elements, false];\r\n        }\r\n        return [[], new Int32Array(elements), false];\r\n    };\r\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\r\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\r\n            return false;\r\n        }\r\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\r\n    };\r\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\r\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\r\n            return false;\r\n        }\r\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\r\n    };\r\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\r\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\r\n            return false;\r\n        }\r\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\r\n    };\r\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\r\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\r\n    };\r\n    /**\r\n     * Computes the differences between the original and modified input\r\n     * sequences on the bounded range.\r\n     * @returns An array of the differences between the two input sequences.\r\n     */\r\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\r\n        var quitEarlyArr = [false];\r\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\r\n        if (pretty) {\r\n            // We have to clean up the computed diff to be more intuitive\r\n            // but it turns out this cannot be done correctly until the entire set\r\n            // of diffs have been computed\r\n            changes = this.PrettifyChanges(changes);\r\n        }\r\n        return {\r\n            quitEarly: quitEarlyArr[0],\r\n            changes: changes\r\n        };\r\n    };\r\n    /**\r\n     * Private helper method which computes the differences on the bounded range\r\n     * recursively.\r\n     * @returns An array of the differences between the two input sequences.\r\n     */\r\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\r\n        quitEarlyArr[0] = false;\r\n        // Find the start of the differences\r\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\r\n            originalStart++;\r\n            modifiedStart++;\r\n        }\r\n        // Find the end of the differences\r\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\r\n            originalEnd--;\r\n            modifiedEnd--;\r\n        }\r\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\r\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\r\n            var changes = void 0;\r\n            if (modifiedStart <= modifiedEnd) {\r\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\r\n                // All insertions\r\n                changes = [\r\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n                ];\r\n            }\r\n            else if (originalStart <= originalEnd) {\r\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\r\n                // All deletions\r\n                changes = [\r\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\r\n                ];\r\n            }\r\n            else {\r\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\r\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\r\n                // Identical sequences - No differences\r\n                changes = [];\r\n            }\r\n            return changes;\r\n        }\r\n        // This problem can be solved using the Divide-And-Conquer technique.\r\n        var midOriginalArr = [0];\r\n        var midModifiedArr = [0];\r\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\r\n        var midOriginal = midOriginalArr[0];\r\n        var midModified = midModifiedArr[0];\r\n        if (result !== null) {\r\n            // Result is not-null when there was enough memory to compute the changes while\r\n            // searching for the recursion point\r\n            return result;\r\n        }\r\n        else if (!quitEarlyArr[0]) {\r\n            // We can break the problem down recursively by finding the changes in the\r\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\r\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\r\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\r\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\r\n            var rightChanges = [];\r\n            if (!quitEarlyArr[0]) {\r\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\r\n            }\r\n            else {\r\n                // We did't have time to finish the first half, so we don't have time to compute this half.\r\n                // Consider the entire rest of the sequence different.\r\n                rightChanges = [\r\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\r\n                ];\r\n            }\r\n            return this.ConcatenateChanges(leftChanges, rightChanges);\r\n        }\r\n        // If we hit here, we quit early, and so can't return anything meaningful\r\n        return [\r\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n        ];\r\n    };\r\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\r\n        var forwardChanges = null;\r\n        var reverseChanges = null;\r\n        // First, walk backward through the forward diagonals history\r\n        var changeHelper = new DiffChangeHelper();\r\n        var diagonalMin = diagonalForwardStart;\r\n        var diagonalMax = diagonalForwardEnd;\r\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\r\n        var lastOriginalIndex = -1073741824 /* MIN_SAFE_SMALL_INTEGER */;\r\n        var historyIndex = this.m_forwardHistory.length - 1;\r\n        do {\r\n            // Get the diagonal index from the relative diagonal number\r\n            var diagonal = diagonalRelative + diagonalForwardBase;\r\n            // Figure out where we came from\r\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\r\n                // Vertical line (the element is an insert)\r\n                originalIndex = forwardPoints[diagonal + 1];\r\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\r\n                if (originalIndex < lastOriginalIndex) {\r\n                    changeHelper.MarkNextChange();\r\n                }\r\n                lastOriginalIndex = originalIndex;\r\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\r\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\r\n            }\r\n            else {\r\n                // Horizontal line (the element is a deletion)\r\n                originalIndex = forwardPoints[diagonal - 1] + 1;\r\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\r\n                if (originalIndex < lastOriginalIndex) {\r\n                    changeHelper.MarkNextChange();\r\n                }\r\n                lastOriginalIndex = originalIndex - 1;\r\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\r\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\r\n            }\r\n            if (historyIndex >= 0) {\r\n                forwardPoints = this.m_forwardHistory[historyIndex];\r\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\r\n                diagonalMin = 1;\r\n                diagonalMax = forwardPoints.length - 1;\r\n            }\r\n        } while (--historyIndex >= -1);\r\n        // Ironically, we get the forward changes as the reverse of the\r\n        // order we added them since we technically added them backwards\r\n        forwardChanges = changeHelper.getReverseChanges();\r\n        if (quitEarlyArr[0]) {\r\n            // TODO: Calculate a partial from the reverse diagonals.\r\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\r\n            var originalStartPoint = midOriginalArr[0] + 1;\r\n            var modifiedStartPoint = midModifiedArr[0] + 1;\r\n            if (forwardChanges !== null && forwardChanges.length > 0) {\r\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\r\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\r\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\r\n            }\r\n            reverseChanges = [\r\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\r\n            ];\r\n        }\r\n        else {\r\n            // Now walk backward through the reverse diagonals history\r\n            changeHelper = new DiffChangeHelper();\r\n            diagonalMin = diagonalReverseStart;\r\n            diagonalMax = diagonalReverseEnd;\r\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\r\n            lastOriginalIndex = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\r\n            do {\r\n                // Get the diagonal index from the relative diagonal number\r\n                var diagonal = diagonalRelative + diagonalReverseBase;\r\n                // Figure out where we came from\r\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\r\n                    // Horizontal line (the element is a deletion))\r\n                    originalIndex = reversePoints[diagonal + 1] - 1;\r\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\r\n                    if (originalIndex > lastOriginalIndex) {\r\n                        changeHelper.MarkNextChange();\r\n                    }\r\n                    lastOriginalIndex = originalIndex + 1;\r\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\r\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\r\n                }\r\n                else {\r\n                    // Vertical line (the element is an insertion)\r\n                    originalIndex = reversePoints[diagonal - 1];\r\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\r\n                    if (originalIndex > lastOriginalIndex) {\r\n                        changeHelper.MarkNextChange();\r\n                    }\r\n                    lastOriginalIndex = originalIndex;\r\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\r\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\r\n                }\r\n                if (historyIndex >= 0) {\r\n                    reversePoints = this.m_reverseHistory[historyIndex];\r\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\r\n                    diagonalMin = 1;\r\n                    diagonalMax = reversePoints.length - 1;\r\n                }\r\n            } while (--historyIndex >= -1);\r\n            // There are cases where the reverse history will find diffs that\r\n            // are correct, but not intuitive, so we need shift them.\r\n            reverseChanges = changeHelper.getChanges();\r\n        }\r\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\r\n    };\r\n    /**\r\n     * Given the range to compute the diff on, this method finds the point:\r\n     * (midOriginal, midModified)\r\n     * that exists in the middle of the LCS of the two sequences and\r\n     * is the point at which the LCS problem may be broken down recursively.\r\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\r\n     * point is calculated and the full trace is available in memory, then this method\r\n     * will return the change list.\r\n     * @param originalStart The start bound of the original sequence range\r\n     * @param originalEnd The end bound of the original sequence range\r\n     * @param modifiedStart The start bound of the modified sequence range\r\n     * @param modifiedEnd The end bound of the modified sequence range\r\n     * @param midOriginal The middle point of the original sequence range\r\n     * @param midModified The middle point of the modified sequence range\r\n     * @returns The diff changes, if available, otherwise null\r\n     */\r\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\r\n        var originalIndex = 0, modifiedIndex = 0;\r\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\r\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\r\n        // To traverse the edit graph and produce the proper LCS, our actual\r\n        // start position is just outside the given boundary\r\n        originalStart--;\r\n        modifiedStart--;\r\n        // We set these up to make the compiler happy, but they will\r\n        // be replaced before we return with the actual recursion point\r\n        midOriginalArr[0] = 0;\r\n        midModifiedArr[0] = 0;\r\n        // Clear out the history\r\n        this.m_forwardHistory = [];\r\n        this.m_reverseHistory = [];\r\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\r\n        // The integer value in the cell represents the originalIndex of the furthest\r\n        // reaching point found so far that ends in that diagonal.\r\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\r\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\r\n        var numDiagonals = maxDifferences + 1;\r\n        var forwardPoints = new Int32Array(numDiagonals);\r\n        var reversePoints = new Int32Array(numDiagonals);\r\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\r\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\r\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\r\n        var diagonalReverseBase = (originalEnd - originalStart);\r\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\r\n        //    diagonal number (relative to diagonalForwardBase)\r\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\r\n        //    diagonal number (relative to diagonalReverseBase)\r\n        var diagonalForwardOffset = (originalStart - modifiedStart);\r\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\r\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\r\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\r\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\r\n        var delta = diagonalReverseBase - diagonalForwardBase;\r\n        var deltaIsEven = (delta % 2 === 0);\r\n        // Here we set up the start and end points as the furthest points found so far\r\n        // in both the forward and reverse directions, respectively\r\n        forwardPoints[diagonalForwardBase] = originalStart;\r\n        reversePoints[diagonalReverseBase] = originalEnd;\r\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\r\n        quitEarlyArr[0] = false;\r\n        // A couple of points:\r\n        // --With this method, we iterate on the number of differences between the two sequences.\r\n        //   The more differences there actually are, the longer this will take.\r\n        // --Also, as the number of differences increases, we have to search on diagonals further\r\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\r\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\r\n        //   is even and odd diagonals only when numDifferences is odd.\r\n        for (var numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\r\n            var furthestOriginalIndex = 0;\r\n            var furthestModifiedIndex = 0;\r\n            // Run the algorithm in the forward direction\r\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\r\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\r\n            for (var diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\r\n                // STEP 1: We extend the furthest reaching point in the present diagonal\r\n                // by looking at the diagonals above and below and picking the one whose point\r\n                // is further away from the start point (originalStart, modifiedStart)\r\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\r\n                    originalIndex = forwardPoints[diagonal + 1];\r\n                }\r\n                else {\r\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\r\n                }\r\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\r\n                // Save the current originalIndex so we can test for false overlap in step 3\r\n                var tempOriginalIndex = originalIndex;\r\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\r\n                // so long as the elements are equal.\r\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\r\n                    originalIndex++;\r\n                    modifiedIndex++;\r\n                }\r\n                forwardPoints[diagonal] = originalIndex;\r\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\r\n                    furthestOriginalIndex = originalIndex;\r\n                    furthestModifiedIndex = modifiedIndex;\r\n                }\r\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\r\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\r\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\r\n                // then check for overlap.\r\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\r\n                    if (originalIndex >= reversePoints[diagonal]) {\r\n                        midOriginalArr[0] = originalIndex;\r\n                        midModifiedArr[0] = modifiedIndex;\r\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\r\n                            // BINGO! We overlapped, and we have the full trace in memory!\r\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n                        }\r\n                        else {\r\n                            // Either false overlap, or we didn't have enough memory for the full trace\r\n                            // Just return the recursion point\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Check to see if we should be quitting early, before moving on to the next iteration.\r\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\r\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\r\n                // We can't finish, so skip ahead to generating a result from what we have.\r\n                quitEarlyArr[0] = true;\r\n                // Use the furthest distance we got in the forward direction.\r\n                midOriginalArr[0] = furthestOriginalIndex;\r\n                midModifiedArr[0] = furthestModifiedIndex;\r\n                if (matchLengthOfLongest > 0 && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\r\n                    // Enough of the history is in memory to walk it backwards\r\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n                }\r\n                else {\r\n                    // We didn't actually remember enough of the history.\r\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\r\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\r\n                    originalStart++;\r\n                    modifiedStart++;\r\n                    return [\r\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n                    ];\r\n                }\r\n            }\r\n            // Run the algorithm in the reverse direction\r\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\r\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\r\n            for (var diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\r\n                // STEP 1: We extend the furthest reaching point in the present diagonal\r\n                // by looking at the diagonals above and below and picking the one whose point\r\n                // is further away from the start point (originalEnd, modifiedEnd)\r\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\r\n                    originalIndex = reversePoints[diagonal + 1] - 1;\r\n                }\r\n                else {\r\n                    originalIndex = reversePoints[diagonal - 1];\r\n                }\r\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\r\n                // Save the current originalIndex so we can test for false overlap\r\n                var tempOriginalIndex = originalIndex;\r\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\r\n                // as long as the elements are equal.\r\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\r\n                    originalIndex--;\r\n                    modifiedIndex--;\r\n                }\r\n                reversePoints[diagonal] = originalIndex;\r\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\r\n                // and diagonal is in the range of forward diagonals computed for numDifferences\r\n                // then check for overlap.\r\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\r\n                    if (originalIndex <= forwardPoints[diagonal]) {\r\n                        midOriginalArr[0] = originalIndex;\r\n                        midModifiedArr[0] = modifiedIndex;\r\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\r\n                            // BINGO! We overlapped, and we have the full trace in memory!\r\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n                        }\r\n                        else {\r\n                            // Either false overlap, or we didn't have enough memory for the full trace\r\n                            // Just return the recursion point\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Save current vectors to history before the next iteration\r\n            if (numDifferences <= 1447 /* MaxDifferencesHistory */) {\r\n                // We are allocating space for one extra int, which we fill with\r\n                // the index of the diagonal base index\r\n                var temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\r\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\r\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\r\n                this.m_forwardHistory.push(temp);\r\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\r\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\r\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\r\n                this.m_reverseHistory.push(temp);\r\n            }\r\n        }\r\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\r\n        // NOTE: This part is a bit messy\r\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n    };\r\n    /**\r\n     * Shifts the given changes to provide a more intuitive diff.\r\n     * While the first element in a diff matches the first element after the diff,\r\n     * we shift the diff down.\r\n     *\r\n     * @param changes The list of changes to shift\r\n     * @returns The shifted changes\r\n     */\r\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\r\n        // Shift all the changes down first\r\n        for (var i = 0; i < changes.length; i++) {\r\n            var change = changes[i];\r\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\r\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\r\n            var checkOriginal = change.originalLength > 0;\r\n            var checkModified = change.modifiedLength > 0;\r\n            while (change.originalStart + change.originalLength < originalStop &&\r\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\r\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\r\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\r\n                change.originalStart++;\r\n                change.modifiedStart++;\r\n            }\r\n            var mergedChangeArr = [null];\r\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\r\n                changes[i] = mergedChangeArr[0];\r\n                changes.splice(i + 1, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n        }\r\n        // Shift changes back up until we hit empty or whitespace-only lines\r\n        for (var i = changes.length - 1; i >= 0; i--) {\r\n            var change = changes[i];\r\n            var originalStop = 0;\r\n            var modifiedStop = 0;\r\n            if (i > 0) {\r\n                var prevChange = changes[i - 1];\r\n                if (prevChange.originalLength > 0) {\r\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\r\n                }\r\n                if (prevChange.modifiedLength > 0) {\r\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\r\n                }\r\n            }\r\n            var checkOriginal = change.originalLength > 0;\r\n            var checkModified = change.modifiedLength > 0;\r\n            var bestDelta = 0;\r\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\r\n            for (var delta = 1;; delta++) {\r\n                var originalStart = change.originalStart - delta;\r\n                var modifiedStart = change.modifiedStart - delta;\r\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\r\n                    break;\r\n                }\r\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\r\n                    break;\r\n                }\r\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\r\n                    break;\r\n                }\r\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\r\n                if (score > bestScore) {\r\n                    bestScore = score;\r\n                    bestDelta = delta;\r\n                }\r\n            }\r\n            change.originalStart -= bestDelta;\r\n            change.modifiedStart -= bestDelta;\r\n        }\r\n        return changes;\r\n    };\r\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\r\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\r\n            return true;\r\n        }\r\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\r\n    };\r\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\r\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\r\n            return true;\r\n        }\r\n        if (originalLength > 0) {\r\n            var originalEnd = originalStart + originalLength;\r\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\r\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\r\n            return true;\r\n        }\r\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\r\n    };\r\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\r\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\r\n            return true;\r\n        }\r\n        if (modifiedLength > 0) {\r\n            var modifiedEnd = modifiedStart + modifiedLength;\r\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\r\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\r\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\r\n        return (originalScore + modifiedScore);\r\n    };\r\n    /**\r\n     * Concatenates the two input DiffChange lists and returns the resulting\r\n     * list.\r\n     * @param The left changes\r\n     * @param The right changes\r\n     * @returns The concatenated list\r\n     */\r\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\r\n        var mergedChangeArr = [];\r\n        if (left.length === 0 || right.length === 0) {\r\n            return (right.length > 0) ? right : left;\r\n        }\r\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\r\n            // Since we break the problem down recursively, it is possible that we\r\n            // might recurse in the middle of a change thereby splitting it into\r\n            // two changes. Here in the combining stage, we detect and fuse those\r\n            // changes back together\r\n            var result = new Array(left.length + right.length - 1);\r\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\r\n            result[left.length - 1] = mergedChangeArr[0];\r\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\r\n            return result;\r\n        }\r\n        else {\r\n            var result = new Array(left.length + right.length);\r\n            MyArray.Copy(left, 0, result, 0, left.length);\r\n            MyArray.Copy(right, 0, result, left.length, right.length);\r\n            return result;\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if the two changes overlap and can be merged into a single\r\n     * change\r\n     * @param left The left change\r\n     * @param right The right change\r\n     * @param mergedChange The merged change if the two overlap, null otherwise\r\n     * @returns True if the two changes overlap\r\n     */\r\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\r\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\r\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\r\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\r\n            var originalStart = left.originalStart;\r\n            var originalLength = left.originalLength;\r\n            var modifiedStart = left.modifiedStart;\r\n            var modifiedLength = left.modifiedLength;\r\n            if (left.originalStart + left.originalLength >= right.originalStart) {\r\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\r\n            }\r\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\r\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\r\n            }\r\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\r\n            return true;\r\n        }\r\n        else {\r\n            mergedChangeArr[0] = null;\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Helper method used to clip a diagonal index to the range of valid\r\n     * diagonals. This also decides whether or not the diagonal index,\r\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\r\n     * one inside the boundary depending on the Even/Odd status of the boundary\r\n     * and numDifferences.\r\n     * @param diagonal The index of the diagonal to clip.\r\n     * @param numDifferences The current number of differences being iterated upon.\r\n     * @param diagonalBaseIndex The base reference diagonal.\r\n     * @param numDiagonals The total number of diagonals.\r\n     * @returns The clipped diagonal index.\r\n     */\r\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\r\n        if (diagonal >= 0 && diagonal < numDiagonals) {\r\n            // Nothing to clip, its in range\r\n            return diagonal;\r\n        }\r\n        // diagonalsBelow: The number of diagonals below the reference diagonal\r\n        // diagonalsAbove: The number of diagonals above the reference diagonal\r\n        var diagonalsBelow = diagonalBaseIndex;\r\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\r\n        var diffEven = (numDifferences % 2 === 0);\r\n        if (diagonal < 0) {\r\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\r\n            return (diffEven === lowerBoundEven) ? 0 : 1;\r\n        }\r\n        else {\r\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\r\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\r\n        }\r\n    };\r\n    return LcsDiff;\r\n}());\r\nexport { LcsDiff };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexport var FIN = { done: true, value: undefined };\r\nexport var Iterator;\r\n(function (Iterator) {\r\n    var _empty = {\r\n        next: function () {\r\n            return FIN;\r\n        }\r\n    };\r\n    function empty() {\r\n        return _empty;\r\n    }\r\n    Iterator.empty = empty;\r\n    function single(value) {\r\n        var done = false;\r\n        return {\r\n            next: function () {\r\n                if (done) {\r\n                    return FIN;\r\n                }\r\n                done = true;\r\n                return { done: false, value: value };\r\n            }\r\n        };\r\n    }\r\n    Iterator.single = single;\r\n    function fromArray(array, index, length) {\r\n        if (index === void 0) { index = 0; }\r\n        if (length === void 0) { length = array.length; }\r\n        return {\r\n            next: function () {\r\n                if (index >= length) {\r\n                    return FIN;\r\n                }\r\n                return { done: false, value: array[index++] };\r\n            }\r\n        };\r\n    }\r\n    Iterator.fromArray = fromArray;\r\n    function fromNativeIterator(it) {\r\n        return {\r\n            next: function () {\r\n                var result = it.next();\r\n                if (result.done) {\r\n                    return FIN;\r\n                }\r\n                return { done: false, value: result.value };\r\n            }\r\n        };\r\n    }\r\n    Iterator.fromNativeIterator = fromNativeIterator;\r\n    function from(elements) {\r\n        if (!elements) {\r\n            return Iterator.empty();\r\n        }\r\n        else if (Array.isArray(elements)) {\r\n            return Iterator.fromArray(elements);\r\n        }\r\n        else {\r\n            return elements;\r\n        }\r\n    }\r\n    Iterator.from = from;\r\n    function map(iterator, fn) {\r\n        return {\r\n            next: function () {\r\n                var element = iterator.next();\r\n                if (element.done) {\r\n                    return FIN;\r\n                }\r\n                else {\r\n                    return { done: false, value: fn(element.value) };\r\n                }\r\n            }\r\n        };\r\n    }\r\n    Iterator.map = map;\r\n    function filter(iterator, fn) {\r\n        return {\r\n            next: function () {\r\n                while (true) {\r\n                    var element = iterator.next();\r\n                    if (element.done) {\r\n                        return FIN;\r\n                    }\r\n                    if (fn(element.value)) {\r\n                        return { done: false, value: element.value };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    Iterator.filter = filter;\r\n    function forEach(iterator, fn) {\r\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\r\n            fn(next.value);\r\n        }\r\n    }\r\n    Iterator.forEach = forEach;\r\n    function collect(iterator, atMost) {\r\n        if (atMost === void 0) { atMost = Number.POSITIVE_INFINITY; }\r\n        var result = [];\r\n        if (atMost === 0) {\r\n            return result;\r\n        }\r\n        var i = 0;\r\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\r\n            result.push(next.value);\r\n            if (++i >= atMost) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    Iterator.collect = collect;\r\n    function concat() {\r\n        var iterators = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            iterators[_i] = arguments[_i];\r\n        }\r\n        var i = 0;\r\n        return {\r\n            next: function () {\r\n                if (i >= iterators.length) {\r\n                    return FIN;\r\n                }\r\n                var iterator = iterators[i];\r\n                var result = iterator.next();\r\n                if (result.done) {\r\n                    i++;\r\n                    return this.next();\r\n                }\r\n                return result;\r\n            }\r\n        };\r\n    }\r\n    Iterator.concat = concat;\r\n    function chain(iterator) {\r\n        return new ChainableIterator(iterator);\r\n    }\r\n    Iterator.chain = chain;\r\n})(Iterator || (Iterator = {}));\r\nvar ChainableIterator = /** @class */ (function () {\r\n    function ChainableIterator(it) {\r\n        this.it = it;\r\n    }\r\n    ChainableIterator.prototype.next = function () { return this.it.next(); };\r\n    return ChainableIterator;\r\n}());\r\nexport { ChainableIterator };\r\nexport function getSequenceIterator(arg) {\r\n    if (Array.isArray(arg)) {\r\n        return Iterator.fromArray(arg);\r\n    }\r\n    else if (!arg) {\r\n        return Iterator.empty();\r\n    }\r\n    else {\r\n        return arg;\r\n    }\r\n}\r\nvar ArrayIterator = /** @class */ (function () {\r\n    function ArrayIterator(items, start, end, index) {\r\n        if (start === void 0) { start = 0; }\r\n        if (end === void 0) { end = items.length; }\r\n        if (index === void 0) { index = start - 1; }\r\n        this.items = items;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.index = index;\r\n    }\r\n    ArrayIterator.prototype.first = function () {\r\n        this.index = this.start;\r\n        return this.current();\r\n    };\r\n    ArrayIterator.prototype.next = function () {\r\n        this.index = Math.min(this.index + 1, this.end);\r\n        return this.current();\r\n    };\r\n    ArrayIterator.prototype.current = function () {\r\n        if (this.index === this.start - 1 || this.index === this.end) {\r\n            return null;\r\n        }\r\n        return this.items[this.index];\r\n    };\r\n    return ArrayIterator;\r\n}());\r\nexport { ArrayIterator };\r\nvar ArrayNavigator = /** @class */ (function (_super) {\r\n    __extends(ArrayNavigator, _super);\r\n    function ArrayNavigator(items, start, end, index) {\r\n        if (start === void 0) { start = 0; }\r\n        if (end === void 0) { end = items.length; }\r\n        if (index === void 0) { index = start - 1; }\r\n        return _super.call(this, items, start, end, index) || this;\r\n    }\r\n    ArrayNavigator.prototype.current = function () {\r\n        return _super.prototype.current.call(this);\r\n    };\r\n    ArrayNavigator.prototype.previous = function () {\r\n        this.index = Math.max(this.index - 1, this.start - 1);\r\n        return this.current();\r\n    };\r\n    ArrayNavigator.prototype.first = function () {\r\n        this.index = this.start;\r\n        return this.current();\r\n    };\r\n    ArrayNavigator.prototype.last = function () {\r\n        this.index = this.end - 1;\r\n        return this.current();\r\n    };\r\n    ArrayNavigator.prototype.parent = function () {\r\n        return null;\r\n    };\r\n    return ArrayNavigator;\r\n}(ArrayIterator));\r\nexport { ArrayNavigator };\r\nvar MappedIterator = /** @class */ (function () {\r\n    function MappedIterator(iterator, fn) {\r\n        this.iterator = iterator;\r\n        this.fn = fn;\r\n        // noop\r\n    }\r\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\r\n    return MappedIterator;\r\n}());\r\nexport { MappedIterator };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar _a;\r\nimport { isWindows } from './platform.js';\r\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\r\nvar _singleSlashStart = /^\\//;\r\nvar _doubleSlashStart = /^\\/\\//;\r\nfunction _validateUri(ret, _strict) {\r\n    // scheme, must be set\r\n    if (!ret.scheme && _strict) {\r\n        throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\r\n    }\r\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\r\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\r\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\r\n        throw new Error('[UriError]: Scheme contains illegal characters.');\r\n    }\r\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\r\n    // If a URI contains an authority component, then the path component\r\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\r\n    // does not contain an authority component, then the path cannot begin\r\n    // with two slash characters (\"//\").\r\n    if (ret.path) {\r\n        if (ret.authority) {\r\n            if (!_singleSlashStart.test(ret.path)) {\r\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\r\n            }\r\n        }\r\n        else {\r\n            if (_doubleSlashStart.test(ret.path)) {\r\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\r\n            }\r\n        }\r\n    }\r\n}\r\n// for a while we allowed uris *without* schemes and this is the migration\r\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\r\n// back to the file-scheme. that should cause the least carnage and still be a\r\n// clear warning\r\nfunction _schemeFix(scheme, _strict) {\r\n    if (!scheme && !_strict) {\r\n        return 'file';\r\n    }\r\n    return scheme;\r\n}\r\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\r\nfunction _referenceResolution(scheme, path) {\r\n    // the slash-character is our 'default base' as we don't\r\n    // support constructing URIs relative to other URIs. This\r\n    // also means that we alter and potentially break paths.\r\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\r\n    switch (scheme) {\r\n        case 'https':\r\n        case 'http':\r\n        case 'file':\r\n            if (!path) {\r\n                path = _slash;\r\n            }\r\n            else if (path[0] !== _slash) {\r\n                path = _slash + path;\r\n            }\r\n            break;\r\n    }\r\n    return path;\r\n}\r\nvar _empty = '';\r\nvar _slash = '/';\r\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\r\n/**\r\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\r\n * This class is a simple parser which creates the basic component parts\r\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\r\n * and encoding.\r\n *\r\n *       foo://example.com:8042/over/there?name=ferret#nose\r\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\r\n *        |           |            |            |        |\r\n *     scheme     authority       path        query   fragment\r\n *        |   _____________________|__\r\n *       / \\ /                        \\\r\n *       urn:example:animal:ferret:nose\r\n */\r\nvar URI = /** @class */ (function () {\r\n    /**\r\n     * @internal\r\n     */\r\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\r\n        if (_strict === void 0) { _strict = false; }\r\n        if (typeof schemeOrData === 'object') {\r\n            this.scheme = schemeOrData.scheme || _empty;\r\n            this.authority = schemeOrData.authority || _empty;\r\n            this.path = schemeOrData.path || _empty;\r\n            this.query = schemeOrData.query || _empty;\r\n            this.fragment = schemeOrData.fragment || _empty;\r\n            // no validation because it's this URI\r\n            // that creates uri components.\r\n            // _validateUri(this);\r\n        }\r\n        else {\r\n            this.scheme = _schemeFix(schemeOrData, _strict);\r\n            this.authority = authority || _empty;\r\n            this.path = _referenceResolution(this.scheme, path || _empty);\r\n            this.query = query || _empty;\r\n            this.fragment = fragment || _empty;\r\n            _validateUri(this, _strict);\r\n        }\r\n    }\r\n    URI.isUri = function (thing) {\r\n        if (thing instanceof URI) {\r\n            return true;\r\n        }\r\n        if (!thing) {\r\n            return false;\r\n        }\r\n        return typeof thing.authority === 'string'\r\n            && typeof thing.fragment === 'string'\r\n            && typeof thing.path === 'string'\r\n            && typeof thing.query === 'string'\r\n            && typeof thing.scheme === 'string'\r\n            && typeof thing.fsPath === 'function'\r\n            && typeof thing.with === 'function'\r\n            && typeof thing.toString === 'function';\r\n    };\r\n    Object.defineProperty(URI.prototype, \"fsPath\", {\r\n        // ---- filesystem path -----------------------\r\n        /**\r\n         * Returns a string representing the corresponding file system path of this URI.\r\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\r\n         * platform specific path separator.\r\n         *\r\n         * * Will *not* validate the path for invalid characters and semantics.\r\n         * * Will *not* look at the scheme of this URI.\r\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\r\n         *\r\n         *\r\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\r\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\r\n         *\r\n         * ```ts\r\n            const u = URI.parse('file://server/c$/folder/file.txt')\r\n            u.authority === 'server'\r\n            u.path === '/shares/c$/file.txt'\r\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\r\n        ```\r\n         *\r\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\r\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\r\n         * with URIs that represent files on disk (`file` scheme).\r\n         */\r\n        get: function () {\r\n            // if (this.scheme !== 'file') {\r\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\r\n            // }\r\n            return _makeFsPath(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // ---- modify to new -------------------------\r\n    URI.prototype.with = function (change) {\r\n        if (!change) {\r\n            return this;\r\n        }\r\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\r\n        if (scheme === undefined) {\r\n            scheme = this.scheme;\r\n        }\r\n        else if (scheme === null) {\r\n            scheme = _empty;\r\n        }\r\n        if (authority === undefined) {\r\n            authority = this.authority;\r\n        }\r\n        else if (authority === null) {\r\n            authority = _empty;\r\n        }\r\n        if (path === undefined) {\r\n            path = this.path;\r\n        }\r\n        else if (path === null) {\r\n            path = _empty;\r\n        }\r\n        if (query === undefined) {\r\n            query = this.query;\r\n        }\r\n        else if (query === null) {\r\n            query = _empty;\r\n        }\r\n        if (fragment === undefined) {\r\n            fragment = this.fragment;\r\n        }\r\n        else if (fragment === null) {\r\n            fragment = _empty;\r\n        }\r\n        if (scheme === this.scheme\r\n            && authority === this.authority\r\n            && path === this.path\r\n            && query === this.query\r\n            && fragment === this.fragment) {\r\n            return this;\r\n        }\r\n        return new _URI(scheme, authority, path, query, fragment);\r\n    };\r\n    // ---- parse & validate ------------------------\r\n    /**\r\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\r\n     * `file:///usr/home`, or `scheme:with/path`.\r\n     *\r\n     * @param value A string which represents an URI (see `URI#toString`).\r\n     */\r\n    URI.parse = function (value, _strict) {\r\n        if (_strict === void 0) { _strict = false; }\r\n        var match = _regexp.exec(value);\r\n        if (!match) {\r\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\r\n        }\r\n        return new _URI(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\r\n    };\r\n    /**\r\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\r\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\r\n     *\r\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\r\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\r\n     * `URI.parse('file://' + path)` because the path might contain characters that are\r\n     * interpreted (# and ?). See the following sample:\r\n     * ```ts\r\n    const good = URI.file('/coding/c#/project1');\r\n    good.scheme === 'file';\r\n    good.path === '/coding/c#/project1';\r\n    good.fragment === '';\r\n    const bad = URI.parse('file://' + '/coding/c#/project1');\r\n    bad.scheme === 'file';\r\n    bad.path === '/coding/c'; // path is now broken\r\n    bad.fragment === '/project1';\r\n    ```\r\n     *\r\n     * @param path A file system path (see `URI#fsPath`)\r\n     */\r\n    URI.file = function (path) {\r\n        var authority = _empty;\r\n        // normalize to fwd-slashes on windows,\r\n        // on other systems bwd-slashes are valid\r\n        // filename character, eg /f\\oo/ba\\r.txt\r\n        if (isWindows) {\r\n            path = path.replace(/\\\\/g, _slash);\r\n        }\r\n        // check for authority as used in UNC shares\r\n        // or use the path as given\r\n        if (path[0] === _slash && path[1] === _slash) {\r\n            var idx = path.indexOf(_slash, 2);\r\n            if (idx === -1) {\r\n                authority = path.substring(2);\r\n                path = _slash;\r\n            }\r\n            else {\r\n                authority = path.substring(2, idx);\r\n                path = path.substring(idx) || _slash;\r\n            }\r\n        }\r\n        return new _URI('file', authority, path, _empty, _empty);\r\n    };\r\n    URI.from = function (components) {\r\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\r\n    };\r\n    // ---- printing/externalize ---------------------------\r\n    /**\r\n     * Creates a string representation for this URI. It's guaranteed that calling\r\n     * `URI.parse` with the result of this function creates an URI which is equal\r\n     * to this URI.\r\n     *\r\n     * * The result shall *not* be used for display purposes but for externalization or transport.\r\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\r\n     * ignore the scheme-specific encoding rules.\r\n     *\r\n     * @param skipEncoding Do not encode the result, default is `false`\r\n     */\r\n    URI.prototype.toString = function (skipEncoding) {\r\n        if (skipEncoding === void 0) { skipEncoding = false; }\r\n        return _asFormatted(this, skipEncoding);\r\n    };\r\n    URI.prototype.toJSON = function () {\r\n        return this;\r\n    };\r\n    URI.revive = function (data) {\r\n        if (!data) {\r\n            return data;\r\n        }\r\n        else if (data instanceof URI) {\r\n            return data;\r\n        }\r\n        else {\r\n            var result = new _URI(data);\r\n            result._formatted = data.external;\r\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\r\n            return result;\r\n        }\r\n    };\r\n    return URI;\r\n}());\r\nexport { URI };\r\nvar _pathSepMarker = isWindows ? 1 : undefined;\r\n// tslint:disable-next-line:class-name\r\nvar _URI = /** @class */ (function (_super) {\r\n    __extends(_URI, _super);\r\n    function _URI() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._formatted = null;\r\n        _this._fsPath = null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\r\n        get: function () {\r\n            if (!this._fsPath) {\r\n                this._fsPath = _makeFsPath(this);\r\n            }\r\n            return this._fsPath;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    _URI.prototype.toString = function (skipEncoding) {\r\n        if (skipEncoding === void 0) { skipEncoding = false; }\r\n        if (!skipEncoding) {\r\n            if (!this._formatted) {\r\n                this._formatted = _asFormatted(this, false);\r\n            }\r\n            return this._formatted;\r\n        }\r\n        else {\r\n            // we don't cache that\r\n            return _asFormatted(this, true);\r\n        }\r\n    };\r\n    _URI.prototype.toJSON = function () {\r\n        var res = {\r\n            $mid: 1\r\n        };\r\n        // cached state\r\n        if (this._fsPath) {\r\n            res.fsPath = this._fsPath;\r\n            res._sep = _pathSepMarker;\r\n        }\r\n        if (this._formatted) {\r\n            res.external = this._formatted;\r\n        }\r\n        // uri components\r\n        if (this.path) {\r\n            res.path = this.path;\r\n        }\r\n        if (this.scheme) {\r\n            res.scheme = this.scheme;\r\n        }\r\n        if (this.authority) {\r\n            res.authority = this.authority;\r\n        }\r\n        if (this.query) {\r\n            res.query = this.query;\r\n        }\r\n        if (this.fragment) {\r\n            res.fragment = this.fragment;\r\n        }\r\n        return res;\r\n    };\r\n    return _URI;\r\n}(URI));\r\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\r\nvar encodeTable = (_a = {},\r\n    _a[58 /* Colon */] = '%3A',\r\n    _a[47 /* Slash */] = '%2F',\r\n    _a[63 /* QuestionMark */] = '%3F',\r\n    _a[35 /* Hash */] = '%23',\r\n    _a[91 /* OpenSquareBracket */] = '%5B',\r\n    _a[93 /* CloseSquareBracket */] = '%5D',\r\n    _a[64 /* AtSign */] = '%40',\r\n    _a[33 /* ExclamationMark */] = '%21',\r\n    _a[36 /* DollarSign */] = '%24',\r\n    _a[38 /* Ampersand */] = '%26',\r\n    _a[39 /* SingleQuote */] = '%27',\r\n    _a[40 /* OpenParen */] = '%28',\r\n    _a[41 /* CloseParen */] = '%29',\r\n    _a[42 /* Asterisk */] = '%2A',\r\n    _a[43 /* Plus */] = '%2B',\r\n    _a[44 /* Comma */] = '%2C',\r\n    _a[59 /* Semicolon */] = '%3B',\r\n    _a[61 /* Equals */] = '%3D',\r\n    _a[32 /* Space */] = '%20',\r\n    _a);\r\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\r\n    var res = undefined;\r\n    var nativeEncodePos = -1;\r\n    for (var pos = 0; pos < uriComponent.length; pos++) {\r\n        var code = uriComponent.charCodeAt(pos);\r\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\r\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\r\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\r\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\r\n            || code === 45 /* Dash */\r\n            || code === 46 /* Period */\r\n            || code === 95 /* Underline */\r\n            || code === 126 /* Tilde */\r\n            || (allowSlash && code === 47 /* Slash */)) {\r\n            // check if we are delaying native encode\r\n            if (nativeEncodePos !== -1) {\r\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\r\n                nativeEncodePos = -1;\r\n            }\r\n            // check if we write into a new string (by default we try to return the param)\r\n            if (res !== undefined) {\r\n                res += uriComponent.charAt(pos);\r\n            }\r\n        }\r\n        else {\r\n            // encoding needed, we need to allocate a new string\r\n            if (res === undefined) {\r\n                res = uriComponent.substr(0, pos);\r\n            }\r\n            // check with default table first\r\n            var escaped = encodeTable[code];\r\n            if (escaped !== undefined) {\r\n                // check if we are delaying native encode\r\n                if (nativeEncodePos !== -1) {\r\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\r\n                    nativeEncodePos = -1;\r\n                }\r\n                // append escaped variant to result\r\n                res += escaped;\r\n            }\r\n            else if (nativeEncodePos === -1) {\r\n                // use native encode only when needed\r\n                nativeEncodePos = pos;\r\n            }\r\n        }\r\n    }\r\n    if (nativeEncodePos !== -1) {\r\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\r\n    }\r\n    return res !== undefined ? res : uriComponent;\r\n}\r\nfunction encodeURIComponentMinimal(path) {\r\n    var res = undefined;\r\n    for (var pos = 0; pos < path.length; pos++) {\r\n        var code = path.charCodeAt(pos);\r\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\r\n            if (res === undefined) {\r\n                res = path.substr(0, pos);\r\n            }\r\n            res += encodeTable[code];\r\n        }\r\n        else {\r\n            if (res !== undefined) {\r\n                res += path[pos];\r\n            }\r\n        }\r\n    }\r\n    return res !== undefined ? res : path;\r\n}\r\n/**\r\n * Compute `fsPath` for the given uri\r\n */\r\nfunction _makeFsPath(uri) {\r\n    var value;\r\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\r\n        // unc path: file://shares/c$/far/boo\r\n        value = \"//\" + uri.authority + uri.path;\r\n    }\r\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\r\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\r\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\r\n        // windows drive letter: file:///c:/far/boo\r\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\r\n    }\r\n    else {\r\n        // other path\r\n        value = uri.path;\r\n    }\r\n    if (isWindows) {\r\n        value = value.replace(/\\//g, '\\\\');\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Create the external version of a uri\r\n */\r\nfunction _asFormatted(uri, skipEncoding) {\r\n    var encoder = !skipEncoding\r\n        ? encodeURIComponentFast\r\n        : encodeURIComponentMinimal;\r\n    var res = '';\r\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\r\n    if (scheme) {\r\n        res += scheme;\r\n        res += ':';\r\n    }\r\n    if (authority || scheme === 'file') {\r\n        res += _slash;\r\n        res += _slash;\r\n    }\r\n    if (authority) {\r\n        var idx = authority.indexOf('@');\r\n        if (idx !== -1) {\r\n            // <user>@<auth>\r\n            var userinfo = authority.substr(0, idx);\r\n            authority = authority.substr(idx + 1);\r\n            idx = userinfo.indexOf(':');\r\n            if (idx === -1) {\r\n                res += encoder(userinfo, false);\r\n            }\r\n            else {\r\n                // <user>:<pass>@<auth>\r\n                res += encoder(userinfo.substr(0, idx), false);\r\n                res += ':';\r\n                res += encoder(userinfo.substr(idx + 1), false);\r\n            }\r\n            res += '@';\r\n        }\r\n        authority = authority.toLowerCase();\r\n        idx = authority.indexOf(':');\r\n        if (idx === -1) {\r\n            res += encoder(authority, false);\r\n        }\r\n        else {\r\n            // <auth>:<port>\r\n            res += encoder(authority.substr(0, idx), false);\r\n            res += authority.substr(idx);\r\n        }\r\n    }\r\n    if (path) {\r\n        // lower-case windows drive letters in /C:/fff or C:/fff\r\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\r\n            var code = path.charCodeAt(1);\r\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\r\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\r\n            }\r\n        }\r\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\r\n            var code = path.charCodeAt(0);\r\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\r\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\r\n            }\r\n        }\r\n        // encode the rest of the path\r\n        res += encoder(path, true);\r\n    }\r\n    if (query) {\r\n        res += '?';\r\n        res += encoder(query, false);\r\n    }\r\n    if (fragment) {\r\n        res += '#';\r\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\r\n    }\r\n    return res;\r\n}\r\n// --- decode\r\nfunction decodeURIComponentGraceful(str) {\r\n    try {\r\n        return decodeURIComponent(str);\r\n    }\r\n    catch (_a) {\r\n        if (str.length > 3) {\r\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\r\n        }\r\n        else {\r\n            return str;\r\n        }\r\n    }\r\n}\r\nvar _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\r\nfunction percentDecode(str) {\r\n    if (!str.match(_rEncodedAsHex)) {\r\n        return str;\r\n    }\r\n    return str.replace(_rEncodedAsHex, function (match) { return decodeURIComponentGraceful(match); });\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * A position in the editor.\r\n */\r\nvar Position = /** @class */ (function () {\r\n    function Position(lineNumber, column) {\r\n        this.lineNumber = lineNumber;\r\n        this.column = column;\r\n    }\r\n    /**\r\n     * Create a new position from this position.\r\n     *\r\n     * @param newLineNumber new line number\r\n     * @param newColumn new column\r\n     */\r\n    Position.prototype.with = function (newLineNumber, newColumn) {\r\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\r\n        if (newColumn === void 0) { newColumn = this.column; }\r\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\r\n            return this;\r\n        }\r\n        else {\r\n            return new Position(newLineNumber, newColumn);\r\n        }\r\n    };\r\n    /**\r\n     * Derive a new position from this position.\r\n     *\r\n     * @param deltaLineNumber line number delta\r\n     * @param deltaColumn column delta\r\n     */\r\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\r\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\r\n        if (deltaColumn === void 0) { deltaColumn = 0; }\r\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\r\n    };\r\n    /**\r\n     * Test if this position equals other position\r\n     */\r\n    Position.prototype.equals = function (other) {\r\n        return Position.equals(this, other);\r\n    };\r\n    /**\r\n     * Test if position `a` equals position `b`\r\n     */\r\n    Position.equals = function (a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        return (!!a &&\r\n            !!b &&\r\n            a.lineNumber === b.lineNumber &&\r\n            a.column === b.column);\r\n    };\r\n    /**\r\n     * Test if this position is before other position.\r\n     * If the two positions are equal, the result will be false.\r\n     */\r\n    Position.prototype.isBefore = function (other) {\r\n        return Position.isBefore(this, other);\r\n    };\r\n    /**\r\n     * Test if position `a` is before position `b`.\r\n     * If the two positions are equal, the result will be false.\r\n     */\r\n    Position.isBefore = function (a, b) {\r\n        if (a.lineNumber < b.lineNumber) {\r\n            return true;\r\n        }\r\n        if (b.lineNumber < a.lineNumber) {\r\n            return false;\r\n        }\r\n        return a.column < b.column;\r\n    };\r\n    /**\r\n     * Test if this position is before other position.\r\n     * If the two positions are equal, the result will be true.\r\n     */\r\n    Position.prototype.isBeforeOrEqual = function (other) {\r\n        return Position.isBeforeOrEqual(this, other);\r\n    };\r\n    /**\r\n     * Test if position `a` is before position `b`.\r\n     * If the two positions are equal, the result will be true.\r\n     */\r\n    Position.isBeforeOrEqual = function (a, b) {\r\n        if (a.lineNumber < b.lineNumber) {\r\n            return true;\r\n        }\r\n        if (b.lineNumber < a.lineNumber) {\r\n            return false;\r\n        }\r\n        return a.column <= b.column;\r\n    };\r\n    /**\r\n     * A function that compares positions, useful for sorting\r\n     */\r\n    Position.compare = function (a, b) {\r\n        var aLineNumber = a.lineNumber | 0;\r\n        var bLineNumber = b.lineNumber | 0;\r\n        if (aLineNumber === bLineNumber) {\r\n            var aColumn = a.column | 0;\r\n            var bColumn = b.column | 0;\r\n            return aColumn - bColumn;\r\n        }\r\n        return aLineNumber - bLineNumber;\r\n    };\r\n    /**\r\n     * Clone this position.\r\n     */\r\n    Position.prototype.clone = function () {\r\n        return new Position(this.lineNumber, this.column);\r\n    };\r\n    /**\r\n     * Convert to a human-readable representation.\r\n     */\r\n    Position.prototype.toString = function () {\r\n        return '(' + this.lineNumber + ',' + this.column + ')';\r\n    };\r\n    // ---\r\n    /**\r\n     * Create a `Position` from an `IPosition`.\r\n     */\r\n    Position.lift = function (pos) {\r\n        return new Position(pos.lineNumber, pos.column);\r\n    };\r\n    /**\r\n     * Test if `obj` is an `IPosition`.\r\n     */\r\n    Position.isIPosition = function (obj) {\r\n        return (obj\r\n            && (typeof obj.lineNumber === 'number')\r\n            && (typeof obj.column === 'number'));\r\n    };\r\n    return Position;\r\n}());\r\nexport { Position };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Position } from './position.js';\r\n/**\r\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\r\n */\r\nvar Range = /** @class */ (function () {\r\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\r\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\r\n            this.startLineNumber = endLineNumber;\r\n            this.startColumn = endColumn;\r\n            this.endLineNumber = startLineNumber;\r\n            this.endColumn = startColumn;\r\n        }\r\n        else {\r\n            this.startLineNumber = startLineNumber;\r\n            this.startColumn = startColumn;\r\n            this.endLineNumber = endLineNumber;\r\n            this.endColumn = endColumn;\r\n        }\r\n    }\r\n    /**\r\n     * Test if this range is empty.\r\n     */\r\n    Range.prototype.isEmpty = function () {\r\n        return Range.isEmpty(this);\r\n    };\r\n    /**\r\n     * Test if `range` is empty.\r\n     */\r\n    Range.isEmpty = function (range) {\r\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\r\n    };\r\n    /**\r\n     * Test if position is in this range. If the position is at the edges, will return true.\r\n     */\r\n    Range.prototype.containsPosition = function (position) {\r\n        return Range.containsPosition(this, position);\r\n    };\r\n    /**\r\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\r\n     */\r\n    Range.containsPosition = function (range, position) {\r\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\r\n            return false;\r\n        }\r\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\r\n            return false;\r\n        }\r\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if range is in this range. If the range is equal to this range, will return true.\r\n     */\r\n    Range.prototype.containsRange = function (range) {\r\n        return Range.containsRange(this, range);\r\n    };\r\n    /**\r\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\r\n     */\r\n    Range.containsRange = function (range, otherRange) {\r\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\r\n            return false;\r\n        }\r\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\r\n            return false;\r\n        }\r\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\r\n            return false;\r\n        }\r\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\r\n     */\r\n    Range.prototype.strictContainsRange = function (range) {\r\n        return Range.strictContainsRange(this, range);\r\n    };\r\n    /**\r\n     * Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false.\r\n     */\r\n    Range.strictContainsRange = function (range, otherRange) {\r\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\r\n            return false;\r\n        }\r\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\r\n            return false;\r\n        }\r\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\r\n            return false;\r\n        }\r\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * A reunion of the two ranges.\r\n     * The smallest position will be used as the start point, and the largest one as the end point.\r\n     */\r\n    Range.prototype.plusRange = function (range) {\r\n        return Range.plusRange(this, range);\r\n    };\r\n    /**\r\n     * A reunion of the two ranges.\r\n     * The smallest position will be used as the start point, and the largest one as the end point.\r\n     */\r\n    Range.plusRange = function (a, b) {\r\n        var startLineNumber;\r\n        var startColumn;\r\n        var endLineNumber;\r\n        var endColumn;\r\n        if (b.startLineNumber < a.startLineNumber) {\r\n            startLineNumber = b.startLineNumber;\r\n            startColumn = b.startColumn;\r\n        }\r\n        else if (b.startLineNumber === a.startLineNumber) {\r\n            startLineNumber = b.startLineNumber;\r\n            startColumn = Math.min(b.startColumn, a.startColumn);\r\n        }\r\n        else {\r\n            startLineNumber = a.startLineNumber;\r\n            startColumn = a.startColumn;\r\n        }\r\n        if (b.endLineNumber > a.endLineNumber) {\r\n            endLineNumber = b.endLineNumber;\r\n            endColumn = b.endColumn;\r\n        }\r\n        else if (b.endLineNumber === a.endLineNumber) {\r\n            endLineNumber = b.endLineNumber;\r\n            endColumn = Math.max(b.endColumn, a.endColumn);\r\n        }\r\n        else {\r\n            endLineNumber = a.endLineNumber;\r\n            endColumn = a.endColumn;\r\n        }\r\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n    };\r\n    /**\r\n     * A intersection of the two ranges.\r\n     */\r\n    Range.prototype.intersectRanges = function (range) {\r\n        return Range.intersectRanges(this, range);\r\n    };\r\n    /**\r\n     * A intersection of the two ranges.\r\n     */\r\n    Range.intersectRanges = function (a, b) {\r\n        var resultStartLineNumber = a.startLineNumber;\r\n        var resultStartColumn = a.startColumn;\r\n        var resultEndLineNumber = a.endLineNumber;\r\n        var resultEndColumn = a.endColumn;\r\n        var otherStartLineNumber = b.startLineNumber;\r\n        var otherStartColumn = b.startColumn;\r\n        var otherEndLineNumber = b.endLineNumber;\r\n        var otherEndColumn = b.endColumn;\r\n        if (resultStartLineNumber < otherStartLineNumber) {\r\n            resultStartLineNumber = otherStartLineNumber;\r\n            resultStartColumn = otherStartColumn;\r\n        }\r\n        else if (resultStartLineNumber === otherStartLineNumber) {\r\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\r\n        }\r\n        if (resultEndLineNumber > otherEndLineNumber) {\r\n            resultEndLineNumber = otherEndLineNumber;\r\n            resultEndColumn = otherEndColumn;\r\n        }\r\n        else if (resultEndLineNumber === otherEndLineNumber) {\r\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\r\n        }\r\n        // Check if selection is now empty\r\n        if (resultStartLineNumber > resultEndLineNumber) {\r\n            return null;\r\n        }\r\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\r\n            return null;\r\n        }\r\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\r\n    };\r\n    /**\r\n     * Test if this range equals other.\r\n     */\r\n    Range.prototype.equalsRange = function (other) {\r\n        return Range.equalsRange(this, other);\r\n    };\r\n    /**\r\n     * Test if range `a` equals `b`.\r\n     */\r\n    Range.equalsRange = function (a, b) {\r\n        return (!!a &&\r\n            !!b &&\r\n            a.startLineNumber === b.startLineNumber &&\r\n            a.startColumn === b.startColumn &&\r\n            a.endLineNumber === b.endLineNumber &&\r\n            a.endColumn === b.endColumn);\r\n    };\r\n    /**\r\n     * Return the end position (which will be after or equal to the start position)\r\n     */\r\n    Range.prototype.getEndPosition = function () {\r\n        return new Position(this.endLineNumber, this.endColumn);\r\n    };\r\n    /**\r\n     * Return the start position (which will be before or equal to the end position)\r\n     */\r\n    Range.prototype.getStartPosition = function () {\r\n        return new Position(this.startLineNumber, this.startColumn);\r\n    };\r\n    /**\r\n     * Transform to a user presentable string representation.\r\n     */\r\n    Range.prototype.toString = function () {\r\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\r\n    };\r\n    /**\r\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\r\n     */\r\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n    };\r\n    /**\r\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\r\n     */\r\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n    };\r\n    /**\r\n     * Create a new empty range using this range's start position.\r\n     */\r\n    Range.prototype.collapseToStart = function () {\r\n        return Range.collapseToStart(this);\r\n    };\r\n    /**\r\n     * Create a new empty range using this range's start position.\r\n     */\r\n    Range.collapseToStart = function (range) {\r\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\r\n    };\r\n    // ---\r\n    Range.fromPositions = function (start, end) {\r\n        if (end === void 0) { end = start; }\r\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\r\n    };\r\n    Range.lift = function (range) {\r\n        if (!range) {\r\n            return null;\r\n        }\r\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n    };\r\n    /**\r\n     * Test if `obj` is an `IRange`.\r\n     */\r\n    Range.isIRange = function (obj) {\r\n        return (obj\r\n            && (typeof obj.startLineNumber === 'number')\r\n            && (typeof obj.startColumn === 'number')\r\n            && (typeof obj.endLineNumber === 'number')\r\n            && (typeof obj.endColumn === 'number'));\r\n    };\r\n    /**\r\n     * Test if the two ranges are touching in any way.\r\n     */\r\n    Range.areIntersectingOrTouching = function (a, b) {\r\n        // Check if `a` is before `b`\r\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\r\n            return false;\r\n        }\r\n        // Check if `b` is before `a`\r\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\r\n            return false;\r\n        }\r\n        // These ranges must intersect\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\r\n     */\r\n    Range.areIntersecting = function (a, b) {\r\n        // Check if `a` is before `b`\r\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\r\n            return false;\r\n        }\r\n        // Check if `b` is before `a`\r\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\r\n            return false;\r\n        }\r\n        // These ranges must intersect\r\n        return true;\r\n    };\r\n    /**\r\n     * A function that compares ranges, useful for sorting ranges\r\n     * It will first compare ranges on the startPosition and then on the endPosition\r\n     */\r\n    Range.compareRangesUsingStarts = function (a, b) {\r\n        if (a && b) {\r\n            var aStartLineNumber = a.startLineNumber | 0;\r\n            var bStartLineNumber = b.startLineNumber | 0;\r\n            if (aStartLineNumber === bStartLineNumber) {\r\n                var aStartColumn = a.startColumn | 0;\r\n                var bStartColumn = b.startColumn | 0;\r\n                if (aStartColumn === bStartColumn) {\r\n                    var aEndLineNumber = a.endLineNumber | 0;\r\n                    var bEndLineNumber = b.endLineNumber | 0;\r\n                    if (aEndLineNumber === bEndLineNumber) {\r\n                        var aEndColumn = a.endColumn | 0;\r\n                        var bEndColumn = b.endColumn | 0;\r\n                        return aEndColumn - bEndColumn;\r\n                    }\r\n                    return aEndLineNumber - bEndLineNumber;\r\n                }\r\n                return aStartColumn - bStartColumn;\r\n            }\r\n            return aStartLineNumber - bStartLineNumber;\r\n        }\r\n        var aExists = (a ? 1 : 0);\r\n        var bExists = (b ? 1 : 0);\r\n        return aExists - bExists;\r\n    };\r\n    /**\r\n     * A function that compares ranges, useful for sorting ranges\r\n     * It will first compare ranges on the endPosition and then on the startPosition\r\n     */\r\n    Range.compareRangesUsingEnds = function (a, b) {\r\n        if (a.endLineNumber === b.endLineNumber) {\r\n            if (a.endColumn === b.endColumn) {\r\n                if (a.startLineNumber === b.startLineNumber) {\r\n                    return a.startColumn - b.startColumn;\r\n                }\r\n                return a.startLineNumber - b.startLineNumber;\r\n            }\r\n            return a.endColumn - b.endColumn;\r\n        }\r\n        return a.endLineNumber - b.endLineNumber;\r\n    };\r\n    /**\r\n     * Test if the range spans multiple lines.\r\n     */\r\n    Range.spansMultipleLines = function (range) {\r\n        return range.endLineNumber > range.startLineNumber;\r\n    };\r\n    return Range;\r\n}());\r\nexport { Range };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function isFalsyOrWhitespace(str) {\r\n    if (!str || typeof str !== 'string') {\r\n        return true;\r\n    }\r\n    return str.trim().length === 0;\r\n}\r\n/**\r\n * @returns the provided number with the given number of preceding zeros.\r\n */\r\nexport function pad(n, l, char) {\r\n    if (char === void 0) { char = '0'; }\r\n    var str = '' + n;\r\n    var r = [str];\r\n    for (var i = str.length; i < l; i++) {\r\n        r.push(char);\r\n    }\r\n    return r.reverse().join('');\r\n}\r\nvar _formatRegexp = /{(\\d+)}/g;\r\n/**\r\n * Helper to produce a string with a variable number of arguments. Insert variable segments\r\n * into the string using the {n} notation where N is the index of the argument following the string.\r\n * @param value string to which formatting is applied\r\n * @param args replacements for {n}-entries\r\n */\r\nexport function format(value) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    if (args.length === 0) {\r\n        return value;\r\n    }\r\n    return value.replace(_formatRegexp, function (match, group) {\r\n        var idx = parseInt(group, 10);\r\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\r\n            match :\r\n            args[idx];\r\n    });\r\n}\r\n/**\r\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\r\n * being used e.g. in HTMLElement.innerHTML.\r\n */\r\nexport function escape(html) {\r\n    return html.replace(/[<>&]/g, function (match) {\r\n        switch (match) {\r\n            case '<': return '&lt;';\r\n            case '>': return '&gt;';\r\n            case '&': return '&amp;';\r\n            default: return match;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Escapes regular expression characters in a given string\r\n */\r\nexport function escapeRegExpCharacters(value) {\r\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\r\n}\r\n/**\r\n * Removes all occurrences of needle from the beginning and end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim (default is a blank)\r\n */\r\nexport function trim(haystack, needle) {\r\n    if (needle === void 0) { needle = ' '; }\r\n    var trimmed = ltrim(haystack, needle);\r\n    return rtrim(trimmed, needle);\r\n}\r\n/**\r\n * Removes all occurrences of needle from the beginning of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function ltrim(haystack, needle) {\r\n    if (!haystack || !needle) {\r\n        return haystack;\r\n    }\r\n    var needleLen = needle.length;\r\n    if (needleLen === 0 || haystack.length === 0) {\r\n        return haystack;\r\n    }\r\n    var offset = 0;\r\n    while (haystack.indexOf(needle, offset) === offset) {\r\n        offset = offset + needleLen;\r\n    }\r\n    return haystack.substring(offset);\r\n}\r\n/**\r\n * Removes all occurrences of needle from the end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function rtrim(haystack, needle) {\r\n    if (!haystack || !needle) {\r\n        return haystack;\r\n    }\r\n    var needleLen = needle.length, haystackLen = haystack.length;\r\n    if (needleLen === 0 || haystackLen === 0) {\r\n        return haystack;\r\n    }\r\n    var offset = haystackLen, idx = -1;\r\n    while (true) {\r\n        idx = haystack.lastIndexOf(needle, offset - 1);\r\n        if (idx === -1 || idx + needleLen !== offset) {\r\n            break;\r\n        }\r\n        if (idx === 0) {\r\n            return '';\r\n        }\r\n        offset = idx;\r\n    }\r\n    return haystack.substring(0, offset);\r\n}\r\nexport function convertSimple2RegExpPattern(pattern) {\r\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\r\n}\r\n/**\r\n * Determines if haystack starts with needle.\r\n */\r\nexport function startsWith(haystack, needle) {\r\n    if (haystack.length < needle.length) {\r\n        return false;\r\n    }\r\n    if (haystack === needle) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < needle.length; i++) {\r\n        if (haystack[i] !== needle[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Determines if haystack ends with needle.\r\n */\r\nexport function endsWith(haystack, needle) {\r\n    var diff = haystack.length - needle.length;\r\n    if (diff > 0) {\r\n        return haystack.indexOf(needle, diff) === diff;\r\n    }\r\n    else if (diff === 0) {\r\n        return haystack === needle;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport function createRegExp(searchString, isRegex, options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (!searchString) {\r\n        throw new Error('Cannot create regex from empty string');\r\n    }\r\n    if (!isRegex) {\r\n        searchString = escapeRegExpCharacters(searchString);\r\n    }\r\n    if (options.wholeWord) {\r\n        if (!/\\B/.test(searchString.charAt(0))) {\r\n            searchString = '\\\\b' + searchString;\r\n        }\r\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\r\n            searchString = searchString + '\\\\b';\r\n        }\r\n    }\r\n    var modifiers = '';\r\n    if (options.global) {\r\n        modifiers += 'g';\r\n    }\r\n    if (!options.matchCase) {\r\n        modifiers += 'i';\r\n    }\r\n    if (options.multiline) {\r\n        modifiers += 'm';\r\n    }\r\n    if (options.unicode) {\r\n        modifiers += 'u';\r\n    }\r\n    return new RegExp(searchString, modifiers);\r\n}\r\nexport function regExpLeadsToEndlessLoop(regexp) {\r\n    // Exit early if it's one of these special cases which are meant to match\r\n    // against an empty string\r\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\r\n        return false;\r\n    }\r\n    // We check against an empty string. If the regular expression doesn't advance\r\n    // (e.g. ends in an endless loop) it will match an empty string.\r\n    var match = regexp.exec('');\r\n    return !!(match && regexp.lastIndex === 0);\r\n}\r\nexport function regExpFlags(regexp) {\r\n    return (regexp.global ? 'g' : '')\r\n        + (regexp.ignoreCase ? 'i' : '')\r\n        + (regexp.multiline ? 'm' : '')\r\n        + (regexp.unicode ? 'u' : '');\r\n}\r\n/**\r\n * Returns first index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function firstNonWhitespaceIndex(str) {\r\n    for (var i = 0, len = str.length; i < len; i++) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Returns the leading whitespace of the string.\r\n * If the string contains only whitespaces, returns entire string\r\n */\r\nexport function getLeadingWhitespace(str, start, end) {\r\n    if (start === void 0) { start = 0; }\r\n    if (end === void 0) { end = str.length; }\r\n    for (var i = start; i < end; i++) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return str.substring(start, i);\r\n        }\r\n    }\r\n    return str.substring(start, end);\r\n}\r\n/**\r\n * Returns last index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function lastNonWhitespaceIndex(str, startIndex) {\r\n    if (startIndex === void 0) { startIndex = str.length - 1; }\r\n    for (var i = startIndex; i >= 0; i--) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function compare(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function compareIgnoreCase(a, b) {\r\n    var len = Math.min(a.length, b.length);\r\n    for (var i = 0; i < len; i++) {\r\n        var codeA = a.charCodeAt(i);\r\n        var codeB = b.charCodeAt(i);\r\n        if (codeA === codeB) {\r\n            // equal\r\n            continue;\r\n        }\r\n        if (isUpperAsciiLetter(codeA)) {\r\n            codeA += 32;\r\n        }\r\n        if (isUpperAsciiLetter(codeB)) {\r\n            codeB += 32;\r\n        }\r\n        var diff = codeA - codeB;\r\n        if (diff === 0) {\r\n            // equal -> ignoreCase\r\n            continue;\r\n        }\r\n        else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\r\n            //\r\n            return diff;\r\n        }\r\n        else {\r\n            return compare(a.toLowerCase(), b.toLowerCase());\r\n        }\r\n    }\r\n    if (a.length < b.length) {\r\n        return -1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function isLowerAsciiLetter(code) {\r\n    return code >= 97 /* a */ && code <= 122 /* z */;\r\n}\r\nexport function isUpperAsciiLetter(code) {\r\n    return code >= 65 /* A */ && code <= 90 /* Z */;\r\n}\r\nfunction isAsciiLetter(code) {\r\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\r\n}\r\nexport function equalsIgnoreCase(a, b) {\r\n    return a.length === b.length && doEqualsIgnoreCase(a, b);\r\n}\r\nfunction doEqualsIgnoreCase(a, b, stopAt) {\r\n    if (stopAt === void 0) { stopAt = a.length; }\r\n    for (var i = 0; i < stopAt; i++) {\r\n        var codeA = a.charCodeAt(i);\r\n        var codeB = b.charCodeAt(i);\r\n        if (codeA === codeB) {\r\n            continue;\r\n        }\r\n        // a-z A-Z\r\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\r\n            var diff = Math.abs(codeA - codeB);\r\n            if (diff !== 0 && diff !== 32) {\r\n                return false;\r\n            }\r\n        }\r\n        // Any other charcode\r\n        else {\r\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function startsWithIgnoreCase(str, candidate) {\r\n    var candidateLength = candidate.length;\r\n    if (candidate.length > str.length) {\r\n        return false;\r\n    }\r\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\r\n}\r\n/**\r\n * @returns the length of the common prefix of the two strings.\r\n */\r\nexport function commonPrefixLength(a, b) {\r\n    var i, len = Math.min(a.length, b.length);\r\n    for (i = 0; i < len; i++) {\r\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n/**\r\n * @returns the length of the common suffix of the two strings.\r\n */\r\nexport function commonSuffixLength(a, b) {\r\n    var i, len = Math.min(a.length, b.length);\r\n    var aLastIndex = a.length - 1;\r\n    var bLastIndex = b.length - 1;\r\n    for (i = 0; i < len; i++) {\r\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n// --- unicode\r\n// http://en.wikipedia.org/wiki/Surrogate_pair\r\n// Returns the code point starting at a specified index in a string\r\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\r\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\r\n//export function getUnicodePoint(str:string, index:number, len:number):number {\r\n//\tconst chrCode = str.charCodeAt(index);\r\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\r\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\r\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\r\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\r\n//\t\t}\r\n//\t}\r\n//\treturn chrCode;\r\n//}\r\nexport function isHighSurrogate(charCode) {\r\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\r\n}\r\nexport function isLowSurrogate(charCode) {\r\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\r\n}\r\n/**\r\n * get the code point that begins at offset `offset`\r\n */\r\nexport function getNextCodePoint(str, len, offset) {\r\n    var charCode = str.charCodeAt(offset);\r\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\r\n        var nextCharCode = str.charCodeAt(offset + 1);\r\n        if (isLowSurrogate(nextCharCode)) {\r\n            return ((charCode - 0xD800) << 10) + (nextCharCode - 0xDC00) + 0x10000;\r\n        }\r\n    }\r\n    return charCode;\r\n}\r\n/**\r\n * get the code point that ends right before offset `offset`\r\n */\r\nfunction getPrevCodePoint(str, offset) {\r\n    var charCode = str.charCodeAt(offset - 1);\r\n    if (isLowSurrogate(charCode) && offset > 1) {\r\n        var prevCharCode = str.charCodeAt(offset - 2);\r\n        if (isHighSurrogate(prevCharCode)) {\r\n            return ((prevCharCode - 0xD800) << 10) + (charCode - 0xDC00) + 0x10000;\r\n        }\r\n    }\r\n    return charCode;\r\n}\r\nexport function nextCharLength(str, offset) {\r\n    var graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n    var initialOffset = offset;\r\n    var len = str.length;\r\n    var initialCodePoint = getNextCodePoint(str, len, offset);\r\n    offset += (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n    var graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\r\n    while (offset < len) {\r\n        var nextCodePoint = getNextCodePoint(str, len, offset);\r\n        var nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\r\n        if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\r\n            break;\r\n        }\r\n        offset += (nextCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n        graphemeBreakType = nextGraphemeBreakType;\r\n    }\r\n    return (offset - initialOffset);\r\n}\r\nexport function prevCharLength(str, offset) {\r\n    var graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n    var initialOffset = offset;\r\n    var initialCodePoint = getPrevCodePoint(str, offset);\r\n    offset -= (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n    var graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\r\n    while (offset > 0) {\r\n        var prevCodePoint = getPrevCodePoint(str, offset);\r\n        var prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\r\n        if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\r\n            break;\r\n        }\r\n        offset -= (prevCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n        graphemeBreakType = prevGraphemeBreakType;\r\n    }\r\n    return (initialOffset - offset);\r\n}\r\nfunction _getCharContainingOffset(str, offset) {\r\n    var graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n    var len = str.length;\r\n    var initialOffset = offset;\r\n    var initialCodePoint = getNextCodePoint(str, len, offset);\r\n    var initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\r\n    offset += (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n    // extend to the right\r\n    var graphemeBreakType = initialGraphemeBreakType;\r\n    while (offset < len) {\r\n        var nextCodePoint = getNextCodePoint(str, len, offset);\r\n        var nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\r\n        if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\r\n            break;\r\n        }\r\n        offset += (nextCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n        graphemeBreakType = nextGraphemeBreakType;\r\n    }\r\n    var endOffset = offset;\r\n    // extend to the left\r\n    offset = initialOffset;\r\n    graphemeBreakType = initialGraphemeBreakType;\r\n    while (offset > 0) {\r\n        var prevCodePoint = getPrevCodePoint(str, offset);\r\n        var prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\r\n        if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\r\n            break;\r\n        }\r\n        offset -= (prevCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n        graphemeBreakType = prevGraphemeBreakType;\r\n    }\r\n    return [offset, endOffset];\r\n}\r\nexport function getCharContainingOffset(str, offset) {\r\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\r\n        return _getCharContainingOffset(str, offset - 1);\r\n    }\r\n    return _getCharContainingOffset(str, offset);\r\n}\r\n/**\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\r\n */\r\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\r\n/**\r\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\r\n */\r\nexport function containsRTL(str) {\r\n    return CONTAINS_RTL.test(str);\r\n}\r\n/**\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\r\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\r\nexport function containsEmoji(str) {\r\n    return CONTAINS_EMOJI.test(str);\r\n}\r\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\r\n/**\r\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\r\n */\r\nexport function isBasicASCII(str) {\r\n    return IS_BASIC_ASCII.test(str);\r\n}\r\nexport function containsFullWidthCharacter(str) {\r\n    for (var i = 0, len = str.length; i < len; i++) {\r\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function isFullWidthCharacter(charCode) {\r\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\r\n    // http://jrgraphix.net/research/unicode_blocks.php\r\n    //          2E80 — 2EFF   CJK Radicals Supplement\r\n    //          2F00 — 2FDF   Kangxi Radicals\r\n    //          2FF0 — 2FFF   Ideographic Description Characters\r\n    //          3000 — 303F   CJK Symbols and Punctuation\r\n    //          3040 — 309F   Hiragana\r\n    //          30A0 — 30FF   Katakana\r\n    //          3100 — 312F   Bopomofo\r\n    //          3130 — 318F   Hangul Compatibility Jamo\r\n    //          3190 — 319F   Kanbun\r\n    //          31A0 — 31BF   Bopomofo Extended\r\n    //          31F0 — 31FF   Katakana Phonetic Extensions\r\n    //          3200 — 32FF   Enclosed CJK Letters and Months\r\n    //          3300 — 33FF   CJK Compatibility\r\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\r\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\r\n    //          4E00 — 9FFF   CJK Unified Ideographs\r\n    //          A000 — A48F   Yi Syllables\r\n    //          A490 — A4CF   Yi Radicals\r\n    //          AC00 — D7AF   Hangul Syllables\r\n    // [IGNORE] D800 — DB7F   High Surrogates\r\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\r\n    // [IGNORE] DC00 — DFFF   Low Surrogates\r\n    // [IGNORE] E000 — F8FF   Private Use Area\r\n    //          F900 — FAFF   CJK Compatibility Ideographs\r\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\r\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\r\n    // [IGNORE] FE00 — FE0F   Variation Selectors\r\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\r\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\r\n    // [IGNORE] FE50 — FE6F   Small Form Variants\r\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\r\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\r\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\r\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\r\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\r\n    // [IGNORE] FFF0 — FFFF   Specials\r\n    charCode = +charCode; // @perf\r\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\r\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\r\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\r\n}\r\n/**\r\n * A fast function (therefore imprecise) to check if code points are emojis.\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\r\nexport function isEmojiImprecise(x) {\r\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\r\n        || (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\r\n        || (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685));\r\n}\r\n// -- UTF-8 BOM\r\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\r\nexport function startsWithUTF8BOM(str) {\r\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\r\n}\r\nexport function safeBtoa(str) {\r\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\r\n}\r\nexport function repeat(s, count) {\r\n    var result = '';\r\n    for (var i = 0; i < count; i++) {\r\n        result += s;\r\n    }\r\n    return result;\r\n}\r\nexport function containsUppercaseCharacter(target, ignoreEscapedChars) {\r\n    if (ignoreEscapedChars === void 0) { ignoreEscapedChars = false; }\r\n    if (!target) {\r\n        return false;\r\n    }\r\n    if (ignoreEscapedChars) {\r\n        target = target.replace(/\\\\./g, '');\r\n    }\r\n    return target.toLowerCase() !== target;\r\n}\r\n/**\r\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\r\n */\r\nexport function singleLetterHash(n) {\r\n    var LETTERS_CNT = (90 /* Z */ - 65 /* A */ + 1);\r\n    n = n % (2 * LETTERS_CNT);\r\n    if (n < LETTERS_CNT) {\r\n        return String.fromCharCode(97 /* a */ + n);\r\n    }\r\n    return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\r\n}\r\n//#region Unicode Grapheme Break\r\nexport function getGraphemeBreakType(codePoint) {\r\n    var graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n    return graphemeBreakTree.getGraphemeBreakType(codePoint);\r\n}\r\nexport function breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\r\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\r\n    // !!! Let's make the common case a bit faster\r\n    if (breakTypeA === 0 /* Other */) {\r\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\r\n        return (breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */);\r\n    }\r\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\r\n    // GB3                                        CR × LF\r\n    // GB4                       (Control | CR | LF) ÷\r\n    // GB5                                           ÷ (Control | CR | LF)\r\n    if (breakTypeA === 2 /* CR */) {\r\n        if (breakTypeB === 3 /* LF */) {\r\n            return false; // GB3\r\n        }\r\n    }\r\n    if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\r\n        return true; // GB4\r\n    }\r\n    if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\r\n        return true; // GB5\r\n    }\r\n    // Do not break Hangul syllable sequences.\r\n    // GB6                                         L × (L | V | LV | LVT)\r\n    // GB7                                  (LV | V) × (V | T)\r\n    // GB8                                 (LVT | T) × T\r\n    if (breakTypeA === 8 /* L */) {\r\n        if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\r\n            return false; // GB6\r\n        }\r\n    }\r\n    if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\r\n        if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\r\n            return false; // GB7\r\n        }\r\n    }\r\n    if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\r\n        if (breakTypeB === 10 /* T */) {\r\n            return false; // GB8\r\n        }\r\n    }\r\n    // Do not break before extending characters or ZWJ.\r\n    // GB9                                           × (Extend | ZWJ)\r\n    if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\r\n        return false; // GB9\r\n    }\r\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\r\n    // Do not break before SpacingMarks, or after Prepend characters.\r\n    // GB9a                                          × SpacingMark\r\n    // GB9b                                  Prepend ×\r\n    if (breakTypeB === 7 /* SpacingMark */) {\r\n        return false; // GB9a\r\n    }\r\n    if (breakTypeA === 1 /* Prepend */) {\r\n        return false; // GB9b\r\n    }\r\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\r\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\r\n    if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\r\n        // Note: we are not implementing the rule entirely here to avoid introducing states\r\n        return false; // GB11\r\n    }\r\n    // GB12                          sot (RI RI)* RI × RI\r\n    // GB13                        [^RI] (RI RI)* RI × RI\r\n    if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\r\n        // Note: we are not implementing the rule entirely here to avoid introducing states\r\n        return false; // GB12 & GB13\r\n    }\r\n    // GB999                                     Any ÷ Any\r\n    return true;\r\n}\r\nvar GraphemeBreakTree = /** @class */ (function () {\r\n    function GraphemeBreakTree() {\r\n        this._data = getGraphemeBreakRawData();\r\n    }\r\n    GraphemeBreakTree.getInstance = function () {\r\n        if (!GraphemeBreakTree._INSTANCE) {\r\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\r\n        }\r\n        return GraphemeBreakTree._INSTANCE;\r\n    };\r\n    GraphemeBreakTree.prototype.getGraphemeBreakType = function (codePoint) {\r\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\r\n        if (codePoint < 32) {\r\n            if (codePoint === 10 /* LineFeed */) {\r\n                return 3 /* LF */;\r\n            }\r\n            if (codePoint === 13 /* CarriageReturn */) {\r\n                return 2 /* CR */;\r\n            }\r\n            return 4 /* Control */;\r\n        }\r\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\r\n        if (codePoint < 127) {\r\n            return 0 /* Other */;\r\n        }\r\n        var data = this._data;\r\n        var nodeCount = data.length / 3;\r\n        var nodeIndex = 1;\r\n        while (nodeIndex <= nodeCount) {\r\n            if (codePoint < data[3 * nodeIndex]) {\r\n                // go left\r\n                nodeIndex = 2 * nodeIndex;\r\n            }\r\n            else if (codePoint > data[3 * nodeIndex + 1]) {\r\n                // go right\r\n                nodeIndex = 2 * nodeIndex + 1;\r\n            }\r\n            else {\r\n                // hit\r\n                return data[3 * nodeIndex + 2];\r\n            }\r\n        }\r\n        return 0 /* Other */;\r\n    };\r\n    GraphemeBreakTree._INSTANCE = null;\r\n    return GraphemeBreakTree;\r\n}());\r\nfunction getGraphemeBreakRawData() {\r\n    // generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\r\n    return JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\r\n}\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\r\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\r\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\r\n    return diffAlgo.ComputeDiff(pretty);\r\n}\r\nvar LineSequence = /** @class */ (function () {\r\n    function LineSequence(lines) {\r\n        var startColumns = [];\r\n        var endColumns = [];\r\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\r\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\r\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\r\n        }\r\n        this.lines = lines;\r\n        this._startColumns = startColumns;\r\n        this._endColumns = endColumns;\r\n    }\r\n    LineSequence.prototype.getElements = function () {\r\n        var elements = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\r\n        }\r\n        return elements;\r\n    };\r\n    LineSequence.prototype.getStartLineNumber = function (i) {\r\n        return i + 1;\r\n    };\r\n    LineSequence.prototype.getEndLineNumber = function (i) {\r\n        return i + 1;\r\n    };\r\n    LineSequence.prototype.createCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\r\n        var charCodes = [];\r\n        var lineNumbers = [];\r\n        var columns = [];\r\n        var len = 0;\r\n        for (var index = startIndex; index <= endIndex; index++) {\r\n            var lineContent = this.lines[index];\r\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\r\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\r\n            for (var col = startColumn; col < endColumn; col++) {\r\n                charCodes[len] = lineContent.charCodeAt(col - 1);\r\n                lineNumbers[len] = index + 1;\r\n                columns[len] = col;\r\n                len++;\r\n            }\r\n        }\r\n        return new CharSequence(charCodes, lineNumbers, columns);\r\n    };\r\n    return LineSequence;\r\n}());\r\nvar CharSequence = /** @class */ (function () {\r\n    function CharSequence(charCodes, lineNumbers, columns) {\r\n        this._charCodes = charCodes;\r\n        this._lineNumbers = lineNumbers;\r\n        this._columns = columns;\r\n    }\r\n    CharSequence.prototype.getElements = function () {\r\n        return this._charCodes;\r\n    };\r\n    CharSequence.prototype.getStartLineNumber = function (i) {\r\n        return this._lineNumbers[i];\r\n    };\r\n    CharSequence.prototype.getStartColumn = function (i) {\r\n        return this._columns[i];\r\n    };\r\n    CharSequence.prototype.getEndLineNumber = function (i) {\r\n        return this._lineNumbers[i];\r\n    };\r\n    CharSequence.prototype.getEndColumn = function (i) {\r\n        return this._columns[i] + 1;\r\n    };\r\n    return CharSequence;\r\n}());\r\nvar CharChange = /** @class */ (function () {\r\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\r\n        this.originalStartLineNumber = originalStartLineNumber;\r\n        this.originalStartColumn = originalStartColumn;\r\n        this.originalEndLineNumber = originalEndLineNumber;\r\n        this.originalEndColumn = originalEndColumn;\r\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\r\n        this.modifiedStartColumn = modifiedStartColumn;\r\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\r\n        this.modifiedEndColumn = modifiedEndColumn;\r\n    }\r\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\r\n        var originalStartLineNumber;\r\n        var originalStartColumn;\r\n        var originalEndLineNumber;\r\n        var originalEndColumn;\r\n        var modifiedStartLineNumber;\r\n        var modifiedStartColumn;\r\n        var modifiedEndLineNumber;\r\n        var modifiedEndColumn;\r\n        if (diffChange.originalLength === 0) {\r\n            originalStartLineNumber = 0;\r\n            originalStartColumn = 0;\r\n            originalEndLineNumber = 0;\r\n            originalEndColumn = 0;\r\n        }\r\n        else {\r\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\r\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\r\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\r\n        }\r\n        if (diffChange.modifiedLength === 0) {\r\n            modifiedStartLineNumber = 0;\r\n            modifiedStartColumn = 0;\r\n            modifiedEndLineNumber = 0;\r\n            modifiedEndColumn = 0;\r\n        }\r\n        else {\r\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\r\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\r\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n        }\r\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\r\n    };\r\n    return CharChange;\r\n}());\r\nfunction postProcessCharChanges(rawChanges) {\r\n    if (rawChanges.length <= 1) {\r\n        return rawChanges;\r\n    }\r\n    var result = [rawChanges[0]];\r\n    var prevChange = result[0];\r\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\r\n        var currChange = rawChanges[i];\r\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\r\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\r\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\r\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\r\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\r\n            // Merge the current change into the previous one\r\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\r\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\r\n        }\r\n        else {\r\n            // Add the current change\r\n            result.push(currChange);\r\n            prevChange = currChange;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar LineChange = /** @class */ (function () {\r\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\r\n        this.originalStartLineNumber = originalStartLineNumber;\r\n        this.originalEndLineNumber = originalEndLineNumber;\r\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\r\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\r\n        this.charChanges = charChanges;\r\n    }\r\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\r\n        var originalStartLineNumber;\r\n        var originalEndLineNumber;\r\n        var modifiedStartLineNumber;\r\n        var modifiedEndLineNumber;\r\n        var charChanges = undefined;\r\n        if (diffChange.originalLength === 0) {\r\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\r\n            originalEndLineNumber = 0;\r\n        }\r\n        else {\r\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\r\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n        }\r\n        if (diffChange.modifiedLength === 0) {\r\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\r\n            modifiedEndLineNumber = 0;\r\n        }\r\n        else {\r\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\r\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n        }\r\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\r\n            // Compute character changes for diff chunks of at most 20 lines...\r\n            var originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\r\n            var modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\r\n            if (shouldPostProcessCharChanges) {\r\n                rawChanges = postProcessCharChanges(rawChanges);\r\n            }\r\n            charChanges = [];\r\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\r\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\r\n            }\r\n        }\r\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\r\n    };\r\n    return LineChange;\r\n}());\r\nvar DiffComputer = /** @class */ (function () {\r\n    function DiffComputer(originalLines, modifiedLines, opts) {\r\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\r\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\r\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\r\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\r\n        this.originalLines = originalLines;\r\n        this.modifiedLines = modifiedLines;\r\n        this.original = new LineSequence(originalLines);\r\n        this.modified = new LineSequence(modifiedLines);\r\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\r\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\r\n    }\r\n    DiffComputer.prototype.computeDiff = function () {\r\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\r\n            // empty original => fast path\r\n            return {\r\n                quitEarly: false,\r\n                changes: [{\r\n                        originalStartLineNumber: 1,\r\n                        originalEndLineNumber: 1,\r\n                        modifiedStartLineNumber: 1,\r\n                        modifiedEndLineNumber: this.modified.lines.length,\r\n                        charChanges: [{\r\n                                modifiedEndColumn: 0,\r\n                                modifiedEndLineNumber: 0,\r\n                                modifiedStartColumn: 0,\r\n                                modifiedStartLineNumber: 0,\r\n                                originalEndColumn: 0,\r\n                                originalEndLineNumber: 0,\r\n                                originalStartColumn: 0,\r\n                                originalStartLineNumber: 0\r\n                            }]\r\n                    }]\r\n            };\r\n        }\r\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\r\n            // empty modified => fast path\r\n            return {\r\n                quitEarly: false,\r\n                changes: [{\r\n                        originalStartLineNumber: 1,\r\n                        originalEndLineNumber: this.original.lines.length,\r\n                        modifiedStartLineNumber: 1,\r\n                        modifiedEndLineNumber: 1,\r\n                        charChanges: [{\r\n                                modifiedEndColumn: 0,\r\n                                modifiedEndLineNumber: 0,\r\n                                modifiedStartColumn: 0,\r\n                                modifiedStartLineNumber: 0,\r\n                                originalEndColumn: 0,\r\n                                originalEndLineNumber: 0,\r\n                                originalStartColumn: 0,\r\n                                originalStartLineNumber: 0\r\n                            }]\r\n                    }]\r\n            };\r\n        }\r\n        var diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\r\n        var rawChanges = diffResult.changes;\r\n        var quitEarly = diffResult.quitEarly;\r\n        // The diff is always computed with ignoring trim whitespace\r\n        // This ensures we get the prettiest diff\r\n        if (this.shouldIgnoreTrimWhitespace) {\r\n            var lineChanges = [];\r\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\r\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n            }\r\n            return {\r\n                quitEarly: quitEarly,\r\n                changes: lineChanges\r\n            };\r\n        }\r\n        // Need to post-process and introduce changes where the trim whitespace is different\r\n        // Note that we are looping starting at -1 to also cover the lines before the first change\r\n        var result = [];\r\n        var originalLineIndex = 0;\r\n        var modifiedLineIndex = 0;\r\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\r\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\r\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\r\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\r\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\r\n                var originalLine = this.originalLines[originalLineIndex];\r\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\r\n                if (originalLine !== modifiedLine) {\r\n                    // These lines differ only in trim whitespace\r\n                    // Check the leading whitespace\r\n                    {\r\n                        var originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\r\n                        var modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\r\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\r\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\r\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\r\n                            if (originalChar !== modifiedChar) {\r\n                                break;\r\n                            }\r\n                            originalStartColumn--;\r\n                            modifiedStartColumn--;\r\n                        }\r\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\r\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\r\n                        }\r\n                    }\r\n                    // Check the trailing whitespace\r\n                    {\r\n                        var originalEndColumn = getLastNonBlankColumn(originalLine, 1);\r\n                        var modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\r\n                        var originalMaxColumn = originalLine.length + 1;\r\n                        var modifiedMaxColumn = modifiedLine.length + 1;\r\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\r\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\r\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\r\n                            if (originalChar !== modifiedChar) {\r\n                                break;\r\n                            }\r\n                            originalEndColumn++;\r\n                            modifiedEndColumn++;\r\n                        }\r\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\r\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\r\n                        }\r\n                    }\r\n                }\r\n                originalLineIndex++;\r\n                modifiedLineIndex++;\r\n            }\r\n            if (nextChange) {\r\n                // Emit the actual change\r\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n                originalLineIndex += nextChange.originalLength;\r\n                modifiedLineIndex += nextChange.modifiedLength;\r\n            }\r\n        }\r\n        return {\r\n            quitEarly: quitEarly,\r\n            changes: result\r\n        };\r\n    };\r\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\r\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\r\n            // Merged into previous\r\n            return;\r\n        }\r\n        var charChanges = undefined;\r\n        if (this.shouldComputeCharChanges) {\r\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\r\n        }\r\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\r\n    };\r\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\r\n        var len = result.length;\r\n        if (len === 0) {\r\n            return false;\r\n        }\r\n        var prevChange = result[len - 1];\r\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\r\n            // Don't merge with inserts/deletes\r\n            return false;\r\n        }\r\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\r\n            prevChange.originalEndLineNumber = originalLineNumber;\r\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\r\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\r\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return DiffComputer;\r\n}());\r\nexport { DiffComputer };\r\nfunction getFirstNonBlankColumn(txt, defaultValue) {\r\n    var r = strings.firstNonWhitespaceIndex(txt);\r\n    if (r === -1) {\r\n        return defaultValue;\r\n    }\r\n    return r + 1;\r\n}\r\nfunction getLastNonBlankColumn(txt, defaultValue) {\r\n    var r = strings.lastNonWhitespaceIndex(txt);\r\n    if (r === -1) {\r\n        return defaultValue;\r\n    }\r\n    return r + 2;\r\n}\r\nfunction createContinueProcessingPredicate(maximumRuntime) {\r\n    if (maximumRuntime === 0) {\r\n        return function () { return true; };\r\n    }\r\n    var startTime = Date.now();\r\n    return function () {\r\n        return Date.now() - startTime < maximumRuntime;\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function toUint8(v) {\r\n    if (v < 0) {\r\n        return 0;\r\n    }\r\n    if (v > 255 /* MAX_UINT_8 */) {\r\n        return 255 /* MAX_UINT_8 */;\r\n    }\r\n    return v | 0;\r\n}\r\nexport function toUint32(v) {\r\n    if (v < 0) {\r\n        return 0;\r\n    }\r\n    if (v > 4294967295 /* MAX_UINT_32 */) {\r\n        return 4294967295 /* MAX_UINT_32 */;\r\n    }\r\n    return v | 0;\r\n}\r\nexport function toUint32Array(arr) {\r\n    var len = arr.length;\r\n    var r = new Uint32Array(len);\r\n    for (var i = 0; i < len; i++) {\r\n        r[i] = toUint32(arr[i]);\r\n    }\r\n    return r;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { toUint32 } from '../../../base/common/uint.js';\r\nvar PrefixSumIndexOfResult = /** @class */ (function () {\r\n    function PrefixSumIndexOfResult(index, remainder) {\r\n        this.index = index;\r\n        this.remainder = remainder;\r\n    }\r\n    return PrefixSumIndexOfResult;\r\n}());\r\nexport { PrefixSumIndexOfResult };\r\nvar PrefixSumComputer = /** @class */ (function () {\r\n    function PrefixSumComputer(values) {\r\n        this.values = values;\r\n        this.prefixSum = new Uint32Array(values.length);\r\n        this.prefixSumValidIndex = new Int32Array(1);\r\n        this.prefixSumValidIndex[0] = -1;\r\n    }\r\n    PrefixSumComputer.prototype.getCount = function () {\r\n        return this.values.length;\r\n    };\r\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\r\n        insertIndex = toUint32(insertIndex);\r\n        var oldValues = this.values;\r\n        var oldPrefixSum = this.prefixSum;\r\n        var insertValuesLen = insertValues.length;\r\n        if (insertValuesLen === 0) {\r\n            return false;\r\n        }\r\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\r\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\r\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\r\n        this.values.set(insertValues, insertIndex);\r\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\r\n            this.prefixSumValidIndex[0] = insertIndex - 1;\r\n        }\r\n        this.prefixSum = new Uint32Array(this.values.length);\r\n        if (this.prefixSumValidIndex[0] >= 0) {\r\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\r\n        }\r\n        return true;\r\n    };\r\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\r\n        index = toUint32(index);\r\n        value = toUint32(value);\r\n        if (this.values[index] === value) {\r\n            return false;\r\n        }\r\n        this.values[index] = value;\r\n        if (index - 1 < this.prefixSumValidIndex[0]) {\r\n            this.prefixSumValidIndex[0] = index - 1;\r\n        }\r\n        return true;\r\n    };\r\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\r\n        startIndex = toUint32(startIndex);\r\n        cnt = toUint32(cnt);\r\n        var oldValues = this.values;\r\n        var oldPrefixSum = this.prefixSum;\r\n        if (startIndex >= oldValues.length) {\r\n            return false;\r\n        }\r\n        var maxCnt = oldValues.length - startIndex;\r\n        if (cnt >= maxCnt) {\r\n            cnt = maxCnt;\r\n        }\r\n        if (cnt === 0) {\r\n            return false;\r\n        }\r\n        this.values = new Uint32Array(oldValues.length - cnt);\r\n        this.values.set(oldValues.subarray(0, startIndex), 0);\r\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\r\n        this.prefixSum = new Uint32Array(this.values.length);\r\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\r\n            this.prefixSumValidIndex[0] = startIndex - 1;\r\n        }\r\n        if (this.prefixSumValidIndex[0] >= 0) {\r\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\r\n        }\r\n        return true;\r\n    };\r\n    PrefixSumComputer.prototype.getTotalValue = function () {\r\n        if (this.values.length === 0) {\r\n            return 0;\r\n        }\r\n        return this._getAccumulatedValue(this.values.length - 1);\r\n    };\r\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\r\n        if (index < 0) {\r\n            return 0;\r\n        }\r\n        index = toUint32(index);\r\n        return this._getAccumulatedValue(index);\r\n    };\r\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\r\n        if (index <= this.prefixSumValidIndex[0]) {\r\n            return this.prefixSum[index];\r\n        }\r\n        var startIndex = this.prefixSumValidIndex[0] + 1;\r\n        if (startIndex === 0) {\r\n            this.prefixSum[0] = this.values[0];\r\n            startIndex++;\r\n        }\r\n        if (index >= this.values.length) {\r\n            index = this.values.length - 1;\r\n        }\r\n        for (var i = startIndex; i <= index; i++) {\r\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\r\n        }\r\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\r\n        return this.prefixSum[index];\r\n    };\r\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\r\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\r\n        // Compute all sums (to get a fully valid prefixSum)\r\n        this.getTotalValue();\r\n        var low = 0;\r\n        var high = this.values.length - 1;\r\n        var mid = 0;\r\n        var midStop = 0;\r\n        var midStart = 0;\r\n        while (low <= high) {\r\n            mid = low + ((high - low) / 2) | 0;\r\n            midStop = this.prefixSum[mid];\r\n            midStart = midStop - this.values[mid];\r\n            if (accumulatedValue < midStart) {\r\n                high = mid - 1;\r\n            }\r\n            else if (accumulatedValue >= midStop) {\r\n                low = mid + 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\r\n    };\r\n    return PrefixSumComputer;\r\n}());\r\nexport { PrefixSumComputer };\r\nvar PrefixSumComputerWithCache = /** @class */ (function () {\r\n    function PrefixSumComputerWithCache(values) {\r\n        this._cacheAccumulatedValueStart = 0;\r\n        this._cache = null;\r\n        this._actual = new PrefixSumComputer(values);\r\n        this._bustCache();\r\n    }\r\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\r\n        this._cacheAccumulatedValueStart = 0;\r\n        this._cache = null;\r\n    };\r\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\r\n        if (this._actual.insertValues(insertIndex, insertValues)) {\r\n            this._bustCache();\r\n        }\r\n    };\r\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\r\n        if (this._actual.changeValue(index, value)) {\r\n            this._bustCache();\r\n        }\r\n    };\r\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\r\n        if (this._actual.removeValues(startIndex, cnt)) {\r\n            this._bustCache();\r\n        }\r\n    };\r\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\r\n        return this._actual.getTotalValue();\r\n    };\r\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\r\n        return this._actual.getAccumulatedValue(index);\r\n    };\r\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\r\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\r\n        if (this._cache !== null) {\r\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\r\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\r\n                // Cache hit!\r\n                return this._cache[cacheIndex];\r\n            }\r\n        }\r\n        // Cache miss!\r\n        return this._actual.getIndexOf(accumulatedValue);\r\n    };\r\n    /**\r\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\r\n     */\r\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\r\n        var newCache = [];\r\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\r\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\r\n        }\r\n        this._cache = newCache;\r\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\r\n    };\r\n    return PrefixSumComputerWithCache;\r\n}());\r\nexport { PrefixSumComputerWithCache };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Position } from '../core/position.js';\r\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\r\nvar MirrorTextModel = /** @class */ (function () {\r\n    function MirrorTextModel(uri, lines, eol, versionId) {\r\n        this._uri = uri;\r\n        this._lines = lines;\r\n        this._eol = eol;\r\n        this._versionId = versionId;\r\n        this._lineStarts = null;\r\n    }\r\n    MirrorTextModel.prototype.dispose = function () {\r\n        this._lines.length = 0;\r\n    };\r\n    MirrorTextModel.prototype.getText = function () {\r\n        return this._lines.join(this._eol);\r\n    };\r\n    MirrorTextModel.prototype.onEvents = function (e) {\r\n        if (e.eol && e.eol !== this._eol) {\r\n            this._eol = e.eol;\r\n            this._lineStarts = null;\r\n        }\r\n        // Update my lines\r\n        var changes = e.changes;\r\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\r\n            var change = changes_1[_i];\r\n            this._acceptDeleteRange(change.range);\r\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\r\n        }\r\n        this._versionId = e.versionId;\r\n    };\r\n    MirrorTextModel.prototype._ensureLineStarts = function () {\r\n        if (!this._lineStarts) {\r\n            var eolLength = this._eol.length;\r\n            var linesLength = this._lines.length;\r\n            var lineStartValues = new Uint32Array(linesLength);\r\n            for (var i = 0; i < linesLength; i++) {\r\n                lineStartValues[i] = this._lines[i].length + eolLength;\r\n            }\r\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\r\n        }\r\n    };\r\n    /**\r\n     * All changes to a line's text go through this method\r\n     */\r\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\r\n        this._lines[lineIndex] = newValue;\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            if (range.startColumn === range.endColumn) {\r\n                // Nothing to delete\r\n                return;\r\n            }\r\n            // Delete text on the affected line\r\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\r\n            return;\r\n        }\r\n        // Take remaining text on last line and append it to remaining text on first line\r\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\r\n        // Delete middle lines\r\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\r\n        if (insertText.length === 0) {\r\n            // Nothing to insert\r\n            return;\r\n        }\r\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\r\n        if (insertLines.length === 1) {\r\n            // Inserting text on one line\r\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                + insertLines[0]\r\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\r\n            return;\r\n        }\r\n        // Append overflowing text from first line to the end of text to insert\r\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\r\n        // Delete overflowing text from first line and insert text on first line\r\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n            + insertLines[0]);\r\n        // Insert new lines & store lengths\r\n        var newLengths = new Uint32Array(insertLines.length - 1);\r\n        for (var i = 1; i < insertLines.length; i++) {\r\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\r\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\r\n        }\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\r\n        }\r\n    };\r\n    return MirrorTextModel;\r\n}());\r\nexport { MirrorTextModel };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\r\n/**\r\n * Create a word definition regular expression based on default word separators.\r\n * Optionally provide allowed separators that should be included in words.\r\n *\r\n * The default would look like this:\r\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\r\n */\r\nfunction createWordRegExp(allowInWords) {\r\n    if (allowInWords === void 0) { allowInWords = ''; }\r\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\r\n    for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\r\n        var sep = USUAL_WORD_SEPARATORS_1[_i];\r\n        if (allowInWords.indexOf(sep) >= 0) {\r\n            continue;\r\n        }\r\n        source += '\\\\' + sep;\r\n    }\r\n    source += '\\\\s]+)';\r\n    return new RegExp(source, 'g');\r\n}\r\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\r\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\r\nexport function ensureValidWordDefinition(wordDefinition) {\r\n    var result = DEFAULT_WORD_REGEXP;\r\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\r\n        if (!wordDefinition.global) {\r\n            var flags = 'g';\r\n            if (wordDefinition.ignoreCase) {\r\n                flags += 'i';\r\n            }\r\n            if (wordDefinition.multiline) {\r\n                flags += 'm';\r\n            }\r\n            if (wordDefinition.unicode) {\r\n                flags += 'u';\r\n            }\r\n            result = new RegExp(wordDefinition.source, flags);\r\n        }\r\n        else {\r\n            result = wordDefinition;\r\n        }\r\n    }\r\n    result.lastIndex = 0;\r\n    return result;\r\n}\r\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\r\n    // find whitespace enclosed text around column and match from there\r\n    var pos = column - 1 - textOffset;\r\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\r\n    wordDefinition.lastIndex = start;\r\n    var match;\r\n    while (match = wordDefinition.exec(text)) {\r\n        var matchIndex = match.index || 0;\r\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\r\n            return {\r\n                word: match[0],\r\n                startColumn: textOffset + 1 + matchIndex,\r\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\r\n    // matches all words starting at the beginning\r\n    // of the input until it finds a match that encloses\r\n    // the desired column. slow but correct\r\n    var pos = column - 1 - textOffset;\r\n    wordDefinition.lastIndex = 0;\r\n    var match;\r\n    while (match = wordDefinition.exec(text)) {\r\n        var matchIndex = match.index || 0;\r\n        if (matchIndex > pos) {\r\n            // |nW -> matched only after the pos\r\n            return null;\r\n        }\r\n        else if (wordDefinition.lastIndex >= pos) {\r\n            // W|W -> match encloses pos\r\n            return {\r\n                word: match[0],\r\n                startColumn: textOffset + 1 + matchIndex,\r\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\r\n    // if `words` can contain whitespace character we have to use the slow variant\r\n    // otherwise we use the fast variant of finding a word\r\n    wordDefinition.lastIndex = 0;\r\n    var match = wordDefinition.exec(text);\r\n    if (!match) {\r\n        return null;\r\n    }\r\n    // todo@joh the `match` could already be the (first) word\r\n    var ret = match[0].indexOf(' ') >= 0\r\n        // did match a word which contains a space character -> use slow word find\r\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\r\n        // sane word definition -> use fast word find\r\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\r\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\r\n    // in an undefined state and to not confuse other users of the wordDefinition\r\n    // we reset the lastIndex\r\n    wordDefinition.lastIndex = 0;\r\n    return ret;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { toUint8 } from '../../../base/common/uint.js';\r\n/**\r\n * A fast character classifier that uses a compact array for ASCII values.\r\n */\r\nvar CharacterClassifier = /** @class */ (function () {\r\n    function CharacterClassifier(_defaultValue) {\r\n        var defaultValue = toUint8(_defaultValue);\r\n        this._defaultValue = defaultValue;\r\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\r\n        this._map = new Map();\r\n    }\r\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\r\n        var asciiMap = new Uint8Array(256);\r\n        for (var i = 0; i < 256; i++) {\r\n            asciiMap[i] = defaultValue;\r\n        }\r\n        return asciiMap;\r\n    };\r\n    CharacterClassifier.prototype.set = function (charCode, _value) {\r\n        var value = toUint8(_value);\r\n        if (charCode >= 0 && charCode < 256) {\r\n            this._asciiMap[charCode] = value;\r\n        }\r\n        else {\r\n            this._map.set(charCode, value);\r\n        }\r\n    };\r\n    CharacterClassifier.prototype.get = function (charCode) {\r\n        if (charCode >= 0 && charCode < 256) {\r\n            return this._asciiMap[charCode];\r\n        }\r\n        else {\r\n            return (this._map.get(charCode) || this._defaultValue);\r\n        }\r\n    };\r\n    return CharacterClassifier;\r\n}());\r\nexport { CharacterClassifier };\r\nvar CharacterSet = /** @class */ (function () {\r\n    function CharacterSet() {\r\n        this._actual = new CharacterClassifier(0 /* False */);\r\n    }\r\n    CharacterSet.prototype.add = function (charCode) {\r\n        this._actual.set(charCode, 1 /* True */);\r\n    };\r\n    CharacterSet.prototype.has = function (charCode) {\r\n        return (this._actual.get(charCode) === 1 /* True */);\r\n    };\r\n    return CharacterSet;\r\n}());\r\nexport { CharacterSet };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CharacterClassifier } from '../core/characterClassifier.js';\r\nvar Uint8Matrix = /** @class */ (function () {\r\n    function Uint8Matrix(rows, cols, defaultValue) {\r\n        var data = new Uint8Array(rows * cols);\r\n        for (var i = 0, len = rows * cols; i < len; i++) {\r\n            data[i] = defaultValue;\r\n        }\r\n        this._data = data;\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n    }\r\n    Uint8Matrix.prototype.get = function (row, col) {\r\n        return this._data[row * this.cols + col];\r\n    };\r\n    Uint8Matrix.prototype.set = function (row, col, value) {\r\n        this._data[row * this.cols + col] = value;\r\n    };\r\n    return Uint8Matrix;\r\n}());\r\nexport { Uint8Matrix };\r\nvar StateMachine = /** @class */ (function () {\r\n    function StateMachine(edges) {\r\n        var maxCharCode = 0;\r\n        var maxState = 0 /* Invalid */;\r\n        for (var i = 0, len = edges.length; i < len; i++) {\r\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\r\n            if (chCode > maxCharCode) {\r\n                maxCharCode = chCode;\r\n            }\r\n            if (from > maxState) {\r\n                maxState = from;\r\n            }\r\n            if (to > maxState) {\r\n                maxState = to;\r\n            }\r\n        }\r\n        maxCharCode++;\r\n        maxState++;\r\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\r\n        for (var i = 0, len = edges.length; i < len; i++) {\r\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\r\n            states.set(from, chCode, to);\r\n        }\r\n        this._states = states;\r\n        this._maxCharCode = maxCharCode;\r\n    }\r\n    StateMachine.prototype.nextState = function (currentState, chCode) {\r\n        if (chCode < 0 || chCode >= this._maxCharCode) {\r\n            return 0 /* Invalid */;\r\n        }\r\n        return this._states.get(currentState, chCode);\r\n    };\r\n    return StateMachine;\r\n}());\r\nexport { StateMachine };\r\n// State machine for http:// or https:// or file://\r\nvar _stateMachine = null;\r\nfunction getStateMachine() {\r\n    if (_stateMachine === null) {\r\n        _stateMachine = new StateMachine([\r\n            [1 /* Start */, 104 /* h */, 2 /* H */],\r\n            [1 /* Start */, 72 /* H */, 2 /* H */],\r\n            [1 /* Start */, 102 /* f */, 6 /* F */],\r\n            [1 /* Start */, 70 /* F */, 6 /* F */],\r\n            [2 /* H */, 116 /* t */, 3 /* HT */],\r\n            [2 /* H */, 84 /* T */, 3 /* HT */],\r\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\r\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\r\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\r\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\r\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\r\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\r\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\r\n            [6 /* F */, 105 /* i */, 7 /* FI */],\r\n            [6 /* F */, 73 /* I */, 7 /* FI */],\r\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\r\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\r\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\r\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\r\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\r\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\r\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\r\n        ]);\r\n    }\r\n    return _stateMachine;\r\n}\r\nvar _classifier = null;\r\nfunction getClassifier() {\r\n    if (_classifier === null) {\r\n        _classifier = new CharacterClassifier(0 /* None */);\r\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\r\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\r\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\r\n        }\r\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\r\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\r\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\r\n        }\r\n    }\r\n    return _classifier;\r\n}\r\nvar LinkComputer = /** @class */ (function () {\r\n    function LinkComputer() {\r\n    }\r\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\r\n        // Do not allow to end link in certain characters...\r\n        var lastIncludedCharIndex = linkEndIndex - 1;\r\n        do {\r\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\r\n            var chClass = classifier.get(chCode);\r\n            if (chClass !== 2 /* CannotEndIn */) {\r\n                break;\r\n            }\r\n            lastIncludedCharIndex--;\r\n        } while (lastIncludedCharIndex > linkBeginIndex);\r\n        // Handle links enclosed in parens, square brackets and curlys.\r\n        if (linkBeginIndex > 0) {\r\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\r\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\r\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\r\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\r\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\r\n                // Do not end in ) if ( is before the link start\r\n                // Do not end in ] if [ is before the link start\r\n                // Do not end in } if { is before the link start\r\n                lastIncludedCharIndex--;\r\n            }\r\n        }\r\n        return {\r\n            range: {\r\n                startLineNumber: lineNumber,\r\n                startColumn: linkBeginIndex + 1,\r\n                endLineNumber: lineNumber,\r\n                endColumn: lastIncludedCharIndex + 2\r\n            },\r\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\r\n        };\r\n    };\r\n    LinkComputer.computeLinks = function (model, stateMachine) {\r\n        if (stateMachine === void 0) { stateMachine = getStateMachine(); }\r\n        var classifier = getClassifier();\r\n        var result = [];\r\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\r\n            var line = model.getLineContent(i);\r\n            var len = line.length;\r\n            var j = 0;\r\n            var linkBeginIndex = 0;\r\n            var linkBeginChCode = 0;\r\n            var state = 1 /* Start */;\r\n            var hasOpenParens = false;\r\n            var hasOpenSquareBracket = false;\r\n            var hasOpenCurlyBracket = false;\r\n            while (j < len) {\r\n                var resetStateMachine = false;\r\n                var chCode = line.charCodeAt(j);\r\n                if (state === 13 /* Accept */) {\r\n                    var chClass = void 0;\r\n                    switch (chCode) {\r\n                        case 40 /* OpenParen */:\r\n                            hasOpenParens = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 41 /* CloseParen */:\r\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        case 91 /* OpenSquareBracket */:\r\n                            hasOpenSquareBracket = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 93 /* CloseSquareBracket */:\r\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        case 123 /* OpenCurlyBrace */:\r\n                            hasOpenCurlyBracket = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 125 /* CloseCurlyBrace */:\r\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\r\n                        case 39 /* SingleQuote */:\r\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 34 /* DoubleQuote */:\r\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 96 /* BackTick */:\r\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 42 /* Asterisk */:\r\n                            // `*` terminates a link if the link began with `*`\r\n                            chClass = (linkBeginChCode === 42 /* Asterisk */) ? 1 /* ForceTermination */ : 0 /* None */;\r\n                            break;\r\n                        default:\r\n                            chClass = classifier.get(chCode);\r\n                    }\r\n                    // Check if character terminates link\r\n                    if (chClass === 1 /* ForceTermination */) {\r\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\r\n                        resetStateMachine = true;\r\n                    }\r\n                }\r\n                else if (state === 12 /* End */) {\r\n                    var chClass = void 0;\r\n                    if (chCode === 91 /* OpenSquareBracket */) {\r\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\r\n                        hasOpenSquareBracket = true;\r\n                        chClass = 0 /* None */;\r\n                    }\r\n                    else {\r\n                        chClass = classifier.get(chCode);\r\n                    }\r\n                    // Check if character terminates link\r\n                    if (chClass === 1 /* ForceTermination */) {\r\n                        resetStateMachine = true;\r\n                    }\r\n                    else {\r\n                        state = 13 /* Accept */;\r\n                    }\r\n                }\r\n                else {\r\n                    state = stateMachine.nextState(state, chCode);\r\n                    if (state === 0 /* Invalid */) {\r\n                        resetStateMachine = true;\r\n                    }\r\n                }\r\n                if (resetStateMachine) {\r\n                    state = 1 /* Start */;\r\n                    hasOpenParens = false;\r\n                    hasOpenSquareBracket = false;\r\n                    hasOpenCurlyBracket = false;\r\n                    // Record where the link started\r\n                    linkBeginIndex = j + 1;\r\n                    linkBeginChCode = chCode;\r\n                }\r\n                j++;\r\n            }\r\n            if (state === 13 /* Accept */) {\r\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return LinkComputer;\r\n}());\r\nexport { LinkComputer };\r\n/**\r\n * Returns an array of all links contains in the provided\r\n * document. *Note* that this operation is computational\r\n * expensive and should not run in the UI thread.\r\n */\r\nexport function computeLinks(model) {\r\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\r\n        // Unknown caller!\r\n        return [];\r\n    }\r\n    return LinkComputer.computeLinks(model);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar BasicInplaceReplace = /** @class */ (function () {\r\n    function BasicInplaceReplace() {\r\n        this._defaultValueSet = [\r\n            ['true', 'false'],\r\n            ['True', 'False'],\r\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\r\n            ['public', 'protected', 'private'],\r\n        ];\r\n    }\r\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\r\n        if (range1 && text1) {\r\n            var result = this.doNavigateValueSet(text1, up);\r\n            if (result) {\r\n                return {\r\n                    range: range1,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        if (range2 && text2) {\r\n            var result = this.doNavigateValueSet(text2, up);\r\n            if (result) {\r\n                return {\r\n                    range: range2,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\r\n        var numberResult = this.numberReplace(text, up);\r\n        if (numberResult !== null) {\r\n            return numberResult;\r\n        }\r\n        return this.textReplace(text, up);\r\n    };\r\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\r\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\r\n        var n1 = Number(value);\r\n        var n2 = parseFloat(value);\r\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\r\n            if (n1 === 0 && !up) {\r\n                return null; // don't do negative\r\n                //\t\t\t} else if(n1 === 9 && up) {\r\n                //\t\t\t\treturn null; // don't insert 10 into a number\r\n            }\r\n            else {\r\n                n1 = Math.floor(n1 * precision);\r\n                n1 += up ? precision : -precision;\r\n                return String(n1 / precision);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\r\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\r\n    };\r\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\r\n        var result = null;\r\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\r\n            result = this.valueSetReplace(valueSets[i], value, up);\r\n        }\r\n        return result;\r\n    };\r\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\r\n        var idx = valueSet.indexOf(value);\r\n        if (idx >= 0) {\r\n            idx += up ? +1 : -1;\r\n            if (idx < 0) {\r\n                idx = valueSet.length - 1;\r\n            }\r\n            else {\r\n                idx %= valueSet.length;\r\n            }\r\n            return valueSet[idx];\r\n        }\r\n        return null;\r\n    };\r\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\r\n    return BasicInplaceReplace;\r\n}());\r\nexport { BasicInplaceReplace };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { FIN } from './iterator.js';\r\nvar Node = /** @class */ (function () {\r\n    function Node(element) {\r\n        this.element = element;\r\n        this.next = Node.Undefined;\r\n        this.prev = Node.Undefined;\r\n    }\r\n    Node.Undefined = new Node(undefined);\r\n    return Node;\r\n}());\r\nvar LinkedList = /** @class */ (function () {\r\n    function LinkedList() {\r\n        this._first = Node.Undefined;\r\n        this._last = Node.Undefined;\r\n        this._size = 0;\r\n    }\r\n    Object.defineProperty(LinkedList.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinkedList.prototype.isEmpty = function () {\r\n        return this._first === Node.Undefined;\r\n    };\r\n    LinkedList.prototype.clear = function () {\r\n        this._first = Node.Undefined;\r\n        this._last = Node.Undefined;\r\n        this._size = 0;\r\n    };\r\n    LinkedList.prototype.unshift = function (element) {\r\n        return this._insert(element, false);\r\n    };\r\n    LinkedList.prototype.push = function (element) {\r\n        return this._insert(element, true);\r\n    };\r\n    LinkedList.prototype._insert = function (element, atTheEnd) {\r\n        var _this = this;\r\n        var newNode = new Node(element);\r\n        if (this._first === Node.Undefined) {\r\n            this._first = newNode;\r\n            this._last = newNode;\r\n        }\r\n        else if (atTheEnd) {\r\n            // push\r\n            var oldLast = this._last;\r\n            this._last = newNode;\r\n            newNode.prev = oldLast;\r\n            oldLast.next = newNode;\r\n        }\r\n        else {\r\n            // unshift\r\n            var oldFirst = this._first;\r\n            this._first = newNode;\r\n            newNode.next = oldFirst;\r\n            oldFirst.prev = newNode;\r\n        }\r\n        this._size += 1;\r\n        var didRemove = false;\r\n        return function () {\r\n            if (!didRemove) {\r\n                didRemove = true;\r\n                _this._remove(newNode);\r\n            }\r\n        };\r\n    };\r\n    LinkedList.prototype.shift = function () {\r\n        if (this._first === Node.Undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            var res = this._first.element;\r\n            this._remove(this._first);\r\n            return res;\r\n        }\r\n    };\r\n    LinkedList.prototype.pop = function () {\r\n        if (this._last === Node.Undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            var res = this._last.element;\r\n            this._remove(this._last);\r\n            return res;\r\n        }\r\n    };\r\n    LinkedList.prototype._remove = function (node) {\r\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\r\n            // middle\r\n            var anchor = node.prev;\r\n            anchor.next = node.next;\r\n            node.next.prev = anchor;\r\n        }\r\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\r\n            // only node\r\n            this._first = Node.Undefined;\r\n            this._last = Node.Undefined;\r\n        }\r\n        else if (node.next === Node.Undefined) {\r\n            // last\r\n            this._last = this._last.prev;\r\n            this._last.next = Node.Undefined;\r\n        }\r\n        else if (node.prev === Node.Undefined) {\r\n            // first\r\n            this._first = this._first.next;\r\n            this._first.prev = Node.Undefined;\r\n        }\r\n        // done\r\n        this._size -= 1;\r\n    };\r\n    LinkedList.prototype.iterator = function () {\r\n        var element;\r\n        var node = this._first;\r\n        return {\r\n            next: function () {\r\n                if (node === Node.Undefined) {\r\n                    return FIN;\r\n                }\r\n                if (!element) {\r\n                    element = { done: false, value: node.element };\r\n                }\r\n                else {\r\n                    element.value = node.element;\r\n                }\r\n                node = node.next;\r\n                return element;\r\n            }\r\n        };\r\n    };\r\n    LinkedList.prototype.toArray = function () {\r\n        var result = [];\r\n        for (var node = this._first; node !== Node.Undefined; node = node.next) {\r\n            result.push(node.element);\r\n        }\r\n        return result;\r\n    };\r\n    return LinkedList;\r\n}());\r\nexport { LinkedList };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { onUnexpectedError } from './errors.js';\r\nimport { once as onceFn } from './functional.js';\r\nimport { Disposable, toDisposable, combinedDisposable, DisposableStore } from './lifecycle.js';\r\nimport { LinkedList } from './linkedList.js';\r\nexport var Event;\r\n(function (Event) {\r\n    Event.None = function () { return Disposable.None; };\r\n    /**\r\n     * Given an event, returns another event which only fires once.\r\n     */\r\n    function once(event) {\r\n        return function (listener, thisArgs, disposables) {\r\n            if (thisArgs === void 0) { thisArgs = null; }\r\n            // we need this, in case the event fires during the listener call\r\n            var didFire = false;\r\n            var result;\r\n            result = event(function (e) {\r\n                if (didFire) {\r\n                    return;\r\n                }\r\n                else if (result) {\r\n                    result.dispose();\r\n                }\r\n                else {\r\n                    didFire = true;\r\n                }\r\n                return listener.call(thisArgs, e);\r\n            }, null, disposables);\r\n            if (didFire) {\r\n                result.dispose();\r\n            }\r\n            return result;\r\n        };\r\n    }\r\n    Event.once = once;\r\n    /**\r\n     * Given an event and a `map` function, returns another event which maps each element\r\n     * through the mapping function.\r\n     */\r\n    function map(event, map) {\r\n        return snapshot(function (listener, thisArgs, disposables) {\r\n            if (thisArgs === void 0) { thisArgs = null; }\r\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\r\n        });\r\n    }\r\n    Event.map = map;\r\n    /**\r\n     * Given an event and an `each` function, returns another identical event and calls\r\n     * the `each` function per each element.\r\n     */\r\n    function forEach(event, each) {\r\n        return snapshot(function (listener, thisArgs, disposables) {\r\n            if (thisArgs === void 0) { thisArgs = null; }\r\n            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\r\n        });\r\n    }\r\n    Event.forEach = forEach;\r\n    function filter(event, filter) {\r\n        return snapshot(function (listener, thisArgs, disposables) {\r\n            if (thisArgs === void 0) { thisArgs = null; }\r\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\r\n        });\r\n    }\r\n    Event.filter = filter;\r\n    /**\r\n     * Given an event, returns the same event but typed as `Event<void>`.\r\n     */\r\n    function signal(event) {\r\n        return event;\r\n    }\r\n    Event.signal = signal;\r\n    /**\r\n     * Given a collection of events, returns a single event which emits\r\n     * whenever any of the provided events emit.\r\n     */\r\n    function any() {\r\n        var events = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            events[_i] = arguments[_i];\r\n        }\r\n        return function (listener, thisArgs, disposables) {\r\n            if (thisArgs === void 0) { thisArgs = null; }\r\n            return combinedDisposable.apply(void 0, events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\r\n        };\r\n    }\r\n    Event.any = any;\r\n    /**\r\n     * Given an event and a `merge` function, returns another event which maps each element\r\n     * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\r\n     */\r\n    function reduce(event, merge, initial) {\r\n        var output = initial;\r\n        return map(event, function (e) {\r\n            output = merge(output, e);\r\n            return output;\r\n        });\r\n    }\r\n    Event.reduce = reduce;\r\n    /**\r\n     * Given a chain of event processing functions (filter, map, etc), each\r\n     * function will be invoked per event & per listener. Snapshotting an event\r\n     * chain allows each function to be invoked just once per event.\r\n     */\r\n    function snapshot(event) {\r\n        var listener;\r\n        var emitter = new Emitter({\r\n            onFirstListenerAdd: function () {\r\n                listener = event(emitter.fire, emitter);\r\n            },\r\n            onLastListenerRemove: function () {\r\n                listener.dispose();\r\n            }\r\n        });\r\n        return emitter.event;\r\n    }\r\n    Event.snapshot = snapshot;\r\n    function debounce(event, merge, delay, leading, leakWarningThreshold) {\r\n        if (delay === void 0) { delay = 100; }\r\n        if (leading === void 0) { leading = false; }\r\n        var subscription;\r\n        var output = undefined;\r\n        var handle = undefined;\r\n        var numDebouncedCalls = 0;\r\n        var emitter = new Emitter({\r\n            leakWarningThreshold: leakWarningThreshold,\r\n            onFirstListenerAdd: function () {\r\n                subscription = event(function (cur) {\r\n                    numDebouncedCalls++;\r\n                    output = merge(output, cur);\r\n                    if (leading && !handle) {\r\n                        emitter.fire(output);\r\n                    }\r\n                    clearTimeout(handle);\r\n                    handle = setTimeout(function () {\r\n                        var _output = output;\r\n                        output = undefined;\r\n                        handle = undefined;\r\n                        if (!leading || numDebouncedCalls > 1) {\r\n                            emitter.fire(_output);\r\n                        }\r\n                        numDebouncedCalls = 0;\r\n                    }, delay);\r\n                });\r\n            },\r\n            onLastListenerRemove: function () {\r\n                subscription.dispose();\r\n            }\r\n        });\r\n        return emitter.event;\r\n    }\r\n    Event.debounce = debounce;\r\n    /**\r\n     * Given an event, it returns another event which fires only once and as soon as\r\n     * the input event emits. The event data is the number of millis it took for the\r\n     * event to fire.\r\n     */\r\n    function stopwatch(event) {\r\n        var start = new Date().getTime();\r\n        return map(once(event), function (_) { return new Date().getTime() - start; });\r\n    }\r\n    Event.stopwatch = stopwatch;\r\n    /**\r\n     * Given an event, it returns another event which fires only when the event\r\n     * element changes.\r\n     */\r\n    function latch(event) {\r\n        var firstCall = true;\r\n        var cache;\r\n        return filter(event, function (value) {\r\n            var shouldEmit = firstCall || value !== cache;\r\n            firstCall = false;\r\n            cache = value;\r\n            return shouldEmit;\r\n        });\r\n    }\r\n    Event.latch = latch;\r\n    /**\r\n     * Buffers the provided event until a first listener comes\r\n     * along, at which point fire all the events at once and\r\n     * pipe the event from then on.\r\n     *\r\n     * ```typescript\r\n     * const emitter = new Emitter<number>();\r\n     * const event = emitter.event;\r\n     * const bufferedEvent = buffer(event);\r\n     *\r\n     * emitter.fire(1);\r\n     * emitter.fire(2);\r\n     * emitter.fire(3);\r\n     * // nothing...\r\n     *\r\n     * const listener = bufferedEvent(num => console.log(num));\r\n     * // 1, 2, 3\r\n     *\r\n     * emitter.fire(4);\r\n     * // 4\r\n     * ```\r\n     */\r\n    function buffer(event, nextTick, _buffer) {\r\n        if (nextTick === void 0) { nextTick = false; }\r\n        if (_buffer === void 0) { _buffer = []; }\r\n        var buffer = _buffer.slice();\r\n        var listener = event(function (e) {\r\n            if (buffer) {\r\n                buffer.push(e);\r\n            }\r\n            else {\r\n                emitter.fire(e);\r\n            }\r\n        });\r\n        var flush = function () {\r\n            if (buffer) {\r\n                buffer.forEach(function (e) { return emitter.fire(e); });\r\n            }\r\n            buffer = null;\r\n        };\r\n        var emitter = new Emitter({\r\n            onFirstListenerAdd: function () {\r\n                if (!listener) {\r\n                    listener = event(function (e) { return emitter.fire(e); });\r\n                }\r\n            },\r\n            onFirstListenerDidAdd: function () {\r\n                if (buffer) {\r\n                    if (nextTick) {\r\n                        setTimeout(flush);\r\n                    }\r\n                    else {\r\n                        flush();\r\n                    }\r\n                }\r\n            },\r\n            onLastListenerRemove: function () {\r\n                if (listener) {\r\n                    listener.dispose();\r\n                }\r\n                listener = null;\r\n            }\r\n        });\r\n        return emitter.event;\r\n    }\r\n    Event.buffer = buffer;\r\n    var ChainableEvent = /** @class */ (function () {\r\n        function ChainableEvent(event) {\r\n            this.event = event;\r\n        }\r\n        ChainableEvent.prototype.map = function (fn) {\r\n            return new ChainableEvent(map(this.event, fn));\r\n        };\r\n        ChainableEvent.prototype.forEach = function (fn) {\r\n            return new ChainableEvent(forEach(this.event, fn));\r\n        };\r\n        ChainableEvent.prototype.filter = function (fn) {\r\n            return new ChainableEvent(filter(this.event, fn));\r\n        };\r\n        ChainableEvent.prototype.reduce = function (merge, initial) {\r\n            return new ChainableEvent(reduce(this.event, merge, initial));\r\n        };\r\n        ChainableEvent.prototype.latch = function () {\r\n            return new ChainableEvent(latch(this.event));\r\n        };\r\n        ChainableEvent.prototype.debounce = function (merge, delay, leading, leakWarningThreshold) {\r\n            if (delay === void 0) { delay = 100; }\r\n            if (leading === void 0) { leading = false; }\r\n            return new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\r\n        };\r\n        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\r\n            return this.event(listener, thisArgs, disposables);\r\n        };\r\n        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\r\n            return once(this.event)(listener, thisArgs, disposables);\r\n        };\r\n        return ChainableEvent;\r\n    }());\r\n    function chain(event) {\r\n        return new ChainableEvent(event);\r\n    }\r\n    Event.chain = chain;\r\n    function fromNodeEventEmitter(emitter, eventName, map) {\r\n        if (map === void 0) { map = function (id) { return id; }; }\r\n        var fn = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return result.fire(map.apply(void 0, args));\r\n        };\r\n        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\r\n        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\r\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\r\n        return result.event;\r\n    }\r\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\r\n    function fromDOMEventEmitter(emitter, eventName, map) {\r\n        if (map === void 0) { map = function (id) { return id; }; }\r\n        var fn = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return result.fire(map.apply(void 0, args));\r\n        };\r\n        var onFirstListenerAdd = function () { return emitter.addEventListener(eventName, fn); };\r\n        var onLastListenerRemove = function () { return emitter.removeEventListener(eventName, fn); };\r\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\r\n        return result.event;\r\n    }\r\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\r\n    function fromPromise(promise) {\r\n        var emitter = new Emitter();\r\n        var shouldEmit = false;\r\n        promise\r\n            .then(undefined, function () { return null; })\r\n            .then(function () {\r\n            if (!shouldEmit) {\r\n                setTimeout(function () { return emitter.fire(undefined); }, 0);\r\n            }\r\n            else {\r\n                emitter.fire(undefined);\r\n            }\r\n        });\r\n        shouldEmit = true;\r\n        return emitter.event;\r\n    }\r\n    Event.fromPromise = fromPromise;\r\n    function toPromise(event) {\r\n        return new Promise(function (c) { return once(event)(c); });\r\n    }\r\n    Event.toPromise = toPromise;\r\n})(Event || (Event = {}));\r\nvar _globalLeakWarningThreshold = -1;\r\nvar LeakageMonitor = /** @class */ (function () {\r\n    function LeakageMonitor(customThreshold, name) {\r\n        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\r\n        this.customThreshold = customThreshold;\r\n        this.name = name;\r\n        this._warnCountdown = 0;\r\n    }\r\n    LeakageMonitor.prototype.dispose = function () {\r\n        if (this._stacks) {\r\n            this._stacks.clear();\r\n        }\r\n    };\r\n    LeakageMonitor.prototype.check = function (listenerCount) {\r\n        var _this = this;\r\n        var threshold = _globalLeakWarningThreshold;\r\n        if (typeof this.customThreshold === 'number') {\r\n            threshold = this.customThreshold;\r\n        }\r\n        if (threshold <= 0 || listenerCount < threshold) {\r\n            return undefined;\r\n        }\r\n        if (!this._stacks) {\r\n            this._stacks = new Map();\r\n        }\r\n        var stack = new Error().stack.split('\\n').slice(3).join('\\n');\r\n        var count = (this._stacks.get(stack) || 0);\r\n        this._stacks.set(stack, count + 1);\r\n        this._warnCountdown -= 1;\r\n        if (this._warnCountdown <= 0) {\r\n            // only warn on first exceed and then every time the limit\r\n            // is exceeded by 50% again\r\n            this._warnCountdown = threshold * 0.5;\r\n            // find most frequent listener and print warning\r\n            var topStack_1;\r\n            var topCount_1 = 0;\r\n            this._stacks.forEach(function (count, stack) {\r\n                if (!topStack_1 || topCount_1 < count) {\r\n                    topStack_1 = stack;\r\n                    topCount_1 = count;\r\n                }\r\n            });\r\n            console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\r\n            console.warn(topStack_1);\r\n        }\r\n        return function () {\r\n            var count = (_this._stacks.get(stack) || 0);\r\n            _this._stacks.set(stack, count - 1);\r\n        };\r\n    };\r\n    return LeakageMonitor;\r\n}());\r\n/**\r\n * The Emitter can be used to expose an Event to the public\r\n * to fire it from the insides.\r\n * Sample:\r\n    class Document {\r\n\r\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\r\n\r\n        public onDidChange = this._onDidChange.event;\r\n\r\n        // getter-style\r\n        // get onDidChange(): Event<(value:string)=>any> {\r\n        // \treturn this._onDidChange.event;\r\n        // }\r\n\r\n        private _doIt() {\r\n            //...\r\n            this._onDidChange.fire(value);\r\n        }\r\n    }\r\n */\r\nvar Emitter = /** @class */ (function () {\r\n    function Emitter(options) {\r\n        this._disposed = false;\r\n        this._options = options;\r\n        this._leakageMon = _globalLeakWarningThreshold > 0\r\n            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\r\n            : undefined;\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"event\", {\r\n        /**\r\n         * For the public to allow to subscribe\r\n         * to events from this Emitter\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._event) {\r\n                this._event = function (listener, thisArgs, disposables) {\r\n                    if (!_this._listeners) {\r\n                        _this._listeners = new LinkedList();\r\n                    }\r\n                    var firstListener = _this._listeners.isEmpty();\r\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\r\n                        _this._options.onFirstListenerAdd(_this);\r\n                    }\r\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\r\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\r\n                        _this._options.onFirstListenerDidAdd(_this);\r\n                    }\r\n                    if (_this._options && _this._options.onListenerDidAdd) {\r\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\r\n                    }\r\n                    // check and record this emitter for potential leakage\r\n                    var removeMonitor;\r\n                    if (_this._leakageMon) {\r\n                        removeMonitor = _this._leakageMon.check(_this._listeners.size);\r\n                    }\r\n                    var result;\r\n                    result = {\r\n                        dispose: function () {\r\n                            if (removeMonitor) {\r\n                                removeMonitor();\r\n                            }\r\n                            result.dispose = Emitter._noop;\r\n                            if (!_this._disposed) {\r\n                                remove();\r\n                                if (_this._options && _this._options.onLastListenerRemove) {\r\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\r\n                                    if (!hasListeners) {\r\n                                        _this._options.onLastListenerRemove(_this);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n                    if (disposables instanceof DisposableStore) {\r\n                        disposables.add(result);\r\n                    }\r\n                    else if (Array.isArray(disposables)) {\r\n                        disposables.push(result);\r\n                    }\r\n                    return result;\r\n                };\r\n            }\r\n            return this._event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    Emitter.prototype.fire = function (event) {\r\n        if (this._listeners) {\r\n            // put all [listener,event]-pairs into delivery queue\r\n            // then emit all event. an inner/nested event might be\r\n            // the driver of this\r\n            if (!this._deliveryQueue) {\r\n                this._deliveryQueue = new LinkedList();\r\n            }\r\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\r\n                this._deliveryQueue.push([e.value, event]);\r\n            }\r\n            while (this._deliveryQueue.size > 0) {\r\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\r\n                try {\r\n                    if (typeof listener === 'function') {\r\n                        listener.call(undefined, event_1);\r\n                    }\r\n                    else {\r\n                        listener[0].call(listener[1], event_1);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    onUnexpectedError(e);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Emitter.prototype.dispose = function () {\r\n        if (this._listeners) {\r\n            this._listeners.clear();\r\n        }\r\n        if (this._deliveryQueue) {\r\n            this._deliveryQueue.clear();\r\n        }\r\n        if (this._leakageMon) {\r\n            this._leakageMon.dispose();\r\n        }\r\n        this._disposed = true;\r\n    };\r\n    Emitter._noop = function () { };\r\n    return Emitter;\r\n}());\r\nexport { Emitter };\r\nvar PauseableEmitter = /** @class */ (function (_super) {\r\n    __extends(PauseableEmitter, _super);\r\n    function PauseableEmitter(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this._isPaused = 0;\r\n        _this._eventQueue = new LinkedList();\r\n        _this._mergeFn = options && options.merge;\r\n        return _this;\r\n    }\r\n    PauseableEmitter.prototype.pause = function () {\r\n        this._isPaused++;\r\n    };\r\n    PauseableEmitter.prototype.resume = function () {\r\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\r\n            if (this._mergeFn) {\r\n                // use the merge function to create a single composite\r\n                // event. make a copy in case firing pauses this emitter\r\n                var events = this._eventQueue.toArray();\r\n                this._eventQueue.clear();\r\n                _super.prototype.fire.call(this, this._mergeFn(events));\r\n            }\r\n            else {\r\n                // no merging, fire each event individually and test\r\n                // that this emitter isn't paused halfway through\r\n                while (!this._isPaused && this._eventQueue.size !== 0) {\r\n                    _super.prototype.fire.call(this, this._eventQueue.shift());\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PauseableEmitter.prototype.fire = function (event) {\r\n        if (this._listeners) {\r\n            if (this._isPaused !== 0) {\r\n                this._eventQueue.push(event);\r\n            }\r\n            else {\r\n                _super.prototype.fire.call(this, event);\r\n            }\r\n        }\r\n    };\r\n    return PauseableEmitter;\r\n}(Emitter));\r\nexport { PauseableEmitter };\r\nvar EventMultiplexer = /** @class */ (function () {\r\n    function EventMultiplexer() {\r\n        var _this = this;\r\n        this.hasListeners = false;\r\n        this.events = [];\r\n        this.emitter = new Emitter({\r\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\r\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\r\n        });\r\n    }\r\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\r\n        get: function () {\r\n            return this.emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    EventMultiplexer.prototype.add = function (event) {\r\n        var _this = this;\r\n        var e = { event: event, listener: null };\r\n        this.events.push(e);\r\n        if (this.hasListeners) {\r\n            this.hook(e);\r\n        }\r\n        var dispose = function () {\r\n            if (_this.hasListeners) {\r\n                _this.unhook(e);\r\n            }\r\n            var idx = _this.events.indexOf(e);\r\n            _this.events.splice(idx, 1);\r\n        };\r\n        return toDisposable(onceFn(dispose));\r\n    };\r\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\r\n        var _this = this;\r\n        this.hasListeners = true;\r\n        this.events.forEach(function (e) { return _this.hook(e); });\r\n    };\r\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\r\n        var _this = this;\r\n        this.hasListeners = false;\r\n        this.events.forEach(function (e) { return _this.unhook(e); });\r\n    };\r\n    EventMultiplexer.prototype.hook = function (e) {\r\n        var _this = this;\r\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\r\n    };\r\n    EventMultiplexer.prototype.unhook = function (e) {\r\n        if (e.listener) {\r\n            e.listener.dispose();\r\n        }\r\n        e.listener = null;\r\n    };\r\n    EventMultiplexer.prototype.dispose = function () {\r\n        this.emitter.dispose();\r\n    };\r\n    return EventMultiplexer;\r\n}());\r\nexport { EventMultiplexer };\r\n/**\r\n * The EventBufferer is useful in situations in which you want\r\n * to delay firing your events during some code.\r\n * You can wrap that code and be sure that the event will not\r\n * be fired during that wrap.\r\n *\r\n * ```\r\n * const emitter: Emitter;\r\n * const delayer = new EventDelayer();\r\n * const delayedEvent = delayer.wrapEvent(emitter.event);\r\n *\r\n * delayedEvent(console.log);\r\n *\r\n * delayer.bufferEvents(() => {\r\n *   emitter.fire(); // event will not be fired yet\r\n * });\r\n *\r\n * // event will only be fired at this point\r\n * ```\r\n */\r\nvar EventBufferer = /** @class */ (function () {\r\n    function EventBufferer() {\r\n        this.buffers = [];\r\n    }\r\n    EventBufferer.prototype.wrapEvent = function (event) {\r\n        var _this = this;\r\n        return function (listener, thisArgs, disposables) {\r\n            return event(function (i) {\r\n                var buffer = _this.buffers[_this.buffers.length - 1];\r\n                if (buffer) {\r\n                    buffer.push(function () { return listener.call(thisArgs, i); });\r\n                }\r\n                else {\r\n                    listener.call(thisArgs, i);\r\n                }\r\n            }, undefined, disposables);\r\n        };\r\n    };\r\n    EventBufferer.prototype.bufferEvents = function (fn) {\r\n        var buffer = [];\r\n        this.buffers.push(buffer);\r\n        var r = fn();\r\n        this.buffers.pop();\r\n        buffer.forEach(function (flush) { return flush(); });\r\n        return r;\r\n    };\r\n    return EventBufferer;\r\n}());\r\nexport { EventBufferer };\r\n/**\r\n * A Relay is an event forwarder which functions as a replugabble event pipe.\r\n * Once created, you can connect an input event to it and it will simply forward\r\n * events from that input event through its own `event` property. The `input`\r\n * can be changed at any point in time.\r\n */\r\nvar Relay = /** @class */ (function () {\r\n    function Relay() {\r\n        var _this = this;\r\n        this.listening = false;\r\n        this.inputEvent = Event.None;\r\n        this.inputEventListener = Disposable.None;\r\n        this.emitter = new Emitter({\r\n            onFirstListenerDidAdd: function () {\r\n                _this.listening = true;\r\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\r\n            },\r\n            onLastListenerRemove: function () {\r\n                _this.listening = false;\r\n                _this.inputEventListener.dispose();\r\n            }\r\n        });\r\n        this.event = this.emitter.event;\r\n    }\r\n    Object.defineProperty(Relay.prototype, \"input\", {\r\n        set: function (event) {\r\n            this.inputEvent = event;\r\n            if (this.listening) {\r\n                this.inputEventListener.dispose();\r\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Relay.prototype.dispose = function () {\r\n        this.inputEventListener.dispose();\r\n        this.emitter.dispose();\r\n    };\r\n    return Relay;\r\n}());\r\nexport { Relay };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter, Event } from './event.js';\r\nvar shortcutEvent = Object.freeze(function (callback, context) {\r\n    var handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose: function () { clearTimeout(handle); } };\r\n});\r\nexport var CancellationToken;\r\n(function (CancellationToken) {\r\n    function isCancellationToken(thing) {\r\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\r\n            return true;\r\n        }\r\n        if (thing instanceof MutableToken) {\r\n            return true;\r\n        }\r\n        if (!thing || typeof thing !== 'object') {\r\n            return false;\r\n        }\r\n        return typeof thing.isCancellationRequested === 'boolean'\r\n            && typeof thing.onCancellationRequested === 'function';\r\n    }\r\n    CancellationToken.isCancellationToken = isCancellationToken;\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: shortcutEvent\r\n    });\r\n})(CancellationToken || (CancellationToken = {}));\r\nvar MutableToken = /** @class */ (function () {\r\n    function MutableToken() {\r\n        this._isCancelled = false;\r\n        this._emitter = null;\r\n    }\r\n    MutableToken.prototype.cancel = function () {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\r\n        get: function () {\r\n            return this._isCancelled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\r\n        get: function () {\r\n            if (this._isCancelled) {\r\n                return shortcutEvent;\r\n            }\r\n            if (!this._emitter) {\r\n                this._emitter = new Emitter();\r\n            }\r\n            return this._emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MutableToken.prototype.dispose = function () {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = null;\r\n        }\r\n    };\r\n    return MutableToken;\r\n}());\r\nvar CancellationTokenSource = /** @class */ (function () {\r\n    function CancellationTokenSource(parent) {\r\n        this._token = undefined;\r\n        this._parentListener = undefined;\r\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\r\n    }\r\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\r\n        get: function () {\r\n            if (!this._token) {\r\n                // be lazy and create the token only when\r\n                // actually needed\r\n                this._token = new MutableToken();\r\n            }\r\n            return this._token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CancellationTokenSource.prototype.cancel = function () {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually cancel\r\n            this._token.cancel();\r\n        }\r\n    };\r\n    CancellationTokenSource.prototype.dispose = function (cancel) {\r\n        if (cancel === void 0) { cancel = false; }\r\n        if (cancel) {\r\n            this.cancel();\r\n        }\r\n        if (this._parentListener) {\r\n            this._parentListener.dispose();\r\n        }\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    };\r\n    return CancellationTokenSource;\r\n}());\r\nexport { CancellationTokenSource };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function once(fn) {\r\n    var _this = this;\r\n    var didCall = false;\r\n    var result;\r\n    return function () {\r\n        if (didCall) {\r\n            return result;\r\n        }\r\n        didCall = true;\r\n        result = fn.apply(_this, arguments);\r\n        return result;\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { illegalArgument } from './errors.js';\r\nvar KeyCodeStrMap = /** @class */ (function () {\r\n    function KeyCodeStrMap() {\r\n        this._keyCodeToStr = [];\r\n        this._strToKeyCode = Object.create(null);\r\n    }\r\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\r\n        this._keyCodeToStr[keyCode] = str;\r\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\r\n    };\r\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\r\n        return this._keyCodeToStr[keyCode];\r\n    };\r\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\r\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\r\n    };\r\n    return KeyCodeStrMap;\r\n}());\r\nvar uiMap = new KeyCodeStrMap();\r\nvar userSettingsUSMap = new KeyCodeStrMap();\r\nvar userSettingsGeneralMap = new KeyCodeStrMap();\r\n(function () {\r\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\r\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\r\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\r\n        uiMap.define(keyCode, uiLabel);\r\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\r\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\r\n    }\r\n    define(0 /* Unknown */, 'unknown');\r\n    define(1 /* Backspace */, 'Backspace');\r\n    define(2 /* Tab */, 'Tab');\r\n    define(3 /* Enter */, 'Enter');\r\n    define(4 /* Shift */, 'Shift');\r\n    define(5 /* Ctrl */, 'Ctrl');\r\n    define(6 /* Alt */, 'Alt');\r\n    define(7 /* PauseBreak */, 'PauseBreak');\r\n    define(8 /* CapsLock */, 'CapsLock');\r\n    define(9 /* Escape */, 'Escape');\r\n    define(10 /* Space */, 'Space');\r\n    define(11 /* PageUp */, 'PageUp');\r\n    define(12 /* PageDown */, 'PageDown');\r\n    define(13 /* End */, 'End');\r\n    define(14 /* Home */, 'Home');\r\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\r\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\r\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\r\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\r\n    define(19 /* Insert */, 'Insert');\r\n    define(20 /* Delete */, 'Delete');\r\n    define(21 /* KEY_0 */, '0');\r\n    define(22 /* KEY_1 */, '1');\r\n    define(23 /* KEY_2 */, '2');\r\n    define(24 /* KEY_3 */, '3');\r\n    define(25 /* KEY_4 */, '4');\r\n    define(26 /* KEY_5 */, '5');\r\n    define(27 /* KEY_6 */, '6');\r\n    define(28 /* KEY_7 */, '7');\r\n    define(29 /* KEY_8 */, '8');\r\n    define(30 /* KEY_9 */, '9');\r\n    define(31 /* KEY_A */, 'A');\r\n    define(32 /* KEY_B */, 'B');\r\n    define(33 /* KEY_C */, 'C');\r\n    define(34 /* KEY_D */, 'D');\r\n    define(35 /* KEY_E */, 'E');\r\n    define(36 /* KEY_F */, 'F');\r\n    define(37 /* KEY_G */, 'G');\r\n    define(38 /* KEY_H */, 'H');\r\n    define(39 /* KEY_I */, 'I');\r\n    define(40 /* KEY_J */, 'J');\r\n    define(41 /* KEY_K */, 'K');\r\n    define(42 /* KEY_L */, 'L');\r\n    define(43 /* KEY_M */, 'M');\r\n    define(44 /* KEY_N */, 'N');\r\n    define(45 /* KEY_O */, 'O');\r\n    define(46 /* KEY_P */, 'P');\r\n    define(47 /* KEY_Q */, 'Q');\r\n    define(48 /* KEY_R */, 'R');\r\n    define(49 /* KEY_S */, 'S');\r\n    define(50 /* KEY_T */, 'T');\r\n    define(51 /* KEY_U */, 'U');\r\n    define(52 /* KEY_V */, 'V');\r\n    define(53 /* KEY_W */, 'W');\r\n    define(54 /* KEY_X */, 'X');\r\n    define(55 /* KEY_Y */, 'Y');\r\n    define(56 /* KEY_Z */, 'Z');\r\n    define(57 /* Meta */, 'Meta');\r\n    define(58 /* ContextMenu */, 'ContextMenu');\r\n    define(59 /* F1 */, 'F1');\r\n    define(60 /* F2 */, 'F2');\r\n    define(61 /* F3 */, 'F3');\r\n    define(62 /* F4 */, 'F4');\r\n    define(63 /* F5 */, 'F5');\r\n    define(64 /* F6 */, 'F6');\r\n    define(65 /* F7 */, 'F7');\r\n    define(66 /* F8 */, 'F8');\r\n    define(67 /* F9 */, 'F9');\r\n    define(68 /* F10 */, 'F10');\r\n    define(69 /* F11 */, 'F11');\r\n    define(70 /* F12 */, 'F12');\r\n    define(71 /* F13 */, 'F13');\r\n    define(72 /* F14 */, 'F14');\r\n    define(73 /* F15 */, 'F15');\r\n    define(74 /* F16 */, 'F16');\r\n    define(75 /* F17 */, 'F17');\r\n    define(76 /* F18 */, 'F18');\r\n    define(77 /* F19 */, 'F19');\r\n    define(78 /* NumLock */, 'NumLock');\r\n    define(79 /* ScrollLock */, 'ScrollLock');\r\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\r\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\r\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\r\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\r\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\r\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\r\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\r\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\r\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\r\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\r\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\r\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\r\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\r\n    define(91 /* OEM_8 */, 'OEM_8');\r\n    define(92 /* OEM_102 */, 'OEM_102');\r\n    define(93 /* NUMPAD_0 */, 'NumPad0');\r\n    define(94 /* NUMPAD_1 */, 'NumPad1');\r\n    define(95 /* NUMPAD_2 */, 'NumPad2');\r\n    define(96 /* NUMPAD_3 */, 'NumPad3');\r\n    define(97 /* NUMPAD_4 */, 'NumPad4');\r\n    define(98 /* NUMPAD_5 */, 'NumPad5');\r\n    define(99 /* NUMPAD_6 */, 'NumPad6');\r\n    define(100 /* NUMPAD_7 */, 'NumPad7');\r\n    define(101 /* NUMPAD_8 */, 'NumPad8');\r\n    define(102 /* NUMPAD_9 */, 'NumPad9');\r\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\r\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\r\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\r\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\r\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\r\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\r\n})();\r\nexport var KeyCodeUtils;\r\n(function (KeyCodeUtils) {\r\n    function toString(keyCode) {\r\n        return uiMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toString = toString;\r\n    function fromString(key) {\r\n        return uiMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromString = fromString;\r\n    function toUserSettingsUS(keyCode) {\r\n        return userSettingsUSMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\r\n    function toUserSettingsGeneral(keyCode) {\r\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\r\n    function fromUserSettings(key) {\r\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\r\n})(KeyCodeUtils || (KeyCodeUtils = {}));\r\nexport function KeyChord(firstPart, secondPart) {\r\n    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\r\n    return (firstPart | chordPart) >>> 0;\r\n}\r\nexport function createKeybinding(keybinding, OS) {\r\n    if (keybinding === 0) {\r\n        return null;\r\n    }\r\n    var firstPart = (keybinding & 0x0000FFFF) >>> 0;\r\n    var chordPart = (keybinding & 0xFFFF0000) >>> 16;\r\n    if (chordPart !== 0) {\r\n        return new ChordKeybinding([\r\n            createSimpleKeybinding(firstPart, OS),\r\n            createSimpleKeybinding(chordPart, OS)\r\n        ]);\r\n    }\r\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\r\n}\r\nexport function createSimpleKeybinding(keybinding, OS) {\r\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\r\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\r\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\r\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\r\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\r\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\r\n    var keyCode = (keybinding & 255 /* KeyCode */);\r\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\r\n}\r\nvar SimpleKeybinding = /** @class */ (function () {\r\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyCode = keyCode;\r\n    }\r\n    SimpleKeybinding.prototype.equals = function (other) {\r\n        return (this.ctrlKey === other.ctrlKey\r\n            && this.shiftKey === other.shiftKey\r\n            && this.altKey === other.altKey\r\n            && this.metaKey === other.metaKey\r\n            && this.keyCode === other.keyCode);\r\n    };\r\n    SimpleKeybinding.prototype.isModifierKey = function () {\r\n        return (this.keyCode === 0 /* Unknown */\r\n            || this.keyCode === 5 /* Ctrl */\r\n            || this.keyCode === 57 /* Meta */\r\n            || this.keyCode === 6 /* Alt */\r\n            || this.keyCode === 4 /* Shift */);\r\n    };\r\n    SimpleKeybinding.prototype.toChord = function () {\r\n        return new ChordKeybinding([this]);\r\n    };\r\n    /**\r\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\r\n     */\r\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\r\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\r\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\r\n            || (this.altKey && this.keyCode === 6 /* Alt */)\r\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\r\n    };\r\n    return SimpleKeybinding;\r\n}());\r\nexport { SimpleKeybinding };\r\nvar ChordKeybinding = /** @class */ (function () {\r\n    function ChordKeybinding(parts) {\r\n        if (parts.length === 0) {\r\n            throw illegalArgument(\"parts\");\r\n        }\r\n        this.parts = parts;\r\n    }\r\n    ChordKeybinding.prototype.equals = function (other) {\r\n        if (other === null) {\r\n            return false;\r\n        }\r\n        if (this.parts.length !== other.parts.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.parts.length; i++) {\r\n            if (!this.parts[i].equals(other.parts[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return ChordKeybinding;\r\n}());\r\nexport { ChordKeybinding };\r\nvar ResolvedKeybindingPart = /** @class */ (function () {\r\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyLabel = kbLabel;\r\n        this.keyAriaLabel = kbAriaLabel;\r\n    }\r\n    return ResolvedKeybindingPart;\r\n}());\r\nexport { ResolvedKeybindingPart };\r\n/**\r\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\r\n */\r\nvar ResolvedKeybinding = /** @class */ (function () {\r\n    function ResolvedKeybinding() {\r\n    }\r\n    return ResolvedKeybinding;\r\n}());\r\nexport { ResolvedKeybinding };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\r\nexport var MarkerTag;\r\n(function (MarkerTag) {\r\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\r\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\r\n})(MarkerTag || (MarkerTag = {}));\r\nexport var MarkerSeverity;\r\n(function (MarkerSeverity) {\r\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\r\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\r\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\r\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\r\n})(MarkerSeverity || (MarkerSeverity = {}));\r\n/**\r\n * Virtual Key Codes, the value does not hold any inherent meaning.\r\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n * But these are \"more general\", as they should work across browsers & OS`s.\r\n */\r\nexport var KeyCode;\r\n(function (KeyCode) {\r\n    /**\r\n     * Placed first to cover the 0 value of the enum.\r\n     */\r\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\r\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\r\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\r\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\r\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\r\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\r\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\r\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\r\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\r\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\r\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\r\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\r\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\r\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\r\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\r\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\r\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\r\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\r\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\r\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\r\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\r\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\r\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\r\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\r\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\r\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\r\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\r\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\r\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\r\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\r\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\r\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\r\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\r\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\r\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\r\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\r\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\r\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\r\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\r\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\r\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\r\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\r\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\r\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\r\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\r\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\r\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\r\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\r\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\r\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\r\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\r\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\r\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\r\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\r\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\r\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\r\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\r\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\r\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\r\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\r\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\r\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\r\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\r\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\r\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\r\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\r\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\r\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\r\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\r\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\r\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\r\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\r\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\r\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\r\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\r\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\r\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\r\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\r\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\r\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ';:' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\r\n    /**\r\n     * For any country/region, the '+' key\r\n     * For the US standard keyboard, the '=+' key\r\n     */\r\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\r\n    /**\r\n     * For any country/region, the ',' key\r\n     * For the US standard keyboard, the ',<' key\r\n     */\r\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\r\n    /**\r\n     * For any country/region, the '-' key\r\n     * For the US standard keyboard, the '-_' key\r\n     */\r\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\r\n    /**\r\n     * For any country/region, the '.' key\r\n     * For the US standard keyboard, the '.>' key\r\n     */\r\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '/?' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '`~' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '[{' key\r\n     */\r\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '\\|' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ']}' key\r\n     */\r\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ''\"' key\r\n     */\r\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\r\n    /**\r\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\r\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\r\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\r\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\r\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\r\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\r\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\r\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\r\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\r\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\r\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\r\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\r\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\r\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\r\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\r\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\r\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\r\n    /**\r\n     * Cover all key codes when IME is processing input.\r\n     */\r\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\r\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\r\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\r\n    /**\r\n     * Placed last to cover the length of the enum.\r\n     * Please do not depend on this value!\r\n     */\r\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\r\n})(KeyCode || (KeyCode = {}));\r\n/**\r\n * The direction of a selection.\r\n */\r\nexport var SelectionDirection;\r\n(function (SelectionDirection) {\r\n    /**\r\n     * The selection starts above where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\r\n    /**\r\n     * The selection starts below where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\r\n})(SelectionDirection || (SelectionDirection = {}));\r\nexport var ScrollbarVisibility;\r\n(function (ScrollbarVisibility) {\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\r\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\r\n/**\r\n * Vertical Lane in the overview ruler of the editor.\r\n */\r\nexport var OverviewRulerLane;\r\n(function (OverviewRulerLane) {\r\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\r\n})(OverviewRulerLane || (OverviewRulerLane = {}));\r\n/**\r\n * Position in the minimap to render the decoration.\r\n */\r\nexport var MinimapPosition;\r\n(function (MinimapPosition) {\r\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\r\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\r\n})(MinimapPosition || (MinimapPosition = {}));\r\n/**\r\n * End of line character preference.\r\n */\r\nexport var EndOfLinePreference;\r\n(function (EndOfLinePreference) {\r\n    /**\r\n     * Use the end of line character identified in the text buffer.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\r\n})(EndOfLinePreference || (EndOfLinePreference = {}));\r\n/**\r\n * The default end of line to use when instantiating models.\r\n */\r\nexport var DefaultEndOfLine;\r\n(function (DefaultEndOfLine) {\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\r\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\r\n/**\r\n * End of line character preference.\r\n */\r\nexport var EndOfLineSequence;\r\n(function (EndOfLineSequence) {\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\r\n})(EndOfLineSequence || (EndOfLineSequence = {}));\r\n/**\r\n * Describes the behavior of decorations when typing/editing near their edges.\r\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\r\n */\r\nexport var TrackedRangeStickiness;\r\n(function (TrackedRangeStickiness) {\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\r\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\r\nexport var ScrollType;\r\n(function (ScrollType) {\r\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\r\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\r\n})(ScrollType || (ScrollType = {}));\r\n/**\r\n * Describes the reason the cursor has changed its position.\r\n */\r\nexport var CursorChangeReason;\r\n(function (CursorChangeReason) {\r\n    /**\r\n     * Unknown or not set.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\r\n    /**\r\n     * A `model.setValue()` was called.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\r\n    /**\r\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\r\n    /**\r\n     * There was an explicit user gesture.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\r\n    /**\r\n     * There was a Paste.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\r\n    /**\r\n     * There was an Undo.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\r\n    /**\r\n     * There was a Redo.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\r\n})(CursorChangeReason || (CursorChangeReason = {}));\r\nexport var RenderMinimap;\r\n(function (RenderMinimap) {\r\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\r\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\r\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\r\n})(RenderMinimap || (RenderMinimap = {}));\r\n/**\r\n * A positioning preference for rendering content widgets.\r\n */\r\nexport var ContentWidgetPositionPreference;\r\n(function (ContentWidgetPositionPreference) {\r\n    /**\r\n     * Place the content widget exactly at a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\r\n    /**\r\n     * Place the content widget above a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\r\n    /**\r\n     * Place the content widget below a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\r\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\r\n/**\r\n * A positioning preference for rendering overlay widgets.\r\n */\r\nexport var OverlayWidgetPositionPreference;\r\n(function (OverlayWidgetPositionPreference) {\r\n    /**\r\n     * Position the overlay widget in the top right corner\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\r\n    /**\r\n     * Position the overlay widget in the bottom right corner\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\r\n    /**\r\n     * Position the overlay widget in the top center\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\r\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\r\n/**\r\n * Type of hit element with the mouse in the editor.\r\n */\r\nexport var MouseTargetType;\r\n(function (MouseTargetType) {\r\n    /**\r\n     * Mouse is on top of an unknown element.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    /**\r\n     * Mouse is on top of the textarea used for input.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\r\n    /**\r\n     * Mouse is on top of the glyph margin\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\r\n    /**\r\n     * Mouse is on top of the line numbers\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\r\n    /**\r\n     * Mouse is on top of the line decorations\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\r\n    /**\r\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\r\n    /**\r\n     * Mouse is on top of text in the content.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\r\n    /**\r\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\r\n    /**\r\n     * Mouse is on top of a view zone in the content.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\r\n    /**\r\n     * Mouse is on top of a content widget.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\r\n    /**\r\n     * Mouse is on top of the decorations overview ruler.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\r\n    /**\r\n     * Mouse is on top of a scrollbar.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\r\n    /**\r\n     * Mouse is on top of an overlay widget.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\r\n    /**\r\n     * Mouse is outside of the editor.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\r\n})(MouseTargetType || (MouseTargetType = {}));\r\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\r\nexport var IndentAction;\r\n(function (IndentAction) {\r\n    /**\r\n     * Insert new line and copy the previous line's indentation.\r\n     */\r\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Insert new line and indent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\r\n    /**\r\n     * Insert two new lines:\r\n     *  - the first one indented which will hold the cursor\r\n     *  - the second one at the same indentation level\r\n     */\r\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\r\n    /**\r\n     * Insert new line and outdent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\r\n})(IndentAction || (IndentAction = {}));\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\r\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\r\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\r\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\r\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\r\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\r\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\r\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\r\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\r\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\r\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\r\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\r\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\r\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\r\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\r\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\r\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\r\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\r\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\r\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\r\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\r\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\r\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\r\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\r\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\r\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\nexport var CompletionItemTag;\r\n(function (CompletionItemTag) {\r\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\nexport var CompletionItemInsertTextRule;\r\n(function (CompletionItemInsertTextRule) {\r\n    /**\r\n     * Adjust whitespace/indentation of multiline insert texts to\r\n     * match the current line indentation.\r\n     */\r\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\r\n    /**\r\n     * `insertText` is a snippet.\r\n     */\r\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\r\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\r\n/**\r\n * How a suggest provider was triggered.\r\n */\r\nexport var CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\r\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\r\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\r\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\r\nexport var SignatureHelpTriggerKind;\r\n(function (SignatureHelpTriggerKind) {\r\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\r\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\r\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\r\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\r\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\r\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\r\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\r\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\r\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\r\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\r\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\r\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\r\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\r\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\r\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\r\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\r\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\r\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\r\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\r\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\r\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\r\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\r\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\r\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\r\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\r\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\r\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\r\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\r\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolTag;\r\n(function (SymbolTag) {\r\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\r\n})(SymbolTag || (SymbolTag = {}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Position } from './position.js';\r\nimport { Range } from './range.js';\r\n/**\r\n * A selection in the editor.\r\n * The selection is a range that has an orientation.\r\n */\r\nvar Selection = /** @class */ (function (_super) {\r\n    __extends(Selection, _super);\r\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\r\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\r\n        _this.selectionStartLineNumber = selectionStartLineNumber;\r\n        _this.selectionStartColumn = selectionStartColumn;\r\n        _this.positionLineNumber = positionLineNumber;\r\n        _this.positionColumn = positionColumn;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Transform to a human-readable representation.\r\n     */\r\n    Selection.prototype.toString = function () {\r\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\r\n    };\r\n    /**\r\n     * Test if equals other selection.\r\n     */\r\n    Selection.prototype.equalsSelection = function (other) {\r\n        return (Selection.selectionsEqual(this, other));\r\n    };\r\n    /**\r\n     * Test if the two selections are equal.\r\n     */\r\n    Selection.selectionsEqual = function (a, b) {\r\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\r\n            a.selectionStartColumn === b.selectionStartColumn &&\r\n            a.positionLineNumber === b.positionLineNumber &&\r\n            a.positionColumn === b.positionColumn);\r\n    };\r\n    /**\r\n     * Get directions (LTR or RTL).\r\n     */\r\n    Selection.prototype.getDirection = function () {\r\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\r\n            return 0 /* LTR */;\r\n        }\r\n        return 1 /* RTL */;\r\n    };\r\n    /**\r\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\r\n     */\r\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n        if (this.getDirection() === 0 /* LTR */) {\r\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n        }\r\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\r\n    };\r\n    /**\r\n     * Get the position at `positionLineNumber` and `positionColumn`.\r\n     */\r\n    Selection.prototype.getPosition = function () {\r\n        return new Position(this.positionLineNumber, this.positionColumn);\r\n    };\r\n    /**\r\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\r\n     */\r\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n        if (this.getDirection() === 0 /* LTR */) {\r\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n        }\r\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\r\n    };\r\n    // ----\r\n    /**\r\n     * Create a `Selection` from one or two positions\r\n     */\r\n    Selection.fromPositions = function (start, end) {\r\n        if (end === void 0) { end = start; }\r\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\r\n    };\r\n    /**\r\n     * Create a `Selection` from an `ISelection`.\r\n     */\r\n    Selection.liftSelection = function (sel) {\r\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\r\n    };\r\n    /**\r\n     * `a` equals `b`.\r\n     */\r\n    Selection.selectionsArrEqual = function (a, b) {\r\n        if (a && !b || !a && b) {\r\n            return false;\r\n        }\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (a.length !== b.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0, len = a.length; i < len; i++) {\r\n            if (!this.selectionsEqual(a[i], b[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if `obj` is an `ISelection`.\r\n     */\r\n    Selection.isISelection = function (obj) {\r\n        return (obj\r\n            && (typeof obj.selectionStartLineNumber === 'number')\r\n            && (typeof obj.selectionStartColumn === 'number')\r\n            && (typeof obj.positionLineNumber === 'number')\r\n            && (typeof obj.positionColumn === 'number'));\r\n    };\r\n    /**\r\n     * Create with a direction.\r\n     */\r\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\r\n        if (direction === 0 /* LTR */) {\r\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\r\n        }\r\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\r\n    };\r\n    return Selection;\r\n}(Range));\r\nexport { Selection };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar Token = /** @class */ (function () {\r\n    function Token(offset, type, language) {\r\n        this.offset = offset | 0; // @perf\r\n        this.type = type;\r\n        this.language = language;\r\n    }\r\n    Token.prototype.toString = function () {\r\n        return '(' + this.offset + ', ' + this.type + ')';\r\n    };\r\n    return Token;\r\n}());\r\nexport { Token };\r\nvar TokenizationResult = /** @class */ (function () {\r\n    function TokenizationResult(tokens, endState) {\r\n        this.tokens = tokens;\r\n        this.endState = endState;\r\n    }\r\n    return TokenizationResult;\r\n}());\r\nexport { TokenizationResult };\r\nvar TokenizationResult2 = /** @class */ (function () {\r\n    function TokenizationResult2(tokens, endState) {\r\n        this.tokens = tokens;\r\n        this.endState = endState;\r\n    }\r\n    return TokenizationResult2;\r\n}());\r\nexport { TokenizationResult2 };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './promise-polyfill/polyfill.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Selection } from '../core/selection.js';\r\nimport { Token } from '../core/token.js';\r\nimport * as standaloneEnums from './standaloneEnums.js';\r\nvar KeyMod = /** @class */ (function () {\r\n    function KeyMod() {\r\n    }\r\n    KeyMod.chord = function (firstPart, secondPart) {\r\n        return KeyChord(firstPart, secondPart);\r\n    };\r\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\r\n    KeyMod.Shift = 1024 /* Shift */;\r\n    KeyMod.Alt = 512 /* Alt */;\r\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\r\n    return KeyMod;\r\n}());\r\nexport { KeyMod };\r\nexport function createMonacoBaseAPI() {\r\n    return {\r\n        editor: undefined,\r\n        languages: undefined,\r\n        CancellationTokenSource: CancellationTokenSource,\r\n        Emitter: Emitter,\r\n        KeyCode: standaloneEnums.KeyCode,\r\n        KeyMod: KeyMod,\r\n        Position: Position,\r\n        Range: Range,\r\n        Selection: Selection,\r\n        SelectionDirection: standaloneEnums.SelectionDirection,\r\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\r\n        MarkerTag: standaloneEnums.MarkerTag,\r\n        Uri: URI,\r\n        Token: Token\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { mergeSort } from '../../../base/common/arrays.js';\r\nimport { stringDiff } from '../../../base/common/diff/diff.js';\r\nimport { FIN } from '../../../base/common/iterator.js';\r\nimport { globals } from '../../../base/common/platform.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { DiffComputer } from '../diff/diffComputer.js';\r\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\r\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\r\nimport { computeLinks } from '../modes/linkComputer.js';\r\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\r\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\r\nimport * as types from '../../../base/common/types.js';\r\n/**\r\n * @internal\r\n */\r\nvar MirrorModel = /** @class */ (function (_super) {\r\n    __extends(MirrorModel, _super);\r\n    function MirrorModel() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\r\n        get: function () {\r\n            return this._versionId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\r\n        get: function () {\r\n            return this._eol;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MirrorModel.prototype.getValue = function () {\r\n        return this.getText();\r\n    };\r\n    MirrorModel.prototype.getLinesContent = function () {\r\n        return this._lines.slice(0);\r\n    };\r\n    MirrorModel.prototype.getLineCount = function () {\r\n        return this._lines.length;\r\n    };\r\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\r\n        return this._lines[lineNumber - 1];\r\n    };\r\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\r\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\r\n        if (wordAtText) {\r\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\r\n        }\r\n        return null;\r\n    };\r\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\r\n        var _this = this;\r\n        var obj;\r\n        var lineNumber = 0;\r\n        var lineText;\r\n        var wordRangesIdx = 0;\r\n        var wordRanges = [];\r\n        var next = function () {\r\n            if (wordRangesIdx < wordRanges.length) {\r\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\r\n                wordRangesIdx += 1;\r\n                if (!obj) {\r\n                    obj = { done: false, value: value };\r\n                }\r\n                else {\r\n                    obj.value = value;\r\n                }\r\n                return obj;\r\n            }\r\n            else if (lineNumber >= _this._lines.length) {\r\n                return FIN;\r\n            }\r\n            else {\r\n                lineText = _this._lines[lineNumber];\r\n                wordRanges = _this._wordenize(lineText, wordDefinition);\r\n                wordRangesIdx = 0;\r\n                lineNumber += 1;\r\n                return next();\r\n            }\r\n        };\r\n        return { next: next };\r\n    };\r\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\r\n        var content = this._lines[lineNumber - 1];\r\n        var ranges = this._wordenize(content, wordDefinition);\r\n        var words = [];\r\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\r\n            var range = ranges_1[_i];\r\n            words.push({\r\n                word: content.substring(range.start, range.end),\r\n                startColumn: range.start + 1,\r\n                endColumn: range.end + 1\r\n            });\r\n        }\r\n        return words;\r\n    };\r\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\r\n        var result = [];\r\n        var match;\r\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\r\n        while (match = wordDefinition.exec(content)) {\r\n            if (match[0].length === 0) {\r\n                // it did match the empty string\r\n                break;\r\n            }\r\n            result.push({ start: match.index, end: match.index + match[0].length });\r\n        }\r\n        return result;\r\n    };\r\n    MirrorModel.prototype.getValueInRange = function (range) {\r\n        range = this._validateRange(range);\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\r\n        }\r\n        var lineEnding = this._eol;\r\n        var startLineIndex = range.startLineNumber - 1;\r\n        var endLineIndex = range.endLineNumber - 1;\r\n        var resultLines = [];\r\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\r\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\r\n            resultLines.push(this._lines[i]);\r\n        }\r\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\r\n        return resultLines.join(lineEnding);\r\n    };\r\n    MirrorModel.prototype.offsetAt = function (position) {\r\n        position = this._validatePosition(position);\r\n        this._ensureLineStarts();\r\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\r\n    };\r\n    MirrorModel.prototype.positionAt = function (offset) {\r\n        offset = Math.floor(offset);\r\n        offset = Math.max(0, offset);\r\n        this._ensureLineStarts();\r\n        var out = this._lineStarts.getIndexOf(offset);\r\n        var lineLength = this._lines[out.index].length;\r\n        // Ensure we return a valid position\r\n        return {\r\n            lineNumber: 1 + out.index,\r\n            column: 1 + Math.min(out.remainder, lineLength)\r\n        };\r\n    };\r\n    MirrorModel.prototype._validateRange = function (range) {\r\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\r\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\r\n        if (start.lineNumber !== range.startLineNumber\r\n            || start.column !== range.startColumn\r\n            || end.lineNumber !== range.endLineNumber\r\n            || end.column !== range.endColumn) {\r\n            return {\r\n                startLineNumber: start.lineNumber,\r\n                startColumn: start.column,\r\n                endLineNumber: end.lineNumber,\r\n                endColumn: end.column\r\n            };\r\n        }\r\n        return range;\r\n    };\r\n    MirrorModel.prototype._validatePosition = function (position) {\r\n        if (!Position.isIPosition(position)) {\r\n            throw new Error('bad position');\r\n        }\r\n        var lineNumber = position.lineNumber, column = position.column;\r\n        var hasChanged = false;\r\n        if (lineNumber < 1) {\r\n            lineNumber = 1;\r\n            column = 1;\r\n            hasChanged = true;\r\n        }\r\n        else if (lineNumber > this._lines.length) {\r\n            lineNumber = this._lines.length;\r\n            column = this._lines[lineNumber - 1].length + 1;\r\n            hasChanged = true;\r\n        }\r\n        else {\r\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\r\n            if (column < 1) {\r\n                column = 1;\r\n                hasChanged = true;\r\n            }\r\n            else if (column > maxCharacter) {\r\n                column = maxCharacter;\r\n                hasChanged = true;\r\n            }\r\n        }\r\n        if (!hasChanged) {\r\n            return position;\r\n        }\r\n        else {\r\n            return { lineNumber: lineNumber, column: column };\r\n        }\r\n    };\r\n    return MirrorModel;\r\n}(BaseMirrorModel));\r\n/**\r\n * @internal\r\n */\r\nvar EditorSimpleWorker = /** @class */ (function () {\r\n    function EditorSimpleWorker(host, foreignModuleFactory) {\r\n        this._host = host;\r\n        this._models = Object.create(null);\r\n        this._foreignModuleFactory = foreignModuleFactory;\r\n        this._foreignModule = null;\r\n    }\r\n    EditorSimpleWorker.prototype.dispose = function () {\r\n        this._models = Object.create(null);\r\n    };\r\n    EditorSimpleWorker.prototype._getModel = function (uri) {\r\n        return this._models[uri];\r\n    };\r\n    EditorSimpleWorker.prototype._getModels = function () {\r\n        var _this = this;\r\n        var all = [];\r\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\r\n        return all;\r\n    };\r\n    EditorSimpleWorker.prototype.acceptNewModel = function (data) {\r\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\r\n    };\r\n    EditorSimpleWorker.prototype.acceptModelChanged = function (strURL, e) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        var model = this._models[strURL];\r\n        model.onEvents(e);\r\n    };\r\n    EditorSimpleWorker.prototype.acceptRemovedModel = function (strURL) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        delete this._models[strURL];\r\n    };\r\n    // ---- BEGIN diff --------------------------------------------------------------------------\r\n    EditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var original, modified, originalLines, modifiedLines, diffComputer, diffResult, identical;\r\n            return __generator(this, function (_a) {\r\n                original = this._getModel(originalUrl);\r\n                modified = this._getModel(modifiedUrl);\r\n                if (!original || !modified) {\r\n                    return [2 /*return*/, null];\r\n                }\r\n                originalLines = original.getLinesContent();\r\n                modifiedLines = modified.getLinesContent();\r\n                diffComputer = new DiffComputer(originalLines, modifiedLines, {\r\n                    shouldComputeCharChanges: true,\r\n                    shouldPostProcessCharChanges: true,\r\n                    shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\r\n                    shouldMakePrettyDiff: true,\r\n                    maxComputationTime: maxComputationTime\r\n                });\r\n                diffResult = diffComputer.computeDiff();\r\n                identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\r\n                return [2 /*return*/, {\r\n                        quitEarly: diffResult.quitEarly,\r\n                        identical: identical,\r\n                        changes: diffResult.changes\r\n                    }];\r\n            });\r\n        });\r\n    };\r\n    EditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\r\n        var originalLineCount = original.getLineCount();\r\n        var modifiedLineCount = modified.getLineCount();\r\n        if (originalLineCount !== modifiedLineCount) {\r\n            return false;\r\n        }\r\n        for (var line = 1; line <= originalLineCount; line++) {\r\n            var originalLine = original.getLineContent(line);\r\n            var modifiedLine = modified.getLineContent(line);\r\n            if (originalLine !== modifiedLine) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    EditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var model, result, lastEol, _i, edits_1, _a, range, text, eol, original, changes, editOffset, _b, changes_1, change, start, end, newEdit;\r\n            return __generator(this, function (_c) {\r\n                model = this._getModel(modelUrl);\r\n                if (!model) {\r\n                    return [2 /*return*/, edits];\r\n                }\r\n                result = [];\r\n                lastEol = undefined;\r\n                edits = mergeSort(edits, function (a, b) {\r\n                    if (a.range && b.range) {\r\n                        return Range.compareRangesUsingStarts(a.range, b.range);\r\n                    }\r\n                    // eol only changes should go to the end\r\n                    var aRng = a.range ? 0 : 1;\r\n                    var bRng = b.range ? 0 : 1;\r\n                    return aRng - bRng;\r\n                });\r\n                for (_i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\r\n                    _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\r\n                    if (typeof eol === 'number') {\r\n                        lastEol = eol;\r\n                    }\r\n                    if (Range.isEmpty(range) && !text) {\r\n                        // empty change\r\n                        continue;\r\n                    }\r\n                    original = model.getValueInRange(range);\r\n                    text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\r\n                    if (original === text) {\r\n                        // noop\r\n                        continue;\r\n                    }\r\n                    // make sure diff won't take too long\r\n                    if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\r\n                        result.push({ range: range, text: text });\r\n                        continue;\r\n                    }\r\n                    changes = stringDiff(original, text, false);\r\n                    editOffset = model.offsetAt(Range.lift(range).getStartPosition());\r\n                    for (_b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\r\n                        change = changes_1[_b];\r\n                        start = model.positionAt(editOffset + change.originalStart);\r\n                        end = model.positionAt(editOffset + change.originalStart + change.originalLength);\r\n                        newEdit = {\r\n                            text: text.substr(change.modifiedStart, change.modifiedLength),\r\n                            range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\r\n                        };\r\n                        if (model.getValueInRange(newEdit.range) !== newEdit.text) {\r\n                            result.push(newEdit);\r\n                        }\r\n                    }\r\n                }\r\n                if (typeof lastEol === 'number') {\r\n                    result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\r\n                }\r\n                return [2 /*return*/, result];\r\n            });\r\n        });\r\n    };\r\n    // ---- END minimal edits ---------------------------------------------------------------\r\n    EditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var model;\r\n            return __generator(this, function (_a) {\r\n                model = this._getModel(modelUrl);\r\n                if (!model) {\r\n                    return [2 /*return*/, null];\r\n                }\r\n                return [2 /*return*/, computeLinks(model)];\r\n            });\r\n        });\r\n    };\r\n    EditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var model, words, seen, wordDefRegExp, wordAt, iter, e, word;\r\n            return __generator(this, function (_a) {\r\n                model = this._getModel(modelUrl);\r\n                if (!model) {\r\n                    return [2 /*return*/, null];\r\n                }\r\n                words = [];\r\n                seen = new Set();\r\n                wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n                wordAt = model.getWordAtPosition(position, wordDefRegExp);\r\n                if (wordAt) {\r\n                    seen.add(model.getValueInRange(wordAt));\r\n                }\r\n                for (iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && seen.size <= EditorSimpleWorker._suggestionsLimit; e = iter.next()) {\r\n                    word = e.value;\r\n                    if (seen.has(word)) {\r\n                        continue;\r\n                    }\r\n                    seen.add(word);\r\n                    if (!isNaN(Number(word))) {\r\n                        continue;\r\n                    }\r\n                    words.push(word);\r\n                }\r\n                return [2 /*return*/, words];\r\n            });\r\n        });\r\n    };\r\n    // ---- END suggest --------------------------------------------------------------------------\r\n    //#region -- word ranges --\r\n    EditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var model, wordDefRegExp, result, line, words, _i, words_1, word, array;\r\n            return __generator(this, function (_a) {\r\n                model = this._getModel(modelUrl);\r\n                if (!model) {\r\n                    return [2 /*return*/, Object.create(null)];\r\n                }\r\n                wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n                result = Object.create(null);\r\n                for (line = range.startLineNumber; line < range.endLineNumber; line++) {\r\n                    words = model.getLineWords(line, wordDefRegExp);\r\n                    for (_i = 0, words_1 = words; _i < words_1.length; _i++) {\r\n                        word = words_1[_i];\r\n                        if (!isNaN(Number(word.word))) {\r\n                            continue;\r\n                        }\r\n                        array = result[word.word];\r\n                        if (!array) {\r\n                            array = [];\r\n                            result[word.word] = array;\r\n                        }\r\n                        array.push({\r\n                            startLineNumber: line,\r\n                            startColumn: word.startColumn,\r\n                            endLineNumber: line,\r\n                            endColumn: word.endColumn\r\n                        });\r\n                    }\r\n                }\r\n                return [2 /*return*/, result];\r\n            });\r\n        });\r\n    };\r\n    //#endregion\r\n    EditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var model, wordDefRegExp, selectionText, wordRange, word, result;\r\n            return __generator(this, function (_a) {\r\n                model = this._getModel(modelUrl);\r\n                if (!model) {\r\n                    return [2 /*return*/, null];\r\n                }\r\n                wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n                if (range.startColumn === range.endColumn) {\r\n                    range = {\r\n                        startLineNumber: range.startLineNumber,\r\n                        startColumn: range.startColumn,\r\n                        endLineNumber: range.endLineNumber,\r\n                        endColumn: range.endColumn + 1\r\n                    };\r\n                }\r\n                selectionText = model.getValueInRange(range);\r\n                wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\r\n                if (!wordRange) {\r\n                    return [2 /*return*/, null];\r\n                }\r\n                word = model.getValueInRange(wordRange);\r\n                result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\r\n                return [2 /*return*/, result];\r\n            });\r\n        });\r\n    };\r\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\r\n    EditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData, foreignHostMethods) {\r\n        var _this = this;\r\n        var proxyMethodRequest = function (method, args) {\r\n            return _this._host.fhr(method, args);\r\n        };\r\n        var foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\r\n        var ctx = {\r\n            host: foreignHost,\r\n            getMirrorModels: function () {\r\n                return _this._getModels();\r\n            }\r\n        };\r\n        if (this._foreignModuleFactory) {\r\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\r\n            // static foreing module\r\n            return Promise.resolve(types.getAllMethodNames(this._foreignModule));\r\n        }\r\n        // ESM-comment-begin\r\n        // \t\treturn new Promise<any>((resolve, reject) => {\r\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\r\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\r\n        // \r\n        // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\r\n        // \r\n        // \t\t\t}, reject);\r\n        // \t\t});\r\n        // ESM-comment-end\r\n        // ESM-uncomment-begin\r\n        return Promise.reject(new Error(\"Unexpected usage\"));\r\n        // ESM-uncomment-end\r\n    };\r\n    // foreign method request\r\n    EditorSimpleWorker.prototype.fmr = function (method, args) {\r\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    // ---- END diff --------------------------------------------------------------------------\r\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\r\n    EditorSimpleWorker._diffLimit = 100000;\r\n    // ---- BEGIN suggest --------------------------------------------------------------------------\r\n    EditorSimpleWorker._suggestionsLimit = 10000;\r\n    return EditorSimpleWorker;\r\n}());\r\nexport { EditorSimpleWorker };\r\n/**\r\n * Called on the worker side\r\n * @internal\r\n */\r\nexport function create(host) {\r\n    return new EditorSimpleWorker(host, null);\r\n}\r\nif (typeof importScripts === 'function') {\r\n    // Running in a web worker\r\n    globals.monaco = createMonacoBaseAPI();\r\n}\r\n","/**\r\n * Returns the last element of an array.\r\n * @param array The array.\r\n * @param n Which element from the end (default is zero).\r\n */\r\nexport function tail(array, n) {\r\n    if (n === void 0) { n = 0; }\r\n    return array[array.length - (1 + n)];\r\n}\r\nexport function tail2(arr) {\r\n    if (arr.length === 0) {\r\n        throw new Error('Invalid tail call');\r\n    }\r\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\r\n}\r\nexport function equals(one, other, itemEquals) {\r\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\r\n    if (one === other) {\r\n        return true;\r\n    }\r\n    if (!one || !other) {\r\n        return false;\r\n    }\r\n    if (one.length !== other.length) {\r\n        return false;\r\n    }\r\n    for (var i = 0, len = one.length; i < len; i++) {\r\n        if (!itemEquals(one[i], other[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function binarySearch(array, key, comparator) {\r\n    var low = 0, high = array.length - 1;\r\n    while (low <= high) {\r\n        var mid = ((low + high) / 2) | 0;\r\n        var comp = comparator(array[mid], key);\r\n        if (comp < 0) {\r\n            low = mid + 1;\r\n        }\r\n        else if (comp > 0) {\r\n            high = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return -(low + 1);\r\n}\r\n/**\r\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\r\n * are located before all elements where p(x) is true.\r\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\r\n */\r\nexport function findFirstInSorted(array, p) {\r\n    var low = 0, high = array.length;\r\n    if (high === 0) {\r\n        return 0; // no children\r\n    }\r\n    while (low < high) {\r\n        var mid = Math.floor((low + high) / 2);\r\n        if (p(array[mid])) {\r\n            high = mid;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    return low;\r\n}\r\n/**\r\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\r\n * so only use this when actually needing stable sort.\r\n */\r\nexport function mergeSort(data, compare) {\r\n    _sort(data, compare, 0, data.length - 1, []);\r\n    return data;\r\n}\r\nfunction _merge(a, compare, lo, mid, hi, aux) {\r\n    var leftIdx = lo, rightIdx = mid + 1;\r\n    for (var i = lo; i <= hi; i++) {\r\n        aux[i] = a[i];\r\n    }\r\n    for (var i = lo; i <= hi; i++) {\r\n        if (leftIdx > mid) {\r\n            // left side consumed\r\n            a[i] = aux[rightIdx++];\r\n        }\r\n        else if (rightIdx > hi) {\r\n            // right side consumed\r\n            a[i] = aux[leftIdx++];\r\n        }\r\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\r\n            // right element is less -> comes first\r\n            a[i] = aux[rightIdx++];\r\n        }\r\n        else {\r\n            // left element comes first (less or equal)\r\n            a[i] = aux[leftIdx++];\r\n        }\r\n    }\r\n}\r\nfunction _sort(a, compare, lo, hi, aux) {\r\n    if (hi <= lo) {\r\n        return;\r\n    }\r\n    var mid = lo + ((hi - lo) / 2) | 0;\r\n    _sort(a, compare, lo, mid, aux);\r\n    _sort(a, compare, mid + 1, hi, aux);\r\n    if (compare(a[mid], a[mid + 1]) <= 0) {\r\n        // left and right are sorted and if the last-left element is less\r\n        // or equals than the first-right element there is nothing else\r\n        // to do\r\n        return;\r\n    }\r\n    _merge(a, compare, lo, mid, hi, aux);\r\n}\r\nexport function groupBy(data, compare) {\r\n    var result = [];\r\n    var currentGroup = undefined;\r\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\r\n        var element = _a[_i];\r\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\r\n            currentGroup = [element];\r\n            result.push(currentGroup);\r\n        }\r\n        else {\r\n            currentGroup.push(element);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @returns New array with all falsy values removed. The original array IS NOT modified.\r\n */\r\nexport function coalesce(array) {\r\n    return array.filter(function (e) { return !!e; });\r\n}\r\n/**\r\n * @returns false if the provided object is an array and not empty.\r\n */\r\nexport function isFalsyOrEmpty(obj) {\r\n    return !Array.isArray(obj) || obj.length === 0;\r\n}\r\nexport function isNonEmptyArray(obj) {\r\n    return Array.isArray(obj) && obj.length > 0;\r\n}\r\n/**\r\n * Removes duplicates from the given array. The optional keyFn allows to specify\r\n * how elements are checked for equalness by returning a unique string for each.\r\n */\r\nexport function distinct(array, keyFn) {\r\n    if (!keyFn) {\r\n        return array.filter(function (element, position) {\r\n            return array.indexOf(element) === position;\r\n        });\r\n    }\r\n    var seen = Object.create(null);\r\n    return array.filter(function (elem) {\r\n        var key = keyFn(elem);\r\n        if (seen[key]) {\r\n            return false;\r\n        }\r\n        seen[key] = true;\r\n        return true;\r\n    });\r\n}\r\nexport function distinctES6(array) {\r\n    var seen = new Set();\r\n    return array.filter(function (element) {\r\n        if (seen.has(element)) {\r\n            return false;\r\n        }\r\n        seen.add(element);\r\n        return true;\r\n    });\r\n}\r\nexport function fromSet(set) {\r\n    var result = [];\r\n    set.forEach(function (o) { return result.push(o); });\r\n    return result;\r\n}\r\nexport function firstIndex(array, fn) {\r\n    for (var i = 0; i < array.length; i++) {\r\n        var element = array[i];\r\n        if (fn(element)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function first(array, fn, notFoundValue) {\r\n    if (notFoundValue === void 0) { notFoundValue = undefined; }\r\n    var index = firstIndex(array, fn);\r\n    return index < 0 ? notFoundValue : array[index];\r\n}\r\nexport function firstOrDefault(array, notFoundValue) {\r\n    return array.length > 0 ? array[0] : notFoundValue;\r\n}\r\nexport function flatten(arr) {\r\n    var _a;\r\n    return (_a = []).concat.apply(_a, arr);\r\n}\r\nexport function range(arg, to) {\r\n    var from = typeof to === 'number' ? arg : 0;\r\n    if (typeof to === 'number') {\r\n        from = arg;\r\n    }\r\n    else {\r\n        from = 0;\r\n        to = arg;\r\n    }\r\n    var result = [];\r\n    if (from <= to) {\r\n        for (var i = from; i < to; i++) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    else {\r\n        for (var i = from; i > to; i--) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Insert `insertArr` inside `target` at `insertIndex`.\r\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\r\n */\r\nexport function arrayInsert(target, insertIndex, insertArr) {\r\n    var before = target.slice(0, insertIndex);\r\n    var after = target.slice(insertIndex);\r\n    return before.concat(insertArr, after);\r\n}\r\n/**\r\n * Pushes an element to the start of the array, if found.\r\n */\r\nexport function pushToStart(arr, value) {\r\n    var index = arr.indexOf(value);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n        arr.unshift(value);\r\n    }\r\n}\r\n/**\r\n * Pushes an element to the end of the array, if found.\r\n */\r\nexport function pushToEnd(arr, value) {\r\n    var index = arr.indexOf(value);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n        arr.push(value);\r\n    }\r\n}\r\nexport function find(arr, predicate) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n        var element = arr[i];\r\n        if (predicate(element, i, arr)) {\r\n            return element;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexport function asArray(x) {\r\n    return Array.isArray(x) ? x : [x];\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\r\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\r\nvar initialized = false;\r\nexport function initialize(foreignModule) {\r\n    if (initialized) {\r\n        return;\r\n    }\r\n    initialized = true;\r\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\r\n        self.postMessage(msg);\r\n    }, function (host) { return new EditorSimpleWorker(host, foreignModule); });\r\n    self.onmessage = function (e) {\r\n        simpleWorker.onmessage(e.data);\r\n    };\r\n}\r\nself.onmessage = function (e) {\r\n    // Ignore first message in this case and initialize if not yet initialized\r\n    if (!initialized) {\r\n        initialize(null);\r\n    }\r\n};\r\n"],"sourceRoot":""}